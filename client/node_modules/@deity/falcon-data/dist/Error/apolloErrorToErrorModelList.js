"use strict";

exports.__esModule = true;
exports.apolloErrorToErrorModelList = void 0;

var _falconErrors = /*#__PURE__*/require("@deity/falcon-errors");

var apolloErrorToErrorModelList = function apolloErrorToErrorModelList(error) {
  var networkError = error.networkError,
      graphQLErrors = error.graphQLErrors;

  if (networkError) {
    return [{
      message: networkError.message,
      code: 'UNKNOWN'
    }];
  }

  if (graphQLErrors) {
    return graphQLErrors.reduce(function (result, _ref) {
      var message = _ref.message,
          _ref$extensions = _ref.extensions,
          extensions = _ref$extensions === void 0 ? {} : _ref$extensions;

      if (extensions.code === _falconErrors.codes.BAD_USER_INPUT && extensions.exception) {
        var userInputErrors = Object.keys(extensions.exception).map(function (x) {
          return {
            message: extensions.exception[x],
            code: extensions.code || 'UNKNOWN',
            path: x
          };
        });
        return [].concat(result, userInputErrors);
      }

      return [].concat(result, [{
        message: message,
        code: extensions.code
      }]);
    }, []);
  }

  return [{
    message: error.message,
    code: 'UNKNOWN'
  }];
};

exports.apolloErrorToErrorModelList = apolloErrorToErrorModelList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9FcnJvci9hcG9sbG9FcnJvclRvRXJyb3JNb2RlbExpc3QudHMiXSwibmFtZXMiOlsiYXBvbGxvRXJyb3JUb0Vycm9yTW9kZWxMaXN0IiwiZXJyb3IiLCJuZXR3b3JrRXJyb3IiLCJncmFwaFFMRXJyb3JzIiwibWVzc2FnZSIsImNvZGUiLCJyZWR1Y2UiLCJyZXN1bHQiLCJleHRlbnNpb25zIiwiY29kZXMiLCJCQURfVVNFUl9JTlBVVCIsImV4Y2VwdGlvbiIsInVzZXJJbnB1dEVycm9ycyIsIk9iamVjdCIsImtleXMiLCJtYXAiLCJ4IiwicGF0aCJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQTs7QUFHTyxJQUFNQSwyQkFBMkIsR0FBRyxTQUE5QkEsMkJBQThCLENBQUNDLEtBQUQsRUFBc0M7QUFDL0UsTUFBUUMsWUFBUixHQUF3Q0QsS0FBeEMsQ0FBUUMsWUFBUjtBQUFBLE1BQXNCQyxhQUF0QixHQUF3Q0YsS0FBeEMsQ0FBc0JFLGFBQXRCOztBQUVBLE1BQUlELFlBQUosRUFBa0I7QUFDaEIsV0FBTyxDQUNMO0FBQ0VFLE1BQUFBLE9BQU8sRUFBRUYsWUFBWSxDQUFDRSxPQUR4QjtBQUVFQyxNQUFBQSxJQUFJLEVBQUU7QUFGUixLQURLLENBQVA7QUFNRDs7QUFFRCxNQUFJRixhQUFKLEVBQW1CO0FBQ2pCLFdBQU9BLGFBQWEsQ0FBQ0csTUFBZCxDQUFtQyxVQUFDQyxNQUFELFFBQTBDO0FBQUEsVUFBL0JILE9BQStCLFFBQS9CQSxPQUErQjtBQUFBLGlDQUF0QkksVUFBc0I7QUFBQSxVQUF0QkEsVUFBc0IsZ0NBQVQsRUFBUzs7QUFDbEYsVUFBSUEsVUFBVSxDQUFDSCxJQUFYLEtBQW9CSSxvQkFBTUMsY0FBMUIsSUFBNENGLFVBQVUsQ0FBQ0csU0FBM0QsRUFBc0U7QUFDcEUsWUFBTUMsZUFBZSxHQUFHQyxNQUFNLENBQUNDLElBQVAsQ0FBWU4sVUFBVSxDQUFDRyxTQUF2QixFQUFrQ0ksR0FBbEMsQ0FBc0MsVUFBQUMsQ0FBQztBQUFBLGlCQUFLO0FBQ2xFWixZQUFBQSxPQUFPLEVBQUVJLFVBQVUsQ0FBQ0csU0FBWCxDQUFxQkssQ0FBckIsQ0FEeUQ7QUFFbEVYLFlBQUFBLElBQUksRUFBRUcsVUFBVSxDQUFDSCxJQUFYLElBQW1CLFNBRnlDO0FBR2xFWSxZQUFBQSxJQUFJLEVBQUVEO0FBSDRELFdBQUw7QUFBQSxTQUF2QyxDQUF4QjtBQU1BLHlCQUFXVCxNQUFYLEVBQXNCSyxlQUF0QjtBQUNEOztBQUVELHVCQUFXTCxNQUFYLEdBQW1CO0FBQUVILFFBQUFBLE9BQU8sRUFBUEEsT0FBRjtBQUFXQyxRQUFBQSxJQUFJLEVBQUVHLFVBQVUsQ0FBQ0g7QUFBNUIsT0FBbkI7QUFDRCxLQVpNLEVBWUosRUFaSSxDQUFQO0FBYUQ7O0FBRUQsU0FBTyxDQUNMO0FBQ0VELElBQUFBLE9BQU8sRUFBRUgsS0FBSyxDQUFDRyxPQURqQjtBQUVFQyxJQUFBQSxJQUFJLEVBQUU7QUFGUixHQURLLENBQVA7QUFNRCxDQWxDTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwb2xsb0Vycm9yIH0gZnJvbSAnQGFwb2xsby9jbGllbnQnO1xuaW1wb3J0IHsgY29kZXMgfSBmcm9tICdAZGVpdHkvZmFsY29uLWVycm9ycyc7XG5pbXBvcnQgeyBFcnJvck1vZGVsIH0gZnJvbSAnLi4vRXJyb3InO1xuXG5leHBvcnQgY29uc3QgYXBvbGxvRXJyb3JUb0Vycm9yTW9kZWxMaXN0ID0gKGVycm9yOiBBcG9sbG9FcnJvcik6IEVycm9yTW9kZWxbXSA9PiB7XG4gIGNvbnN0IHsgbmV0d29ya0Vycm9yLCBncmFwaFFMRXJyb3JzIH0gPSBlcnJvcjtcblxuICBpZiAobmV0d29ya0Vycm9yKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgIHtcbiAgICAgICAgbWVzc2FnZTogbmV0d29ya0Vycm9yLm1lc3NhZ2UsXG4gICAgICAgIGNvZGU6ICdVTktOT1dOJ1xuICAgICAgfVxuICAgIF07XG4gIH1cblxuICBpZiAoZ3JhcGhRTEVycm9ycykge1xuICAgIHJldHVybiBncmFwaFFMRXJyb3JzLnJlZHVjZTxFcnJvck1vZGVsW10+KChyZXN1bHQsIHsgbWVzc2FnZSwgZXh0ZW5zaW9ucyA9IHt9IH0pID0+IHtcbiAgICAgIGlmIChleHRlbnNpb25zLmNvZGUgPT09IGNvZGVzLkJBRF9VU0VSX0lOUFVUICYmIGV4dGVuc2lvbnMuZXhjZXB0aW9uKSB7XG4gICAgICAgIGNvbnN0IHVzZXJJbnB1dEVycm9ycyA9IE9iamVjdC5rZXlzKGV4dGVuc2lvbnMuZXhjZXB0aW9uKS5tYXAoeCA9PiAoe1xuICAgICAgICAgIG1lc3NhZ2U6IGV4dGVuc2lvbnMuZXhjZXB0aW9uW3hdLFxuICAgICAgICAgIGNvZGU6IGV4dGVuc2lvbnMuY29kZSB8fCAnVU5LTk9XTicsXG4gICAgICAgICAgcGF0aDogeFxuICAgICAgICB9KSk7XG5cbiAgICAgICAgcmV0dXJuIFsuLi5yZXN1bHQsIC4uLnVzZXJJbnB1dEVycm9yc107XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBbLi4ucmVzdWx0LCB7IG1lc3NhZ2UsIGNvZGU6IGV4dGVuc2lvbnMuY29kZSB9XTtcbiAgICB9LCBbXSk7XG4gIH1cblxuICByZXR1cm4gW1xuICAgIHtcbiAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgICBjb2RlOiAnVU5LTk9XTidcbiAgICB9XG4gIF07XG59O1xuIl19