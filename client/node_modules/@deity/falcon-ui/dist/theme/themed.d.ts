import React from 'react';
import { PropsWithTheme, ThemingProps, ComponentTheme, InlineCss, BaseThemingProps, BreakpointBlockThemingProps, DefaultTheme } from './index';
/**
 * @private
 * exported only because of unit test !!!
 *
 * following diagram shows theme props order (values in brackets)
 *
 * | theme                                            | themed component                                     | inline                          |
 * | ------------------------------------------------ | ---------------------------------------------------- | ------------------------------- |
 * | `[theme].components[component-theme-name]`       | `themed({defaultTheme:{[component-theme-name]:{}}})` | `<Box bg="primary"`             |
 * | **(2)** `component.breakpointBlockProps`         | **(1)** `defaultTheme.breakpointBlockProps`          | **(13)** `breakpointBlockProps` |
 * | **(6)** `component.baseThemingProps`             | **(5)** `defaultTheme.baseThemingProps`              | **(14)** `baseThemingProps`     |
 * | **(10)** `component.cssProp`                     | **(9)** `defaultTheme.cssProp`                       | **(15)** `cssProp`              |
 * | **(4)** `component.variant.breakpointBlockProps` | **(3)** `defaultTheme.variant.breakpointBlockProps`  |                                 |
 * | **(8)** `component.variant.baseThemingProps`     | **(7)** `defaultTheme.variant.baseThemingProps`      |                                 |
 * | **(12)** `component.variant.cssProp`             | **(11)** `defaultTheme.variant.cssProp`              |                                 |
 * @param props
 */
export declare function mergeThemingProps<TProps>(props: PropsWithTheme<ThemingProps<TProps>>): any;
declare type Tag = string | {};
declare type TagProps<TTag extends Tag> = (TTag extends keyof JSX.IntrinsicElements ? JSX.IntrinsicElements[TTag] : {}) & (TTag extends React.ComponentType<infer TExtendProps> ? Partial<TExtendProps> : {});
declare type ThemedOptions<TTag extends Tag, TProps> = {
    tag: TTag;
    defaultTheme?: {
        [name: string]: ComponentTheme<TProps>;
    };
    defaultProps?: TagProps<TTag> & TProps;
};
export declare function themed<TProps, TTag extends Tag = Tag>(options: ThemedOptions<TTag, TProps>): <TAsTag extends Tag = TTag>(props: React.PropsWithChildren<{
    as?: TAsTag;
    defaultTheme?: DefaultTheme<TProps>;
} & Partial<(TTag extends "symbol" | "object" | "clipPath" | "filter" | "mask" | "marker" | "p" | "big" | "link" | "small" | "sub" | "sup" | "strong" | "meter" | "textarea" | "button" | "style" | "progress" | "text" | "ruby" | "table" | "circle" | "embed" | "pre" | "caption" | "menu" | "menuitem" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "blockquote" | "body" | "br" | "canvas" | "cite" | "code" | "col" | "colgroup" | "data" | "datalist" | "dd" | "del" | "details" | "dfn" | "dialog" | "div" | "dl" | "dt" | "em" | "fieldset" | "figcaption" | "figure" | "footer" | "form" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "head" | "header" | "hgroup" | "hr" | "html" | "i" | "iframe" | "img" | "input" | "ins" | "kbd" | "keygen" | "label" | "legend" | "li" | "main" | "map" | "mark" | "meta" | "nav" | "noindex" | "noscript" | "ol" | "optgroup" | "option" | "output" | "param" | "picture" | "q" | "rp" | "rt" | "s" | "samp" | "slot" | "script" | "section" | "select" | "source" | "span" | "summary" | "template" | "tbody" | "td" | "tfoot" | "th" | "thead" | "time" | "title" | "tr" | "track" | "u" | "ul" | "var" | "video" | "wbr" | "webview" | "svg" | "animate" | "animateMotion" | "animateTransform" | "defs" | "desc" | "ellipse" | "feBlend" | "feColorMatrix" | "feComponentTransfer" | "feComposite" | "feConvolveMatrix" | "feDiffuseLighting" | "feDisplacementMap" | "feDistantLight" | "feDropShadow" | "feFlood" | "feFuncA" | "feFuncB" | "feFuncG" | "feFuncR" | "feGaussianBlur" | "feImage" | "feMerge" | "feMergeNode" | "feMorphology" | "feOffset" | "fePointLight" | "feSpecularLighting" | "feSpotLight" | "feTile" | "feTurbulence" | "foreignObject" | "g" | "image" | "line" | "linearGradient" | "metadata" | "mpath" | "path" | "pattern" | "polygon" | "polyline" | "radialGradient" | "rect" | "stop" | "switch" | "textPath" | "tspan" | "use" | "view" ? JSX.IntrinsicElements[TTag] : {}) & (TTag extends React.ComponentType<infer TExtendProps> ? Partial<TExtendProps> : {}) & TProps> & BaseThemingProps & BreakpointBlockThemingProps & {
    defaultTheme?: DefaultTheme<TProps>;
    variant?: string;
    css?: InlineCss<TProps>;
} & (TAsTag extends "symbol" | "object" | "clipPath" | "filter" | "mask" | "marker" | "p" | "big" | "link" | "small" | "sub" | "sup" | "strong" | "meter" | "textarea" | "button" | "style" | "progress" | "text" | "ruby" | "table" | "circle" | "embed" | "pre" | "caption" | "menu" | "menuitem" | "a" | "abbr" | "address" | "area" | "article" | "aside" | "audio" | "b" | "base" | "bdi" | "bdo" | "blockquote" | "body" | "br" | "canvas" | "cite" | "code" | "col" | "colgroup" | "data" | "datalist" | "dd" | "del" | "details" | "dfn" | "dialog" | "div" | "dl" | "dt" | "em" | "fieldset" | "figcaption" | "figure" | "footer" | "form" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "head" | "header" | "hgroup" | "hr" | "html" | "i" | "iframe" | "img" | "input" | "ins" | "kbd" | "keygen" | "label" | "legend" | "li" | "main" | "map" | "mark" | "meta" | "nav" | "noindex" | "noscript" | "ol" | "optgroup" | "option" | "output" | "param" | "picture" | "q" | "rp" | "rt" | "s" | "samp" | "slot" | "script" | "section" | "select" | "source" | "span" | "summary" | "template" | "tbody" | "td" | "tfoot" | "th" | "thead" | "time" | "title" | "tr" | "track" | "u" | "ul" | "var" | "video" | "wbr" | "webview" | "svg" | "animate" | "animateMotion" | "animateTransform" | "defs" | "desc" | "ellipse" | "feBlend" | "feColorMatrix" | "feComponentTransfer" | "feComposite" | "feConvolveMatrix" | "feDiffuseLighting" | "feDisplacementMap" | "feDistantLight" | "feDropShadow" | "feFlood" | "feFuncA" | "feFuncB" | "feFuncG" | "feFuncR" | "feGaussianBlur" | "feImage" | "feMerge" | "feMergeNode" | "feMorphology" | "feOffset" | "fePointLight" | "feSpecularLighting" | "feSpotLight" | "feTile" | "feTurbulence" | "foreignObject" | "g" | "image" | "line" | "linearGradient" | "metadata" | "mpath" | "path" | "pattern" | "polygon" | "polyline" | "radialGradient" | "rect" | "stop" | "switch" | "textPath" | "tspan" | "use" | "view" ? JSX.IntrinsicElements[TAsTag] : {}) & (TAsTag extends React.ComponentType<infer TExtendProps> ? Partial<TExtendProps> : {})>) => JSX.Element;
export {};
//# sourceMappingURL=themed.d.ts.map