import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React, { useEffect } from 'react';
import { themed } from '../theme';
import { withTheme } from './ThemeProvider';
var SidebarInnerDOM = /*#__PURE__*/withTheme(function (_ref) {
  var theme = _ref.theme,
      visible = _ref.visible,
      side = _ref.side,
      props = _objectWithoutPropertiesLoose(_ref, ["theme", "visible", "side"]);

  var sidebarRef = React.useRef();
  useEffect(function () {
    var sidebar = sidebarRef.current || undefined;

    if (sidebar) {
      var transitionDuration = theme.components.sidebar.transitionDuration || theme.transitionDurations.short; // Remove Animation && Place Sidebar Offscreen

      sidebar.style.transitionDuration = '0s';
      sidebar.style.transform = "translateX(" + (side === 'left' ? '-100%' : '100%') + ")"; // Set Animation -> change the position which will trigger the animation

      requestAnimationFrame(function () {
        sidebar.style.transitionDuration = transitionDuration;
        sidebar.style.transform = 'translateX(0)';
      }); // Reset properties to the provided theme by setting them to empty strings

      requestAnimationFrame(function () {
        sidebar.style.transitionDuration = '';
        sidebar.style.transform = '';
      });
    }
  }, [side, theme.components.sidebar.transitionDuration, theme.transitionDurations.short]);
  return /*#__PURE__*/React.createElement("div", _extends({
    ref: sidebarRef
  }, props));
});
export var Sidebar = /*#__PURE__*/themed({
  tag: SidebarInnerDOM,
  defaultProps: {
    visible: false,
    side: 'left'
  },
  defaultTheme: {
    sidebar: {
      overflowX: 'hidden',
      display: 'flex',
      bg: 'white',
      position: 'fixed',
      css: function css(_ref2) {
        var _ref3;

        var visible = _ref2.visible,
            theme = _ref2.theme,
            side = _ref2.side;
        return _ref3 = {
          top: 0,
          bottom: 0
        }, _ref3[side] = 0, _ref3.height = '100%', _ref3.zIndex = theme.zIndex.sidebar, _ref3.transform = visible ? 'translateX(0)' : side === 'left' ? 'translateX(-100%)' : 'translateX(100%)', _ref3.transitionProperty = 'transform', _ref3.transitionDuration = visible ? theme.transitionDurations.short : theme.transitionDurations.standard, _ref3.transitionTimingFunction = visible ? theme.easingFunctions.easeIn : theme.easingFunctions.easeOut, _ref3;
      }
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21wb25lbnRzL1NpZGViYXIudHN4Il0sIm5hbWVzIjpbIlJlYWN0IiwidXNlRWZmZWN0IiwidGhlbWVkIiwid2l0aFRoZW1lIiwiU2lkZWJhcklubmVyRE9NIiwidGhlbWUiLCJ2aXNpYmxlIiwic2lkZSIsInByb3BzIiwic2lkZWJhclJlZiIsInVzZVJlZiIsInNpZGViYXIiLCJjdXJyZW50IiwidW5kZWZpbmVkIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwiY29tcG9uZW50cyIsInRyYW5zaXRpb25EdXJhdGlvbnMiLCJzaG9ydCIsInN0eWxlIiwidHJhbnNmb3JtIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiU2lkZWJhciIsInRhZyIsImRlZmF1bHRQcm9wcyIsImRlZmF1bHRUaGVtZSIsIm92ZXJmbG93WCIsImRpc3BsYXkiLCJiZyIsInBvc2l0aW9uIiwiY3NzIiwidG9wIiwiYm90dG9tIiwiaGVpZ2h0IiwiekluZGV4IiwidHJhbnNpdGlvblByb3BlcnR5Iiwic3RhbmRhcmQiLCJ0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24iLCJlYXNpbmdGdW5jdGlvbnMiLCJlYXNlSW4iLCJlYXNlT3V0Il0sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU9BLEtBQVAsSUFBZ0JDLFNBQWhCLFFBQWlDLE9BQWpDO0FBQ0EsU0FBU0MsTUFBVCxRQUF1QixVQUF2QjtBQUNBLFNBQVNDLFNBQVQsUUFBMEIsaUJBQTFCO0FBRUEsSUFBTUMsZUFBZSxnQkFBR0QsU0FBUyxDQUFDLGdCQUF3QztBQUFBLE1BQXJDRSxLQUFxQyxRQUFyQ0EsS0FBcUM7QUFBQSxNQUE5QkMsT0FBOEIsUUFBOUJBLE9BQThCO0FBQUEsTUFBckJDLElBQXFCLFFBQXJCQSxJQUFxQjtBQUFBLE1BQVpDLEtBQVk7O0FBQ3hFLE1BQU1DLFVBQVUsR0FBR1QsS0FBSyxDQUFDVSxNQUFOLEVBQW5CO0FBQ0FULEVBQUFBLFNBQVMsQ0FBQyxZQUFNO0FBQ2QsUUFBTVUsT0FBTyxHQUFHRixV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dCc7XG5pbXBvcnQgeyB0aGVtZWQgfSBmcm9tICcuLi90aGVtZSc7XG5pbXBvcnQgeyB3aXRoVGhlbWUgfSBmcm9tICcuL1RoZW1lUHJvdmlkZXInO1xuXG5jb25zdCBTaWRlYmFySW5uZXJET00gPSB3aXRoVGhlbWUoKHsgdGhlbWUsIHZpc2libGUsIHNpZGUsIC4uLnByb3BzIH0pID0+IHtcbiAgY29uc3Qgc2lkZWJhclJlZiA9IFJlYWN0LnVzZVJlZigpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHNpZGViYXIgPSBzaWRlYmFyUmVmLmN1cnJlbnQgfHwgdW5kZWZpbmVkO1xuICAgIGlmIChzaWRlYmFyKSB7XG4gICAgICBjb25zdCB0cmFuc2l0aW9uRHVyYXRpb24gPSB0aGVtZS5jb21wb25lbnRzLnNpZGViYXIudHJhbnNpdGlvbkR1cmF0aW9uIHx8IHRoZW1lLnRyYW5zaXRpb25EdXJhdGlvbnMuc2hvcnQ7XG5cbiAgICAgIC8vIFJlbW92ZSBBbmltYXRpb24gJiYgUGxhY2UgU2lkZWJhciBPZmZzY3JlZW5cbiAgICAgIHNpZGViYXIuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gJzBzJztcbiAgICAgIHNpZGViYXIuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZVgoJHtzaWRlID09PSAnbGVmdCcgPyAnLTEwMCUnIDogJzEwMCUnfSlgO1xuXG4gICAgICAvLyBTZXQgQW5pbWF0aW9uIC0+IGNoYW5nZSB0aGUgcG9zaXRpb24gd2hpY2ggd2lsbCB0cmlnZ2VyIHRoZSBhbmltYXRpb25cbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgIHNpZGViYXIuc3R5bGUudHJhbnNpdGlvbkR1cmF0aW9uID0gdHJhbnNpdGlvbkR1cmF0aW9uO1xuICAgICAgICBzaWRlYmFyLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVYKDApJztcbiAgICAgIH0pO1xuXG4gICAgICAvLyBSZXNldCBwcm9wZXJ0aWVzIHRvIHRoZSBwcm92aWRlZCB0aGVtZSBieSBzZXR0aW5nIHRoZW0gdG8gZW1wdHkgc3RyaW5nc1xuICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHtcbiAgICAgICAgc2lkZWJhci5zdHlsZS50cmFuc2l0aW9uRHVyYXRpb24gPSAnJztcbiAgICAgICAgc2lkZWJhci5zdHlsZS50cmFuc2Zvcm0gPSAnJztcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgW3NpZGUsIHRoZW1lLmNvbXBvbmVudHMuc2lkZWJhci50cmFuc2l0aW9uRHVyYXRpb24sIHRoZW1lLnRyYW5zaXRpb25EdXJhdGlvbnMuc2hvcnRdKTtcbiAgcmV0dXJuIDxkaXYgcmVmPXtzaWRlYmFyUmVmfSB7Li4ucHJvcHN9IC8+O1xufSk7XG5cbmV4cG9ydCBjb25zdCBTaWRlYmFyID0gdGhlbWVkKHtcbiAgdGFnOiBTaWRlYmFySW5uZXJET00sXG5cbiAgZGVmYXVsdFByb3BzOiB7XG4gICAgdmlzaWJsZTogZmFsc2UsXG4gICAgc2lkZTogJ2xlZnQnIGFzICdsZWZ0JyB8ICdyaWdodCdcbiAgfSxcblxuICBkZWZhdWx0VGhlbWU6IHtcbiAgICBzaWRlYmFyOiB7XG4gICAgICBvdmVyZmxvd1g6ICdoaWRkZW4nLFxuICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgYmc6ICd3aGl0ZScsXG4gICAgICBwb3NpdGlvbjogJ2ZpeGVkJyxcbiAgICAgIGNzczogKHsgdmlzaWJsZSwgdGhlbWUsIHNpZGUgfSkgPT4gKHtcbiAgICAgICAgdG9wOiAwLFxuICAgICAgICBib3R0b206IDAsXG4gICAgICAgIFtzaWRlXTogMCxcbiAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgIHpJbmRleDogdGhlbWUuekluZGV4LnNpZGViYXIsXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgICAgICB0cmFuc2Zvcm06IHZpc2libGUgPyAndHJhbnNsYXRlWCgwKScgOiBzaWRlID09PSAnbGVmdCcgPyAndHJhbnNsYXRlWCgtMTAwJSknIDogJ3RyYW5zbGF0ZVgoMTAwJSknLFxuICAgICAgICB0cmFuc2l0aW9uUHJvcGVydHk6ICd0cmFuc2Zvcm0nLFxuICAgICAgICB0cmFuc2l0aW9uRHVyYXRpb246IHZpc2libGUgPyB0aGVtZS50cmFuc2l0aW9uRHVyYXRpb25zLnNob3J0IDogdGhlbWUudHJhbnNpdGlvbkR1cmF0aW9ucy5zdGFuZGFyZCxcbiAgICAgICAgdHJhbnNpdGlvblRpbWluZ0Z1bmN0aW9uOiB2aXNpYmxlID8gdGhlbWUuZWFzaW5nRnVuY3Rpb25zLmVhc2VJbiA6IHRoZW1lLmVhc2luZ0Z1bmN0aW9ucy5lYXNlT3V0XG4gICAgICB9KVxuICAgIH1cbiAgfVxufSk7XG4iXX0=