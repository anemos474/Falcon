import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import React, { useState } from 'react';
import { themed } from '../theme';
import { Box } from './Box';
import { ListItem } from './List';
export var Navbar = /*#__PURE__*/themed({
  tag: 'ul',
  defaultTheme: {
    navbar: {
      p: 'none',
      m: 'none',
      bgFullWidth: 'primary',
      color: 'primaryText',
      css: {
        display: 'flex',
        listStyle: 'none',
        position: 'relative'
      }
    }
  }
});
var MenuItemContext = /*#__PURE__*/React.createContext({});

var MenuItemInnerDOM = function MenuItemInnerDOM(_ref) {
  var _onMouseEnter = _ref.onMouseEnter,
      _onMouseLeave = _ref.onMouseLeave,
      _onClick = _ref.onClick,
      props = _objectWithoutPropertiesLoose(_ref, ["onMouseEnter", "onMouseLeave", "onClick"]);

  var _useState = useState(false),
      isOpen = _useState[0],
      setIsOpen = _useState[1];

  return /*#__PURE__*/React.createElement(MenuItemContext.Provider, {
    value: {
      isOpen: isOpen
    }
  }, /*#__PURE__*/React.createElement(ListItem, _extends({}, props, {
    onMouseEnter: function onMouseEnter(e) {
      if (_onMouseEnter) _onMouseEnter(e);
      setIsOpen(true);
    },
    onMouseLeave: function onMouseLeave(e) {
      setIsOpen(false);
      if (_onMouseLeave) _onMouseLeave(e);
    },
    onClick: function onClick(e) {
      setIsOpen(false);
      if (_onClick) _onClick(e);
    }
  })));
};

export var NavbarItem = /*#__PURE__*/themed({
  tag: MenuItemInnerDOM,
  defaultTheme: {
    navbarItem: {
      fontSize: 'sm',
      display: 'flex',
      color: 'primaryText',
      css: function css(_ref2) {
        var theme = _ref2.theme;
        return {
          cursor: 'pointer',
          userSelect: 'none',
          listStyle: 'none',
          ':hover': {
            background: theme.colors.secondary,
            color: theme.colors.secondaryText
          }
        };
      }
    }
  }
});

var NavbarItemMenuInnerDOM = function NavbarItemMenuInnerDOM(props) {
  return /*#__PURE__*/React.createElement(MenuItemContext.Consumer, null, function (_ref3) {
    var isOpen = _ref3.isOpen;
    return /*#__PURE__*/React.createElement(Box, _extends({}, props, {
      display: isOpen ? 'block' : 'none'
    }));
  });
};

export var NavbarItemMenu = /*#__PURE__*/themed({
  tag: NavbarItemMenuInnerDOM,
  defaultProps: {
    role: 'menu'
  },
  defaultTheme: {
    navbarItemMenu: {
      p: 'sm',
      bg: 'secondary',
      color: 'secondaryText',
      boxShadow: 'subtle',
      css: {
        position: 'absolute',
        top: '100%',
        left: 0,
        right: 0
      }
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21wb25lbnRzL05hdmJhci50c3giXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInRoZW1lZCIsIkJveCIsIkxpc3RJdGVtIiwiTmF2YmFyIiwidGFnIiwiZGVmYXVsdFRoZW1lIiwibmF2YmFyIiwicCIsIm0iLCJiZ0Z1bGxXaWR0aCIsImNvbG9yIiwiY3NzIiwiZGlzcGxheSIsImxpc3RTdHlsZSIsInBvc2l0aW9uIiwiTWVudUl0ZW1Db250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIk1lbnVJdGVtSW5uZXJET00iLCJvbk1vdXNlRW50ZXIiLCJvbk1vdXNlTGVhdmUiLCJvbkNsaWNrIiwicHJvcHMiLCJpc09wZW4iLCJzZXRJc09wZW4iLCJlIiwiTmF2YmFySXRlbSIsIm5hdmJhckl0ZW0iLCJmb250U2l6ZSIsInRoZW1lIiwiY3Vyc29yIiwidXNlclNlbGVjdCIsImJhY2tncm91bmQiLCJjb2xvcnMiLCJzZWNvbmRhcnkiLCJzZWNvbmRhcnlUZXh0IiwiTmF2YmFySXRlbU1lbnVJbm5lckRPTSIsIk5hdmJhckl0ZW1NZW51IiwiZGVmYXVsdFByb3BzIiwicm9sZSIsIm5hdmJhckl0ZW1NZW51IiwiYmciLCJib3hTaGFkb3ciLCJ0b3AiLCJsZWZ0IiwicmlnaHQiXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBT0EsS0FBUCxJQUFnQkMsUUFBaEIsUUFBZ0MsT0FBaEM7QUFDQSxTQUFTQyxNQUFULFFBQXVCLFVBQXZCO0FBQ0EsU0FBU0MsR0FBVCxRQUFvQixPQUFwQjtBQUNBLFNBQVNDLFFBQVQsUUFBeUIsUUFBekI7QUFFQSxPQUFPLElBQU1DLE1BQU0sZ0JBQUdILE1BQU0sQ0FBQztBQUMzQkksRUFBQUEsR0FBRyxFQUFFLElBRHNCO0FBRzNCQyxFQUFBQSxZQUFZLEVBQUU7QUFDWkMsSUFBQUEsTUFBTSxFQUFFO0FBQ05DLE1BQUFBLENBQUMsRUFBRSxNQURHO0FBRU5DLE1BQUFBLENBQUMsRUFBRSxNQUZHO0FBR05DLE1BQUFB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RTtBQUNaQyxJQUFBQSxJQUFJLEVBQUU7QUFETSxHQUhxQjtBQU9uQ2pDLEVBQUFBLFlBQVksRUFBRTtBQUNaa0MsSUFBQUEsY0FBYyxFQUFFO0FBQ2RoQyxNQUFBQSxDQUFDLEVBQUUsSUFEVztBQUVkaUMsTUFBQUEsRUFBRSxFQUFFLFdBRlU7QUFHZDlCLE1BQUFBLEtBQUssRUFBRSxlQUhPO0FBSWQrQixNQUFBQSxTQUFTLEVBQUUsUUFKRztBQUtkOUIsTUFBQUEsR0FBRyxFQUFFO0FBQ0hHLFFBQUFBLFFBQVEsRUFBRSxVQURQO0FBRUg0QixRQUFBQSxHQUFHLEVBQUUsTUFGRjtBQUdIQyxRQUFBQSxJQUFJLEVBQUUsQ0FISDtBQUlIQyxRQUFBQSxLQUFLLEVBQUU7QUFKSjtBQUxTO0FBREo7QUFQcUIsQ0FBRCxDQUE3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHRoZW1lZCB9IGZyb20gJy4uL3RoZW1lJztcbmltcG9ydCB7IEJveCB9IGZyb20gJy4vQm94JztcbmltcG9ydCB7IExpc3RJdGVtIH0gZnJvbSAnLi9MaXN0JztcblxuZXhwb3J0IGNvbnN0IE5hdmJhciA9IHRoZW1lZCh7XG4gIHRhZzogJ3VsJyxcblxuICBkZWZhdWx0VGhlbWU6IHtcbiAgICBuYXZiYXI6IHtcbiAgICAgIHA6ICdub25lJyxcbiAgICAgIG06ICdub25lJyxcbiAgICAgIGJnRnVsbFdpZHRoOiAncHJpbWFyeScsXG4gICAgICBjb2xvcjogJ3ByaW1hcnlUZXh0JyxcbiAgICAgIGNzczoge1xuICAgICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICAgIGxpc3RTdHlsZTogJ25vbmUnLFxuICAgICAgICBwb3NpdGlvbjogJ3JlbGF0aXZlJ1xuICAgICAgfVxuICAgIH1cbiAgfVxufSk7XG5cbmNvbnN0IE1lbnVJdGVtQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQ8eyBpc09wZW4/OiBib29sZWFuIH0+KHt9KTtcblxuY29uc3QgTWVudUl0ZW1Jbm5lckRPTTogUmVhY3QuU0ZDPGFueT4gPSAoeyBvbk1vdXNlRW50ZXIsIG9uTW91c2VMZWF2ZSwgb25DbGljaywgLi4ucHJvcHMgfSkgPT4ge1xuICBjb25zdCBbaXNPcGVuLCBzZXRJc09wZW5dID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gIHJldHVybiAoXG4gICAgPE1lbnVJdGVtQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyBpc09wZW4gfX0+XG4gICAgICA8TGlzdEl0ZW1cbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgICBvbk1vdXNlRW50ZXI9e2UgPT4ge1xuICAgICAgICAgIGlmIChvbk1vdXNlRW50ZXIpIG9uTW91c2VFbnRlcihlKTtcbiAgICAgICAgICBzZXRJc09wZW4odHJ1ZSk7XG4gICAgICAgIH19XG4gICAgICAgIG9uTW91c2VMZWF2ZT17ZSA9PiB7XG4gICAgICAgICAgc2V0SXNPcGVuKGZhbHNlKTtcbiAgICAgICAgICBpZiAob25Nb3VzZUxlYXZlKSBvbk1vdXNlTGVhdmUoZSk7XG4gICAgICAgIH19XG4gICAgICAgIG9uQ2xpY2s9e2UgPT4ge1xuICAgICAgICAgIHNldElzT3BlbihmYWxzZSk7XG4gICAgICAgICAgaWYgKG9uQ2xpY2spIG9uQ2xpY2soZSk7XG4gICAgICAgIH19XG4gICAgICAvPlxuICAgIDwvTWVudUl0ZW1Db250ZXh0LlByb3ZpZGVyPlxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IE5hdmJhckl0ZW0gPSB0aGVtZWQoe1xuICB0YWc6IE1lbnVJdGVtSW5uZXJET00sXG5cbiAgZGVmYXVsdFRoZW1lOiB7XG4gICAgbmF2YmFySXRlbToge1xuICAgICAgZm9udFNpemU6ICdzbScsXG4gICAgICBkaXNwbGF5OiAnZmxleCcsXG4gICAgICBjb2xvcjogJ3ByaW1hcnlUZXh0JyxcblxuICAgICAgY3NzOiAoeyB0aGVtZSB9KSA9PiAoe1xuICAgICAgICBjdXJzb3I6ICdwb2ludGVyJyxcbiAgICAgICAgdXNlclNlbGVjdDogJ25vbmUnLFxuICAgICAgICBsaXN0U3R5bGU6ICdub25lJyxcblxuICAgICAgICAnOmhvdmVyJzoge1xuICAgICAgICAgIGJhY2tncm91bmQ6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnksXG4gICAgICAgICAgY29sb3I6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlUZXh0XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9XG59KTtcblxuY29uc3QgTmF2YmFySXRlbU1lbnVJbm5lckRPTTogUmVhY3QuU0ZDPGFueT4gPSBwcm9wcyA9PiAoXG4gIDxNZW51SXRlbUNvbnRleHQuQ29uc3VtZXI+XG4gICAgeyh7IGlzT3BlbiB9KSA9PiA8Qm94IHsuLi5wcm9wc30gZGlzcGxheT17aXNPcGVuID8gJ2Jsb2NrJyA6ICdub25lJ30gLz59XG4gIDwvTWVudUl0ZW1Db250ZXh0LkNvbnN1bWVyPlxuKTtcbmV4cG9ydCBjb25zdCBOYXZiYXJJdGVtTWVudSA9IHRoZW1lZCh7XG4gIHRhZzogTmF2YmFySXRlbU1lbnVJbm5lckRPTSxcblxuICBkZWZhdWx0UHJvcHM6IHtcbiAgICByb2xlOiAnbWVudSdcbiAgfSxcblxuICBkZWZhdWx0VGhlbWU6IHtcbiAgICBuYXZiYXJJdGVtTWVudToge1xuICAgICAgcDogJ3NtJyxcbiAgICAgIGJnOiAnc2Vjb25kYXJ5JyxcbiAgICAgIGNvbG9yOiAnc2Vjb25kYXJ5VGV4dCcsXG4gICAgICBib3hTaGFkb3c6ICdzdWJ0bGUnLFxuICAgICAgY3NzOiB7XG4gICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICB0b3A6ICcxMDAlJyxcbiAgICAgICAgbGVmdDogMCxcbiAgICAgICAgcmlnaHQ6IDBcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0pO1xuIl19