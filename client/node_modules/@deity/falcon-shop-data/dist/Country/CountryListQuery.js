"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.CountryListQuery = exports.GET_COUNTRY_LIST = void 0;

var _inheritsLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/inheritsLoose"));

var _falconData = /*#__PURE__*/require("@deity/falcon-data");

var GET_COUNTRY_LIST = {
  "kind": "Document",
  "definitions": [{
    "kind": "OperationDefinition",
    "operation": "query",
    "name": {
      "kind": "Name",
      "value": "CountryList"
    },
    "variableDefinitions": [],
    "directives": [],
    "selectionSet": {
      "kind": "SelectionSet",
      "selections": [{
        "kind": "Field",
        "name": {
          "kind": "Name",
          "value": "countryList"
        },
        "arguments": [],
        "directives": [],
        "selectionSet": {
          "kind": "SelectionSet",
          "selections": [{
            "kind": "Field",
            "name": {
              "kind": "Name",
              "value": "items"
            },
            "arguments": [],
            "directives": [],
            "selectionSet": {
              "kind": "SelectionSet",
              "selections": [{
                "kind": "Field",
                "name": {
                  "kind": "Name",
                  "value": "id"
                },
                "arguments": [],
                "directives": []
              }, {
                "kind": "Field",
                "name": {
                  "kind": "Name",
                  "value": "code"
                },
                "arguments": [],
                "directives": []
              }, {
                "kind": "Field",
                "name": {
                  "kind": "Name",
                  "value": "englishName"
                },
                "arguments": [],
                "directives": []
              }, {
                "kind": "Field",
                "name": {
                  "kind": "Name",
                  "value": "localName"
                },
                "arguments": [],
                "directives": []
              }]
            }
          }]
        }
      }]
    }
  }],
  "loc": {
    "start": 0,
    "end": 135,
    "source": {
      "body": "\n  query CountryList {\n    countryList {\n      items {\n        id\n        code\n        englishName\n        localName\n      }\n    }\n  }\n",
      "name": "GraphQL request",
      "locationOffset": {
        "line": 1,
        "column": 1
      }
    }
  }
};
exports.GET_COUNTRY_LIST = GET_COUNTRY_LIST;

var CountryListQuery = /*#__PURE__*/function (_Query) {
  (0, _inheritsLoose2.default)(CountryListQuery, _Query);

  function CountryListQuery() {
    return _Query.apply(this, arguments) || this;
  }

  return CountryListQuery;
}(_falconData.Query);

exports.CountryListQuery = CountryListQuery;
CountryListQuery.defaultProps = {
  query: GET_COUNTRY_LIST
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Db3VudHJ5L0NvdW50cnlMaXN0UXVlcnkudHN4Il0sIm5hbWVzIjpbIkdFVF9DT1VOVFJZX0xJU1QiLCJDb3VudHJ5TGlzdFF1ZXJ5IiwiUXVlcnkiLCJkZWZhdWx0UHJvcHMiLCJxdWVyeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ0E7O0FBR08sSUFBTUEsZ0JBQWdCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQXRCOzs7SUFtQk1DLGdCOzs7Ozs7OztFQUF5QkMsaUI7OztBQUF6QkQsZ0IsQ0FDSkUsWSxHQUFlO0FBQ3BCQyxFQUFBQSxLQUFLLEVBQUVKO0FBRGEsQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdxbCB9IGZyb20gJ0BhcG9sbG8vY2xpZW50JztcbmltcG9ydCB7IFF1ZXJ5IH0gZnJvbSAnQGRlaXR5L2ZhbGNvbi1kYXRhJztcbmltcG9ydCB7IENvdW50cnkgfSBmcm9tICdAZGVpdHkvZmFsY29uLXNob3AtZXh0ZW5zaW9uJztcblxuZXhwb3J0IGNvbnN0IEdFVF9DT1VOVFJZX0xJU1QgPSBncWxgXG4gIHF1ZXJ5IENvdW50cnlMaXN0IHtcbiAgICBjb3VudHJ5TGlzdCB7XG4gICAgICBpdGVtcyB7XG4gICAgICAgIGlkXG4gICAgICAgIGNvZGVcbiAgICAgICAgZW5nbGlzaE5hbWVcbiAgICAgICAgbG9jYWxOYW1lXG4gICAgICB9XG4gICAgfVxuICB9XG5gO1xuXG5leHBvcnQgdHlwZSBDb3VudHJ5TGlzdFJlc3BvbnNlID0ge1xuICBjb3VudHJ5TGlzdDoge1xuICAgIGl0ZW1zOiBQaWNrPENvdW50cnksICdpZCcgfCAnY29kZScgfCAnbG9jYWxOYW1lJyB8ICdlbmdsaXNoTmFtZSc+W107XG4gIH07XG59O1xuXG5leHBvcnQgY2xhc3MgQ291bnRyeUxpc3RRdWVyeSBleHRlbmRzIFF1ZXJ5PENvdW50cnlMaXN0UmVzcG9uc2U+IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBxdWVyeTogR0VUX0NPVU5UUllfTElTVFxuICB9O1xufVxuIl19