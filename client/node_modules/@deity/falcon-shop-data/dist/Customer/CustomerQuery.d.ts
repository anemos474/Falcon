import { Query } from '@deity/falcon-data';
import { Customer } from '@deity/falcon-shop-extension';
export declare const GET_CUSTOMER: import("@apollo/client").DocumentNode;
export declare type CustomerResponse = {
    customer: Pick<Customer, 'id' | 'firstname' | 'lastname' | 'email' | 'websiteId'>;
};
export declare class CustomerQuery extends Query<CustomerResponse> {
    static defaultProps: {
        query: import("@apollo/client").DocumentNode;
    };
    static propTypes: {
        passLoading: import("prop-types").Requireable<boolean>;
        passError: import("prop-types").Requireable<boolean>;
        client: import("prop-types").Requireable<object>;
        children: import("prop-types").Validator<(...args: any[]) => any>;
        fetchPolicy: import("prop-types").Requireable<string>;
        notifyOnNetworkStatusChange: import("prop-types").Requireable<boolean>;
        onCompleted: import("prop-types").Requireable<(...args: any[]) => any>;
        onError: import("prop-types").Requireable<(...args: any[]) => any>;
        pollInterval: import("prop-types").Requireable<number>;
        query: import("prop-types").Validator<object>;
        variables: import("prop-types").Requireable<object>;
        ssr: import("prop-types").Requireable<boolean>;
        partialRefetch: import("prop-types").Requireable<boolean>;
        returnPartialData: import("prop-types").Requireable<boolean>;
    };
}
//# sourceMappingURL=CustomerQuery.d.ts.map