"use strict";

var _interopRequireWildcard = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.FormField = void 0;

var _extends2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

var _falconFrontKit = /*#__PURE__*/require("@deity/falcon-front-kit");

var _falconUi = /*#__PURE__*/require("@deity/falcon-ui");

var _FormFieldLabel = /*#__PURE__*/require("./FormFieldLabel");

var _FormFieldError = /*#__PURE__*/require("./FormFieldError");

var _FormFieldLayout = /*#__PURE__*/require("./FormFieldLayout");

var FormField = /*#__PURE__*/_react.default.memo(function (props) {
  var name = props.name,
      validate = props.validate,
      required = props.required,
      children = props.children,
      restProps = (0, _objectWithoutPropertiesLoose2.default)(props, ["name", "validate", "required", "children"]);

  var _extractThemableProps = (0, _falconUi.extractThemableProps)(restProps),
      themableProps = _extractThemableProps.themableProps,
      rest = _extractThemableProps.rest;

  var validators = (0, _react.useCallback)(function () {
    return (0, _falconFrontKit.getDefaultInputValidators)(props);
  }, [props]);
  return /*#__PURE__*/_react.default.createElement(_falconFrontKit.Field, (0, _extends2.default)({
    name: name,
    validate: validators()
  }, rest), function (_ref) {
    var form = _ref.form,
        field = _ref.field,
        label = _ref.label,
        error = _ref.error;
    return /*#__PURE__*/_react.default.createElement(_FormFieldLayout.FormFieldLayout, themableProps, label && /*#__PURE__*/_react.default.createElement(_FormFieldLabel.FormFieldLabel, {
      htmlFor: field.id
    }, label), children ? children({
      form: form,
      field: Object.assign({}, field, {
        gridArea: _FormFieldLayout.FormFieldArea.input
      })
    }) : /*#__PURE__*/_react.default.createElement(_falconUi.Input, (0, _extends2.default)({}, field, {
      gridArea: _FormFieldLayout.FormFieldArea.input
    })), /*#__PURE__*/_react.default.createElement(_FormFieldError.FormFieldError, null, field.invalid ? error : null));
  });
});

exports.FormField = FormField;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Gb3Jtcy9Gb3JtRmllbGQudHN4Il0sIm5hbWVzIjpbIkZvcm1GaWVsZCIsIlJlYWN0IiwibWVtbyIsInByb3BzIiwibmFtZSIsInZhbGlkYXRlIiwicmVxdWlyZWQiLCJjaGlsZHJlbiIsInJlc3RQcm9wcyIsInRoZW1hYmxlUHJvcHMiLCJyZXN0IiwidmFsaWRhdG9ycyIsImZvcm0iLCJmaWVsZCIsImxhYmVsIiwiZXJyb3IiLCJpZCIsImdyaWRBcmVhIiwiRm9ybUZpZWxkQXJlYSIsImlucHV0IiwiaW52YWxpZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQW1DTyxJQUFNQSxTQUFvQyxnQkFBR0MsZUFBTUMsSUFBTixDQUFXLFVBQUFDLEtBQUssRUFBSTtBQUN0RSxNQUFRQyxJQUFSLEdBQTZERCxLQUE3RCxDQUFRQyxJQUFSO0FBQUEsTUFBY0MsUUFBZCxHQUE2REYsS0FBN0QsQ0FBY0UsUUFBZDtBQUFBLE1BQXdCQyxRQUF4QixHQUE2REgsS0FBN0QsQ0FBd0JHLFFBQXhCO0FBQUEsTUFBa0NDLFFBQWxDLEdBQTZESixLQUE3RCxDQUFrQ0ksUUFBbEM7QUFBQSxNQUErQ0MsU0FBL0MsK0NBQTZETCxLQUE3RDs7QUFDQSw4QkFBZ0Msb0NBQXFCSyxTQUFyQixDQUFoQztBQUFBLE1BQVFDLGFBQVIseUJBQVFBLGFBQVI7QUFBQSxNQUF1QkMsSUFBdkIseUJBQXVCQSxJQUF2Qjs7QUFFQSxNQUFNQyxVQUFVLEdBQUcsd0JBQVk7QUFBQSxXQUFNLCtDQUEwQlIsS0FBMUIsQ0FBTjtBQUFBLEdBQVosRUFBb0QsQ0FBQ0EsS0FBRCxDQUFwRCxDQUFuQjtBQUVBLHNCQUNFLDZCQUFDLHFCQUFEO0FBQU8sSUFBQSxJQUFJLEVBQUVDLElBQWI7QUFBbUIsSUFBQSxRQUFRLEVBQUVPLFVBQVU7QUFBdkMsS0FBK0NELElBQS9DLEdBQ0c7QUFBQSxRQUFHRSxJQUFILFFBQUdBLElBQUg7QUFBQSxRQUFTQyxLQUFULFFBQVNBLEtBQVQ7QUFBQSxRQUFnQkMsS0FBaEIsUUFBZ0JBLEtBQWhCO0FBQUEsUUFBdUJDLEtBQXZCLFFBQXVCQSxLQUF2QjtBQUFBLHdCQUNDLDZCQUFDLGdDQUFELEVBQXFCTixhQUFyQixFQUNHSyxLQUFLLGlCQUFJLDZCQUFDLDhCQUFEO0FBQWdCLE1BQUEsT0FBTyxFQUFFRCxLQUFLLENBQUNHO0FBQS9CLE9BQW9DRixLQUFwQyxDQURaLEVBRUdQLFFBQVEsR0FDUEEsUUFBUSxDQUFDO0FBQUVLLE1BQUFBLElBQUksRUFBSkEsSUFBRjtBQUFRQyxNQUFBQSxLQUFLLG9CQUFPQSxLQUFQO0FBQWNJLFFBQUFBLFFBQVEsRUFBRUMsK0JBQWNDO0FBQXRDO0FBQWIsS0FBRCxDQURELGdCQUdQLDZCQUFDLGVBQUQsNkJBQVdOLEtBQVg7QUFBa0IsTUFBQSxRQUFRLEVBQUVLLCtCQUFjQztBQUExQyxPQUxKLGVBT0UsNkJBQUMsOEJBQUQsUUFBaUJOLEtBQUssQ0FBQ08sT0FBTixHQUFnQkwsS0FBaEIsR0FBd0IsSUFBekMsQ0FQRixDQUREO0FBQUEsR0FESCxDQURGO0FBZUQsQ0FyQm1ELENBQTdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgRmllbGRQcm9wcyBhcyBGb3JtaWtGaWVsZFByb3BzIH0gZnJvbSAnZm9ybWlrJztcbmltcG9ydCB7IEZpZWxkLCBJVmFsaWRhdG9yLCBnZXREZWZhdWx0SW5wdXRWYWxpZGF0b3JzIH0gZnJvbSAnQGRlaXR5L2ZhbGNvbi1mcm9udC1raXQnO1xuaW1wb3J0IHsgSW5wdXQsIGV4dHJhY3RUaGVtYWJsZVByb3BzLCBUaGVtaW5nUHJvcHMgfSBmcm9tICdAZGVpdHkvZmFsY29uLXVpJztcbmltcG9ydCB7IEZvcm1GaWVsZExhYmVsIH0gZnJvbSAnLi9Gb3JtRmllbGRMYWJlbCc7XG5pbXBvcnQgeyBGb3JtRmllbGRFcnJvciB9IGZyb20gJy4vRm9ybUZpZWxkRXJyb3InO1xuaW1wb3J0IHsgRm9ybUZpZWxkQXJlYSwgRm9ybUZpZWxkTGF5b3V0IH0gZnJvbSAnLi9Gb3JtRmllbGRMYXlvdXQnO1xuXG5leHBvcnQgdHlwZSBGb3JtRmllbGRSZW5kZXJQcm9wczxUVmFsdWUgPSBhbnk+ID0ge1xuICBmb3JtOiBGb3JtaWtGaWVsZFByb3BzPFRWYWx1ZT5bJ2Zvcm0nXSAmIHtcbiAgICBpZD86IG51bWJlciB8IHN0cmluZztcbiAgfTtcbiAgZmllbGQ6IEZvcm1pa0ZpZWxkUHJvcHM8VFZhbHVlPlsnZmllbGQnXSAmXG4gICAgUmVhY3QuSW5wdXRIVE1MQXR0cmlidXRlczxIVE1MSW5wdXRFbGVtZW50PiAmXG4gICAgUmVhY3QuU2VsZWN0SFRNTEF0dHJpYnV0ZXM8SFRNTFNlbGVjdEVsZW1lbnQ+ICZcbiAgICBUaGVtaW5nUHJvcHMgJiB7XG4gICAgICBpZD86IHN0cmluZztcbiAgICAgIHBsYWNlaG9sZGVyPzogc3RyaW5nO1xuICAgICAgaW52YWxpZDogYm9vbGVhbjtcbiAgICB9O1xufTtcblxuZXhwb3J0IHR5cGUgRm9ybUZpZWxkUHJvcHM8VFZhbHVlID0gYW55PiA9IHtcbiAgaWQ/OiBudW1iZXIgfCBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgbGFiZWw/OiBzdHJpbmc7XG4gIHBsYWNlaG9sZGVyPzogc3RyaW5nO1xuICAvKipcbiAgICogQWxsb3dzIHlvdSB0byBleHRlbmRzIGRlZmF1bHQgc2V0IG9mIHZhbGlkYXRvcnMgd2hpY2ggYXJlIGNhbGN1bGF0ZWQgYmFzZWQgb24gSFRNTCBJbnB1dCBgdHlwZWAgYXR0cmlidXRlLFxuICAgKiBhbHNvIGlmIGByZXF1aXJlZGAsIGBtaW5gIG9yIGBtYXhgIEhUTUwgSW5wdXQgQXR0cmlidXRlcyBhcmUgcGFzc2VkLCB0aGVuIGNvcnJlc3BvbmRpbmcgdmFsaWRhdG9yIHdpbGwgYmUgYXV0b21hdGljYWxseSBhZGRlZC5cbiAgICpcbiAgICogUGxlYXNlIHBhc3MgZW1wdHkgYXJyYXkgKGBbXWApIGluIG9yZGVyIHRvIGRpc2FibGUgYWxsIGRlZmF1bHQgdmFsaWRhdG9ycy5cbiAgICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vZGVpdHktaW8vZmFsY29uLXBsYXRmb3JtL2Jsb2IvZGI0MGRjMWM2MWZjMTdlYjMyNzZjZGViN2E0NmM2YmE3NzMzNzMxNC9wYWNrYWdlcy9mYWxjb24tZnJvbnQta2l0L3NyYy9Gb3Jtcy9nZXREZWZhdWx0SW5wdXRWYWxpZGF0b3JzLnRzI0w5XG4gICAqIEBzZWUgaHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9odG1sL2h0bWxfZm9ybV9hdHRyaWJ1dGVzLmFzcFxuICAgKi9cbiAgdmFsaWRhdGU/OiBJVmFsaWRhdG9yW107XG4gIGNoaWxkcmVuPzogKHByb3BzOiBGb3JtRmllbGRSZW5kZXJQcm9wczxUVmFsdWU+KSA9PiBSZWFjdC5SZWFjdE5vZGU7XG59ICYgUmVhY3QuSW5wdXRIVE1MQXR0cmlidXRlczxIVE1MSW5wdXRFbGVtZW50PiAmXG4gIFJlYWN0LlNlbGVjdEhUTUxBdHRyaWJ1dGVzPEhUTUxTZWxlY3RFbGVtZW50PiAmXG4gIFRoZW1pbmdQcm9wcztcblxuZXhwb3J0IGNvbnN0IEZvcm1GaWVsZDogUmVhY3QuU0ZDPEZvcm1GaWVsZFByb3BzPiA9IFJlYWN0Lm1lbW8ocHJvcHMgPT4ge1xuICBjb25zdCB7IG5hbWUsIHZhbGlkYXRlLCByZXF1aXJlZCwgY2hpbGRyZW4sIC4uLnJlc3RQcm9wcyB9ID0gcHJvcHM7XG4gIGNvbnN0IHsgdGhlbWFibGVQcm9wcywgcmVzdCB9ID0gZXh0cmFjdFRoZW1hYmxlUHJvcHMocmVzdFByb3BzKTtcblxuICBjb25zdCB2YWxpZGF0b3JzID0gdXNlQ2FsbGJhY2soKCkgPT4gZ2V0RGVmYXVsdElucHV0VmFsaWRhdG9ycyhwcm9wcyksIFtwcm9wc10pO1xuXG4gIHJldHVybiAoXG4gICAgPEZpZWxkIG5hbWU9e25hbWV9IHZhbGlkYXRlPXt2YWxpZGF0b3JzKCl9IHsuLi5yZXN0fT5cbiAgICAgIHsoeyBmb3JtLCBmaWVsZCwgbGFiZWwsIGVycm9yIH0pID0+IChcbiAgICAgICAgPEZvcm1GaWVsZExheW91dCB7Li4udGhlbWFibGVQcm9wc30+XG4gICAgICAgICAge2xhYmVsICYmIDxGb3JtRmllbGRMYWJlbCBodG1sRm9yPXtmaWVsZC5pZH0+e2xhYmVsfTwvRm9ybUZpZWxkTGFiZWw+fVxuICAgICAgICAgIHtjaGlsZHJlbiA/IChcbiAgICAgICAgICAgIGNoaWxkcmVuKHsgZm9ybSwgZmllbGQ6IHsgLi4uZmllbGQsIGdyaWRBcmVhOiBGb3JtRmllbGRBcmVhLmlucHV0IH0gfSlcbiAgICAgICAgICApIDogKFxuICAgICAgICAgICAgPElucHV0IHsuLi5maWVsZH0gZ3JpZEFyZWE9e0Zvcm1GaWVsZEFyZWEuaW5wdXR9IC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8Rm9ybUZpZWxkRXJyb3I+e2ZpZWxkLmludmFsaWQgPyBlcnJvciA6IG51bGx9PC9Gb3JtRmllbGRFcnJvcj5cbiAgICAgICAgPC9Gb3JtRmllbGRMYXlvdXQ+XG4gICAgICApfVxuICAgIDwvRmllbGQ+XG4gICk7XG59KTtcbiJdfQ==