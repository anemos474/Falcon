"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.BlogPostSchema = void 0;

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _JsonLd = /*#__PURE__*/require("./JsonLd");

function getWordCount(string) {
  return string.trim().split(/\s+/).length;
}

function addBackslash(slug) {
  return slug[0] === '/' ? slug : "/" + slug;
}

/**
 * Get the schema data for a blog.
 * @param  blog
 */
var getBlogSchemaData = function getBlogSchemaData(blog) {
  var _blog$image, _blog$author;

  if (!blog) {
    return null;
  }

  var schema = {
    '@context': 'https://schema.org',
    '@type': 'BlogPosting',
    headline: blog.title,
    dateCreated: blog.date,
    dateModified: blog.modified,
    description: blog.excerpt
  };

  if (blog != null && blog.content) {
    schema.articleBody = blog.content;
    schema.wordcount = getWordCount(blog.content);
  }

  if (blog != null && (_blog$image = blog.image) != null && _blog$image.url) {
    schema.image = blog.image.url;
  }

  if (blog != null && blog.slug) {
    schema.url = addBackslash(blog.slug);
  }

  if (blog != null && (_blog$author = blog.author) != null && _blog$author.name) {
    schema.author = {
      '@type': 'Person',
      name: blog.author.name
    };
  }

  return schema;
};

var BlogPostSchema = function BlogPostSchema(_ref) {
  var blog = _ref.blog;
  var schemaData = getBlogSchemaData(blog);
  return /*#__PURE__*/_react.default.createElement(_JsonLd.JsonLd, {
    item: schemaData
  });
};

exports.BlogPostSchema = BlogPostSchema;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TRU8vQmxvZ1Bvc3RTY2hlbWEudHN4Il0sIm5hbWVzIjpbImdldFdvcmRDb3VudCIsInN0cmluZyIsInRyaW0iLCJzcGxpdCIsImxlbmd0aCIsImFkZEJhY2tzbGFzaCIsInNsdWciLCJnZXRCbG9nU2NoZW1hRGF0YSIsImJsb2ciLCJzY2hlbWEiLCJoZWFkbGluZSIsInRpdGxlIiwiZGF0ZUNyZWF0ZWQiLCJkYXRlIiwiZGF0ZU1vZGlmaWVkIiwibW9kaWZpZWQiLCJkZXNjcmlwdGlvbiIsImV4Y2VycHQiLCJjb250ZW50IiwiYXJ0aWNsZUJvZHkiLCJ3b3JkY291bnQiLCJpbWFnZSIsInVybCIsImF1dGhvciIsIm5hbWUiLCJCbG9nUG9zdFNjaGVtYSIsInNjaGVtYURhdGEiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQSxTQUFTQSxZQUFULENBQXNCQyxNQUF0QixFQUE4QjtBQUM1QixTQUFPQSxNQUFNLENBQUNDLElBQVAsR0FBY0MsS0FBZCxDQUFvQixLQUFwQixFQUEyQkMsTUFBbEM7QUFDRDs7QUFFRCxTQUFTQyxZQUFULENBQXNCQyxJQUF0QixFQUE0QjtBQUMxQixTQUFPQSxJQUFJLENBQUMsQ0FBRCxDQUFKLEtBQVksR0FBWixHQUFrQkEsSUFBbEIsU0FBNkJBLElBQXBDO0FBQ0Q7O0FBZ0NEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUMsaUJBQWlCLEdBQUcsU0FBcEJBLGlCQUFvQixDQUE4QkMsSUFBOUIsRUFBMEM7QUFBQTs7QUFDbEUsTUFBSSxDQUFDQSxJQUFMLEVBQVc7QUFDVCxXQUFPLElBQVA7QUFDRDs7QUFDRCxNQUFNQyxNQUFzQixHQUFHO0FBQzdCLGdCQUFZLG9CQURpQjtBQUU3QixhQUFTLGFBRm9CO0FBRzdCQyxJQUFBQSxRQUFRLEVBQUVGLElBQUksQ0FBQ0csS0FIYztBQUk3QkMsSUFBQUEsV0FBVyxFQUFFSixJQUFJLENBQUNLLElBSlc7QUFLN0JDLElBQUFBLFlBQVksRUFBRU4sSUFBSSxDQUFDTyxRQUxVO0FBTTdCQyxJQUFBQSxXQUFXLEVBQUVSLElBQUksQ0FBQ1M7QUFOVyxHQUEvQjs7QUFTQSxNQUFJVCxJQUFKLFlBQUlBLElBQUksQ0FBRVUsT0FBVixFQUFtQjtBQUNqQlQsSUFBQUEsTUFBTSxDQUFDVSxXQUFQLEdBQXFCWCxJQUFJLENBQUNVLE9BQTFCO0FBQ0FULElBQUFBLE1BQU0sQ0FBQ1csU0FBUCxHQUFtQnBCLFlBQVksQ0FBQ1EsSUFBSSxDQUFDVSxPQUFOLENBQS9CO0FBQ0Q7O0FBRUQsTUFBSVYsSUFBSiwyQkFBSUEsSUFBSSxDQUFFYSxLQUFWLGFBQUksWUFBYUMsR0FBakIsRUFBc0I7QUFDcEJiLElBQUFBLE1BQU0sQ0FBQ1ksS0FBUCxHQUFlYixJQUFJLENBQUNhLEtBQUwsQ0FBV0MsR0FBMUI7QUFDRDs7QUFFRCxNQUFJZCxJQUFKLFlBQUlBLElBQUksQ0FBRUYsSUFBVixFQUFnQjtBQUNkRyxJQUFBQSxNQUFNLENBQUNhLEdBQVAsR0FBYWpCLFlBQVksQ0FBQ0csSUFBSSxDQUFDRixJQUFOLENBQXpCO0FBQ0Q7O0FBRUQsTUFBSUUsSUFBSiw0QkFBSUEsSUFBSSxDQUFFZSxNQUFWLGFBQUksYUFBY0MsSUFBbEIsRUFBd0I7QUFDdEJmLElBQUFBLE1BQU0sQ0FBQ2MsTUFBUCxHQUFnQjtBQUNkLGVBQVMsUUFESztBQUVkQyxNQUFBQSxJQUFJLEVBQUVoQixJQUFJLENBQUNlLE1BQUwsQ0FBWUM7QUFGSixLQUFoQjtBQUlEOztBQUVELFNBQU9mLE1BQVA7QUFDRCxDQWxDRDs7QUFvQ08sSUFBTWdCLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsT0FBYztBQUFBLE1BQVhqQixJQUFXLFFBQVhBLElBQVc7QUFDMUMsTUFBTWtCLFVBQVUsR0FBR25CLGlCQUFpQixDQUFDQyxJQUFELENBQXBDO0FBQ0Esc0JBQU8sNkJBQUMsY0FBRDtBQUFRLElBQUEsSUFBSSxFQUFFa0I7QUFBZCxJQUFQO0FBQ0QsQ0FITSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBKc29uTGQgfSBmcm9tICcuL0pzb25MZCc7XG5cbmZ1bmN0aW9uIGdldFdvcmRDb3VudChzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy50cmltKCkuc3BsaXQoL1xccysvKS5sZW5ndGg7XG59XG5cbmZ1bmN0aW9uIGFkZEJhY2tzbGFzaChzbHVnKSB7XG4gIHJldHVybiBzbHVnWzBdID09PSAnLycgPyBzbHVnIDogYC8ke3NsdWd9YDtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBdXRob3JTY2hlbWFEYXRhIHtcbiAgJ0B0eXBlJzogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQmxvZ1NjaGVtYURhdGEge1xuICAnQGNvbnRleHQnOiBzdHJpbmc7XG4gICdAdHlwZSc6IHN0cmluZztcbiAgaGVhZGxpbmU6IHN0cmluZztcbiAgaW1hZ2U/OiBzdHJpbmc7XG4gIHVybD86IHN0cmluZztcbiAgZGF0ZUNyZWF0ZWQ/OiBzdHJpbmc7XG4gIGRhdGVNb2RpZmllZD86IHN0cmluZztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG4gIGFydGljbGVCb2R5Pzogc3RyaW5nO1xuICB3b3JkY291bnQ/OiBudW1iZXI7XG4gIGF1dGhvcj86IEF1dGhvclNjaGVtYURhdGE7XG59XG5cbnR5cGUgQmxvZ0RhdGFGb3JTY2hlbWEgPSB7XG4gIHNsdWc6IHN0cmluZztcbiAgdGl0bGU6IHN0cmluZztcbiAgZGF0ZTogc3RyaW5nO1xuICBtb2RpZmllZDogc3RyaW5nO1xuICBleGNlcnB0OiBzdHJpbmc7XG4gIGltYWdlPzogeyB1cmw6IHN0cmluZyB9O1xuICBjb250ZW50Pzogc3RyaW5nO1xuICBhdXRob3I/OiB7IG5hbWU6IHN0cmluZyB9O1xufTtcblxuLyoqXG4gKiBHZXQgdGhlIHNjaGVtYSBkYXRhIGZvciBhIGJsb2cuXG4gKiBAcGFyYW0gIGJsb2dcbiAqL1xuY29uc3QgZ2V0QmxvZ1NjaGVtYURhdGEgPSA8QiBleHRlbmRzIEJsb2dEYXRhRm9yU2NoZW1hPihibG9nOiBCKSA9PiB7XG4gIGlmICghYmxvZykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IHNjaGVtYTogQmxvZ1NjaGVtYURhdGEgPSB7XG4gICAgJ0Bjb250ZXh0JzogJ2h0dHBzOi8vc2NoZW1hLm9yZycsXG4gICAgJ0B0eXBlJzogJ0Jsb2dQb3N0aW5nJyxcbiAgICBoZWFkbGluZTogYmxvZy50aXRsZSxcbiAgICBkYXRlQ3JlYXRlZDogYmxvZy5kYXRlLFxuICAgIGRhdGVNb2RpZmllZDogYmxvZy5tb2RpZmllZCxcbiAgICBkZXNjcmlwdGlvbjogYmxvZy5leGNlcnB0XG4gIH07XG5cbiAgaWYgKGJsb2c/LmNvbnRlbnQpIHtcbiAgICBzY2hlbWEuYXJ0aWNsZUJvZHkgPSBibG9nLmNvbnRlbnQ7XG4gICAgc2NoZW1hLndvcmRjb3VudCA9IGdldFdvcmRDb3VudChibG9nLmNvbnRlbnQpO1xuICB9XG5cbiAgaWYgKGJsb2c/LmltYWdlPy51cmwpIHtcbiAgICBzY2hlbWEuaW1hZ2UgPSBibG9nLmltYWdlLnVybDtcbiAgfVxuXG4gIGlmIChibG9nPy5zbHVnKSB7XG4gICAgc2NoZW1hLnVybCA9IGFkZEJhY2tzbGFzaChibG9nLnNsdWcpO1xuICB9XG5cbiAgaWYgKGJsb2c/LmF1dGhvcj8ubmFtZSkge1xuICAgIHNjaGVtYS5hdXRob3IgPSB7XG4gICAgICAnQHR5cGUnOiAnUGVyc29uJyxcbiAgICAgIG5hbWU6IGJsb2cuYXV0aG9yLm5hbWVcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHNjaGVtYTtcbn07XG5cbmV4cG9ydCBjb25zdCBCbG9nUG9zdFNjaGVtYSA9ICh7IGJsb2cgfSkgPT4ge1xuICBjb25zdCBzY2hlbWFEYXRhID0gZ2V0QmxvZ1NjaGVtYURhdGEoYmxvZyk7XG4gIHJldHVybiA8SnNvbkxkIGl0ZW09e3NjaGVtYURhdGF9IC8+O1xufTtcbiJdfQ==