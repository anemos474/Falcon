"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.Price = void 0;

var _extends2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _propTypes = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("prop-types"));

var _falconUi = /*#__PURE__*/require("@deity/falcon-ui");

var _falconFrontKit = /*#__PURE__*/require("@deity/falcon-front-kit");

var PriceInnerDom = function PriceInnerDom(_ref) {
  var value = _ref.value,
      formatOptions = _ref.formatOptions,
      rest = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["value", "formatOptions"]);

  var _useCurrency = (0, _falconFrontKit.useCurrency)(),
      priceFormat = _useCurrency.priceFormat;

  return /*#__PURE__*/_react.default.createElement(_falconUi.Text, (0, _extends2.default)({
    m: "lg"
  }, rest), priceFormat(value, formatOptions));
};

PriceInnerDom.propTypes = {
  value: _propTypes.default.number.isRequired
};
var Price = /*#__PURE__*/(0, _falconUi.themed)({
  tag: PriceInnerDom,
  defaultProps: {
    value: 0.0,
    formatOptions: undefined,
    ellipsis: false
  },
  defaultTheme: {
    price: {
      display: 'block',
      m: 'none',
      css: {
        whiteSpace: 'nowrap',
        overflow: 'hidden'
      },
      variants: {
        old: {
          css: {
            textDecorationStyle: 'solid',
            textDecorationLine: 'line-through'
          }
        },
        special: {
          fontWeight: 'bold',
          css: {
            color: 'red'
          }
        }
      }
    }
  }
});
exports.Price = Price;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9QcmljZS9QcmljZS50c3giXSwibmFtZXMiOlsiUHJpY2VJbm5lckRvbSIsInZhbHVlIiwiZm9ybWF0T3B0aW9ucyIsInJlc3QiLCJwcmljZUZvcm1hdCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsIm51bWJlciIsImlzUmVxdWlyZWQiLCJQcmljZSIsInRhZyIsImRlZmF1bHRQcm9wcyIsInVuZGVmaW5lZCIsImVsbGlwc2lzIiwiZGVmYXVsdFRoZW1lIiwicHJpY2UiLCJkaXNwbGF5IiwibSIsImNzcyIsIndoaXRlU3BhY2UiLCJvdmVyZmxvdyIsInZhcmlhbnRzIiwib2xkIiwidGV4dERlY29yYXRpb25TdHlsZSIsInRleHREZWNvcmF0aW9uTGluZSIsInNwZWNpYWwiLCJmb250V2VpZ2h0IiwiY29sb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBUUEsSUFBTUEsYUFBbUMsR0FBRyxTQUF0Q0EsYUFBc0MsT0FBdUM7QUFBQSxNQUFwQ0MsS0FBb0MsUUFBcENBLEtBQW9DO0FBQUEsTUFBN0JDLGFBQTZCLFFBQTdCQSxhQUE2QjtBQUFBLE1BQVhDLElBQVc7O0FBQ2pGLHFCQUF3QixrQ0FBeEI7QUFBQSxNQUFRQyxXQUFSLGdCQUFRQSxXQUFSOztBQUVBLHNCQUNFLDZCQUFDLGNBQUQ7QUFBTSxJQUFBLENBQUMsRUFBQztBQUFSLEtBQWlCRCxJQUFqQixHQUNHQyxXQUFXLENBQUNILEtBQUQsRUFBUUMsYUFBUixDQURkLENBREY7QUFLRCxDQVJEOztBQVNBRixhQUFhLENBQUNLLFNBQWQsR0FBMEI7QUFDeEJKLEVBQUFBLEtBQUssRUFBRUssbUJBQVVDLE1BQVYsQ0FBaUJDO0FBREEsQ0FBMUI7QUFJTyxJQUFNQyxLQUFLLGdCQUFHLHNCQUFtQjtBQUN0Q0MsRUFBQUEsR0FBRyxFQUFFVixhQURpQztBQUV0Q1csRUFBQUEsWUFBWSxFQUFFO0FBQ1pWLElBQUFBLEtBQUssRUFBRSxHQURLO0FBRVpDLElBQUFBLGFBQWEsRUFBRVUsU0FGSDtBQUdaQyxJQUFBQSxRQUFRLEVBQUU7QUFIRSxHQUZ3QjtBQU90Q0MsRUFBQUEsWUFBWSxFQUFFO0FBQ1pDLElBQUFBLEtBQUssRUFBRTtBQUNMQyxNQUFBQSxPQUFPLEVBQUUsT0FESjtBQUVMQyxNQUFBQSxDQUFDLEVBQUUsTUFGRTtBQUdMQyxNQUFBQSxHQUFHLEVBQUU7QUFDSEMsUUFBQUEsVUFBVSxFQUFFLFFBRFQ7QUFFSEMsUUFBQUEsUUFBUSxFQUFFO0FBRlAsT0FIQTtBQU9MQyxNQUFBQSxRQUFRLEVBQUU7QUFDUkMsUUFBQUEsR0FBRyxFQUFFO0FBQ0hKLFVBQUFBLEdBQUcsRUFBRTtBQUNISyxZQUFBQSxtQkFBbUIsRUFBRSxPQURsQjtBQUVIQyxZQUFBQSxrQkFBa0IsRUFBRTtBQUZqQjtBQURGLFNBREc7QUFPUkMsUUFBQUEsT0FBTyxFQUFFO0FBQ1BDLFVBQUFBLFVBQVUsRUFBRSxNQURMO0FBRVBSLFVBQUFBLEdBQUcsRUFBRTtBQUNIUyxZQUFBQSxLQUFLLEVBQUU7QUFESjtBQUZFO0FBUEQ7QUFQTDtBQURLO0FBUHdCLENBQW5CLENBQWQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IHRoZW1lZCwgVGV4dCB9IGZyb20gJ0BkZWl0eS9mYWxjb24tdWknO1xuaW1wb3J0IHsgdXNlQ3VycmVuY3ksIFByaWNlRm9ybWF0T3B0aW9ucyB9IGZyb20gJ0BkZWl0eS9mYWxjb24tZnJvbnQta2l0JztcblxuZXhwb3J0IHR5cGUgUHJpY2VQcm9wcyA9IHtcbiAgdmFsdWU6IG51bWJlcjtcbiAgLyoqIHBhc3NpbmcgZm9ybWF0dGluZyBvcHRpb25zIG1heSBub3QgdXNlIG1lbW9pemVkIGZvcm1hdHRlciwgc28gdGhlIHBlcmZvcm1hbmNlIHBlbmFsdHkgY291bGQgYmUgcGFpZCAqL1xuICBmb3JtYXRPcHRpb25zPzogUHJpY2VGb3JtYXRPcHRpb25zO1xuICBlbGxpcHNpczogYm9vbGVhbjtcbn07XG5jb25zdCBQcmljZUlubmVyRG9tOiBSZWFjdC5GQzxQcmljZVByb3BzPiA9ICh7IHZhbHVlLCBmb3JtYXRPcHRpb25zLCAuLi5yZXN0IH0pID0+IHtcbiAgY29uc3QgeyBwcmljZUZvcm1hdCB9ID0gdXNlQ3VycmVuY3koKTtcblxuICByZXR1cm4gKFxuICAgIDxUZXh0IG09XCJsZ1wiIHsuLi5yZXN0fT5cbiAgICAgIHtwcmljZUZvcm1hdCh2YWx1ZSwgZm9ybWF0T3B0aW9ucyl9XG4gICAgPC9UZXh0PlxuICApO1xufTtcblByaWNlSW5uZXJEb20ucHJvcFR5cGVzID0ge1xuICB2YWx1ZTogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkXG59O1xuXG5leHBvcnQgY29uc3QgUHJpY2UgPSB0aGVtZWQ8UHJpY2VQcm9wcz4oe1xuICB0YWc6IFByaWNlSW5uZXJEb20sXG4gIGRlZmF1bHRQcm9wczoge1xuICAgIHZhbHVlOiAwLjAsXG4gICAgZm9ybWF0T3B0aW9uczogdW5kZWZpbmVkLFxuICAgIGVsbGlwc2lzOiBmYWxzZVxuICB9LFxuICBkZWZhdWx0VGhlbWU6IHtcbiAgICBwcmljZToge1xuICAgICAgZGlzcGxheTogJ2Jsb2NrJyxcbiAgICAgIG06ICdub25lJyxcbiAgICAgIGNzczoge1xuICAgICAgICB3aGl0ZVNwYWNlOiAnbm93cmFwJyxcbiAgICAgICAgb3ZlcmZsb3c6ICdoaWRkZW4nXG4gICAgICB9LFxuICAgICAgdmFyaWFudHM6IHtcbiAgICAgICAgb2xkOiB7XG4gICAgICAgICAgY3NzOiB7XG4gICAgICAgICAgICB0ZXh0RGVjb3JhdGlvblN0eWxlOiAnc29saWQnLFxuICAgICAgICAgICAgdGV4dERlY29yYXRpb25MaW5lOiAnbGluZS10aHJvdWdoJ1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgc3BlY2lhbDoge1xuICAgICAgICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcbiAgICAgICAgICBjc3M6IHtcbiAgICAgICAgICAgIGNvbG9yOiAncmVkJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufSk7XG4iXX0=