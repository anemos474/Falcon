import React from 'react';
import { Tab } from './Tabs';
import { ThemeEditorStateRenderProp, TabKeys } from './ThemeEditorState';
import { ThemePreset } from './ThemePresets';
export * from './ThemeEditorState';
export * from './thememeta';
declare type ThemeEditorProps = ThemeEditorStateRenderProp & {
    enableComponentFinder?: boolean;
    side?: 'left' | 'right';
};
export declare class ThemeEditor extends React.Component<ThemeEditorProps> {
    static defaultProps: {
        enableComponentFinder: boolean;
        side: string;
    };
    tabs: (enableComponent: boolean) => Tab<TabKeys>[];
    onChange: (themeKey: string, propName: string, isNumber?: boolean) => (e: React.ChangeEvent<HTMLInputElement>) => void;
    onFontChange: (fontKind: string) => (fontOption: any) => void;
    onPresetChange: (preset: ThemePreset) => () => void;
    onComponentThemeChange: (themeKey: string, variantKey?: string) => (key: string, value: string | object) => void;
    loadGoogleFont(font: string): void;
    render(): JSX.Element;
}
//# sourceMappingURL=index.d.ts.map