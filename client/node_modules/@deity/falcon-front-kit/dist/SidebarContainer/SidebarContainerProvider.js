"use strict";

var _interopRequireWildcard = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.SidebarContainer = exports.useSidebarContainer = exports.SidebarContainerProvider = void 0;

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

var _SidebarContainerContext = /*#__PURE__*/require("./SidebarContainerContext");

var SidebarContainerProvider = function SidebarContainerProvider(props) {
  var children = props.children;

  var _useState = (0, _react.useState)(false),
      isOpen = _useState[0],
      setIsOpen = _useState[1];

  var _useState2 = (0, _react.useState)(undefined),
      content = _useState2[0],
      setContent = _useState2[1];

  var open = function open(type, params, side) {
    setContent({
      type: type,
      params: params,
      side: side
    });
    setIsOpen(true);
  };

  var close = function close() {
    setIsOpen(false);
  };

  return /*#__PURE__*/_react.default.createElement(_SidebarContainerContext.SidebarContainerContext.Provider, {
    value: {
      isOpen: isOpen,
      content: content,
      open: open,
      close: close
    }
  }, children);
};

exports.SidebarContainerProvider = SidebarContainerProvider;

var useSidebarContainer = function useSidebarContainer() {
  return (0, _react.useContext)(_SidebarContainerContext.SidebarContainerContext);
};

exports.useSidebarContainer = useSidebarContainer;

var SidebarContainer = function SidebarContainer(_ref) {
  var children = _ref.children;
  return children(Object.assign({}, useSidebarContainer()));
};

exports.SidebarContainer = SidebarContainer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TaWRlYmFyQ29udGFpbmVyL1NpZGViYXJDb250YWluZXJQcm92aWRlci50c3giXSwibmFtZXMiOlsiU2lkZWJhckNvbnRhaW5lclByb3ZpZGVyIiwicHJvcHMiLCJjaGlsZHJlbiIsImlzT3BlbiIsInNldElzT3BlbiIsInVuZGVmaW5lZCIsImNvbnRlbnQiLCJzZXRDb250ZW50Iiwib3BlbiIsInR5cGUiLCJwYXJhbXMiLCJzaWRlIiwiY2xvc2UiLCJ1c2VTaWRlYmFyQ29udGFpbmVyIiwiU2lkZWJhckNvbnRhaW5lckNvbnRleHQiLCJTaWRlYmFyQ29udGFpbmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBR08sSUFBTUEsd0JBQWlFLEdBQUcsU0FBcEVBLHdCQUFvRSxDQUFBQyxLQUFLLEVBQUk7QUFDeEYsTUFBUUMsUUFBUixHQUFxQkQsS0FBckIsQ0FBUUMsUUFBUjs7QUFFQSxrQkFBNEIscUJBQWtCLEtBQWxCLENBQTVCO0FBQUEsTUFBT0MsTUFBUDtBQUFBLE1BQWVDLFNBQWY7O0FBQ0EsbUJBQThCLHFCQUF5QkMsU0FBekIsQ0FBOUI7QUFBQSxNQUFPQyxPQUFQO0FBQUEsTUFBZ0JDLFVBQWhCOztBQUVBLE1BQU1DLElBQUksR0FBRyxTQUFQQSxJQUFPLENBQUNDLElBQUQsRUFBZUMsTUFBZixFQUE0QkMsSUFBNUIsRUFBK0M7QUFDMURKLElBQUFBLFVBQVUsQ0FBQztBQUFFRSxNQUFBQSxJQUFJLEVBQUpBLElBQUY7QUFBUUMsTUFBQUEsTUFBTSxFQUFOQSxNQUFSO0FBQWdCQyxNQUFBQSxJQUFJLEVBQUpBO0FBQWhCLEtBQUQsQ0FBVjtBQUNBUCxJQUFBQSxTQUFTLENBQUMsSUFBRCxDQUFUO0FBQ0QsR0FIRDs7QUFLQSxNQUFNUSxLQUFLLEdBQUcsU0FBUkEsS0FBUSxHQUFNO0FBQ2xCUixJQUFBQSxTQUFTLENBQUMsS0FBRCxDQUFUO0FBQ0QsR0FGRDs7QUFJQSxzQkFDRSw2QkFBQyxnREFBRCxDQUF5QixRQUF6QjtBQUNFLElBQUEsS0FBSyxFQUFFO0FBQ0xELE1BQUFBLE1BQU0sRUFBTkEsTUFESztBQUVMRyxNQUFBQSxPQUFPLEVBQVBBLE9BRks7QUFHTEUsTUFBQUEsSUFBSSxFQUFKQSxJQUhLO0FBSUxJLE1BQUFBLEtBQUssRUFBTEE7QUFKSztBQURULEtBUUdWLFFBUkgsQ0FERjtBQVlELENBM0JNOzs7O0FBNkJBLElBQU1XLG1CQUFtQixHQUFHLFNBQXRCQSxtQkFBc0I7QUFBQSxTQUFtQyx1QkFBV0MsZ0RBQVgsQ0FBbkM7QUFBQSxDQUE1Qjs7OztBQU9BLElBQU1DLGdCQUFpRCxHQUFHLFNBQXBEQSxnQkFBb0Q7QUFBQSxNQUFHYixRQUFILFFBQUdBLFFBQUg7QUFBQSxTQUMvREEsUUFBUSxtQkFBTVcsbUJBQW1CLEVBQXpCLEVBRHVEO0FBQUEsQ0FBMUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTaWRlYmFyQ29udGFpbmVyQ29udGV4dCwgU2lkZWJhckNvbnRhaW5lckNvbnRleHRUeXBlLCBTaWRlYmFyQ29udGVudCB9IGZyb20gJy4vU2lkZWJhckNvbnRhaW5lckNvbnRleHQnO1xuXG5leHBvcnQgdHlwZSBTaWRlYmFyQ29udGFpbmVyUHJvdmlkZXJQcm9wcyA9IHt9O1xuZXhwb3J0IGNvbnN0IFNpZGViYXJDb250YWluZXJQcm92aWRlcjogUmVhY3QuRkM8U2lkZWJhckNvbnRhaW5lclByb3ZpZGVyUHJvcHM+ID0gcHJvcHMgPT4ge1xuICBjb25zdCB7IGNoaWxkcmVuIH0gPSBwcm9wcztcblxuICBjb25zdCBbaXNPcGVuLCBzZXRJc09wZW5dID0gdXNlU3RhdGU8Ym9vbGVhbj4oZmFsc2UpO1xuICBjb25zdCBbY29udGVudCwgc2V0Q29udGVudF0gPSB1c2VTdGF0ZTxTaWRlYmFyQ29udGVudD4odW5kZWZpbmVkKTtcblxuICBjb25zdCBvcGVuID0gKHR5cGU6IHN0cmluZywgcGFyYW1zOiBhbnksIHNpZGU/OiAncmlnaHQnKSA9PiB7XG4gICAgc2V0Q29udGVudCh7IHR5cGUsIHBhcmFtcywgc2lkZSB9KTtcbiAgICBzZXRJc09wZW4odHJ1ZSk7XG4gIH07XG5cbiAgY29uc3QgY2xvc2UgPSAoKSA9PiB7XG4gICAgc2V0SXNPcGVuKGZhbHNlKTtcbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxTaWRlYmFyQ29udGFpbmVyQ29udGV4dC5Qcm92aWRlclxuICAgICAgdmFsdWU9e3tcbiAgICAgICAgaXNPcGVuLFxuICAgICAgICBjb250ZW50LFxuICAgICAgICBvcGVuLFxuICAgICAgICBjbG9zZVxuICAgICAgfX1cbiAgICA+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9TaWRlYmFyQ29udGFpbmVyQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBjb25zdCB1c2VTaWRlYmFyQ29udGFpbmVyID0gKCk6IFNpZGViYXJDb250YWluZXJDb250ZXh0VHlwZSA9PiB1c2VDb250ZXh0KFNpZGViYXJDb250YWluZXJDb250ZXh0KTtcblxuZXhwb3J0IHR5cGUgU2lkZWJhckNvbnRhaW5lclJlbmRlclByb3BzID0gU2lkZWJhckNvbnRhaW5lckNvbnRleHRUeXBlO1xuZXhwb3J0IHR5cGUgU2lkZWJhckNvbnRhaW5lclByb3BzID0ge1xuICBjaGlsZHJlbjogKHByb3BzOiBTaWRlYmFyQ29udGFpbmVyUmVuZGVyUHJvcHMpID0+IGFueTtcbn07XG5cbmV4cG9ydCBjb25zdCBTaWRlYmFyQ29udGFpbmVyOiBSZWFjdC5GQzxTaWRlYmFyQ29udGFpbmVyUHJvcHM+ID0gKHsgY2hpbGRyZW4gfSkgPT5cbiAgY2hpbGRyZW4oeyAuLi51c2VTaWRlYmFyQ29udGFpbmVyKCkgfSk7XG4iXX0=