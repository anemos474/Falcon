"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.ForgotPasswordFormProvider = void 0;

var _extends2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _formik = /*#__PURE__*/require("formik");

var _falconData = /*#__PURE__*/require("@deity/falcon-data");

var _falconShopData = /*#__PURE__*/require("@deity/falcon-shop-data");

var _React = /*#__PURE__*/require("../React");

var ForgotPasswordFormProvider = function ForgotPasswordFormProvider(props) {
  var onSuccess = props.onSuccess,
      initialValues = props.initialValues,
      mutationOptions = props.mutationOptions,
      formikProps = (0, _objectWithoutPropertiesLoose2.default)(props, ["onSuccess", "initialValues", "mutationOptions"]);
  var defaultInitialValues = {
    email: ''
  };

  var _useRequestPasswordRe = (0, _falconShopData.useRequestPasswordResetMutation)(),
      requestPasswordReset = _useRequestPasswordRe[0];

  var getUserError = (0, _falconData.useGetUserError)();
  var isMounted = (0, _React.useMounted)();
  return /*#__PURE__*/_react.default.createElement(_formik.Formik, (0, _extends2.default)({
    initialStatus: {},
    initialValues: initialValues || defaultInitialValues,
    onSubmit: function onSubmit(values, _ref) {
      var setSubmitting = _ref.setSubmitting,
          setStatus = _ref.setStatus;
      return requestPasswordReset(Object.assign({
        variables: {
          input: values
        }
      }, mutationOptions || {})).then(function (_ref2) {
        var data = _ref2.data;

        if (isMounted.current) {
          setSubmitting(false);
          setStatus({
            data: data
          });
          return onSuccess && onSuccess(data);
        }
      }).catch(function (e) {
        var error = getUserError(e);

        if (error.length && isMounted.current) {
          setStatus({
            error: error
          });
          setSubmitting(false);
        }
      });
    }
  }, formikProps));
};

exports.ForgotPasswordFormProvider = ForgotPasswordFormProvider;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BY2NvdW50L0ZvcmdvdFBhc3N3b3JkRm9ybVByb3ZpZGVyLnRzeCJdLCJuYW1lcyI6WyJGb3Jnb3RQYXNzd29yZEZvcm1Qcm92aWRlciIsInByb3BzIiwib25TdWNjZXNzIiwiaW5pdGlhbFZhbHVlcyIsIm11dGF0aW9uT3B0aW9ucyIsImZvcm1pa1Byb3BzIiwiZGVmYXVsdEluaXRpYWxWYWx1ZXMiLCJlbWFpbCIsInJlcXVlc3RQYXNzd29yZFJlc2V0IiwiZ2V0VXNlckVycm9yIiwiaXNNb3VudGVkIiwidmFsdWVzIiwic2V0U3VibWl0dGluZyIsInNldFN0YXR1cyIsInZhcmlhYmxlcyIsImlucHV0IiwidGhlbiIsImRhdGEiLCJjdXJyZW50IiwiY2F0Y2giLCJlIiwiZXJyb3IiLCJsZW5ndGgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBRUE7O0FBRUE7O0FBTU8sSUFBTUEsMEJBQXNFLEdBQUcsU0FBekVBLDBCQUF5RSxDQUFBQyxLQUFLLEVBQUk7QUFDN0YsTUFBUUMsU0FBUixHQUFzRUQsS0FBdEUsQ0FBUUMsU0FBUjtBQUFBLE1BQW1CQyxhQUFuQixHQUFzRUYsS0FBdEUsQ0FBbUJFLGFBQW5CO0FBQUEsTUFBa0NDLGVBQWxDLEdBQXNFSCxLQUF0RSxDQUFrQ0csZUFBbEM7QUFBQSxNQUFzREMsV0FBdEQsK0NBQXNFSixLQUF0RTtBQUNBLE1BQU1LLG9CQUErQyxHQUFHO0FBQ3REQyxJQUFBQSxLQUFLLEVBQUU7QUFEK0MsR0FBeEQ7O0FBSUEsOEJBQStCLHNEQUEvQjtBQUFBLE1BQU9DLG9CQUFQOztBQUNBLE1BQU1DLFlBQVksR0FBRyxrQ0FBckI7QUFDQSxNQUFNQyxTQUFTLEdBQUcsd0JBQWxCO0FBRUEsc0JBQ0UsNkJBQUMsY0FBRDtBQUNFLElBQUEsYUFBYSxFQUFFLEVBRGpCO0FBRUUsSUFBQSxhQUFhLEVBQUVQLGFBQWEsSUFBSUcsb0JBRmxDO0FBR0UsSUFBQSxRQUFRLEVBQUUsa0JBQUNLLE1BQUQ7QUFBQSxVQUFXQyxhQUFYLFFBQVdBLGFBQVg7QUFBQSxVQUEwQkMsU0FBMUIsUUFBMEJBLFNBQTFCO0FBQUEsYUFDUkwsb0JBQW9CO0FBQUdNLFFBQUFBLFNBQVMsRUFBRTtBQUFFQyxVQUFBQSxLQUFLLEVBQUVKO0FBQVQ7QUFBZCxTQUFxQ1AsZUFBZSxJQUFJLEVBQXhELEVBQXBCLENBQ0dZLElBREgsQ0FDUSxpQkFBYztBQUFBLFlBQVhDLElBQVcsU0FBWEEsSUFBVzs7QUFDbEIsWUFBSVAsU0FBUyxDQUFDUSxPQUFkLEVBQXVCO0FBQ3JCTixVQUFBQSxhQUFhLENBQUMsS0FBRCxDQUFiO0FBQ0FDLFVBQUFBLFNBQVMsQ0FBQztBQUFFSSxZQUFBQSxJQUFJLEVBQUpBO0FBQUYsV0FBRCxDQUFUO0FBQ0EsaUJBQU9mLFNBQVMsSUFBSUEsU0FBUyxDQUFDZSxJQUFELENBQTdCO0FBQ0Q7QUFDRixPQVBILEVBUUdFLEtBUkgsQ0FRUyxVQUFBQyxDQUFDLEVBQUk7QUFDVixZQUFNQyxLQUFLLEdBQUdaLFlBQVksQ0FBQ1csQ0FBRCxDQUExQjs7QUFDQSxZQUFJQyxLQUFLLENBQUNDLE1BQU4sSUFBZ0JaLFNBQVMsQ0FBQ1EsT0FBOUIsRUFBdUM7QUFDckNMLFVBQUFBLFNBQVMsQ0FBQztBQUFFUSxZQUFBQSxLQUFLLEVBQUxBO0FBQUYsV0FBRCxDQUFUO0FBQ0FULFVBQUFBLGFBQWEsQ0FBQyxLQUFELENBQWI7QUFDRDtBQUNGLE9BZEgsQ0FEUTtBQUFBO0FBSFosS0FvQk1QLFdBcEJOLEVBREY7QUF3QkQsQ0FsQ00iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgRm9ybWlrIH0gZnJvbSAnZm9ybWlrJztcbmltcG9ydCB7IHVzZUdldFVzZXJFcnJvciB9IGZyb20gJ0BkZWl0eS9mYWxjb24tZGF0YSc7XG5pbXBvcnQgeyBSZXF1ZXN0UGFzc3dvcmRSZXNldElucHV0IH0gZnJvbSAnQGRlaXR5L2ZhbGNvbi1zaG9wLWV4dGVuc2lvbic7XG5pbXBvcnQgeyB1c2VSZXF1ZXN0UGFzc3dvcmRSZXNldE11dGF0aW9uLCBSZXF1ZXN0UGFzc3dvcmRSZXNldFJlc3BvbnNlIH0gZnJvbSAnQGRlaXR5L2ZhbGNvbi1zaG9wLWRhdGEnO1xuaW1wb3J0IHsgRm9ybVByb3ZpZGVyUHJvcHMgfSBmcm9tICcuLi9Gb3Jtcyc7XG5pbXBvcnQgeyB1c2VNb3VudGVkIH0gZnJvbSAnLi4vUmVhY3QnO1xuXG5leHBvcnQgdHlwZSBGb3Jnb3RQYXNzd29yZEZvcm1Qcm92aWRlclByb3BzID0gRm9ybVByb3ZpZGVyUHJvcHM8XG4gIFJlcXVlc3RQYXNzd29yZFJlc2V0SW5wdXQsXG4gIFJlcXVlc3RQYXNzd29yZFJlc2V0UmVzcG9uc2Vcbj47XG5leHBvcnQgY29uc3QgRm9yZ290UGFzc3dvcmRGb3JtUHJvdmlkZXI6IFJlYWN0LlNGQzxGb3Jnb3RQYXNzd29yZEZvcm1Qcm92aWRlclByb3BzPiA9IHByb3BzID0+IHtcbiAgY29uc3QgeyBvblN1Y2Nlc3MsIGluaXRpYWxWYWx1ZXMsIG11dGF0aW9uT3B0aW9ucywgLi4uZm9ybWlrUHJvcHMgfSA9IHByb3BzO1xuICBjb25zdCBkZWZhdWx0SW5pdGlhbFZhbHVlczogUmVxdWVzdFBhc3N3b3JkUmVzZXRJbnB1dCA9IHtcbiAgICBlbWFpbDogJydcbiAgfTtcblxuICBjb25zdCBbcmVxdWVzdFBhc3N3b3JkUmVzZXRdID0gdXNlUmVxdWVzdFBhc3N3b3JkUmVzZXRNdXRhdGlvbigpO1xuICBjb25zdCBnZXRVc2VyRXJyb3IgPSB1c2VHZXRVc2VyRXJyb3IoKTtcbiAgY29uc3QgaXNNb3VudGVkID0gdXNlTW91bnRlZCgpO1xuXG4gIHJldHVybiAoXG4gICAgPEZvcm1pa1xuICAgICAgaW5pdGlhbFN0YXR1cz17e319XG4gICAgICBpbml0aWFsVmFsdWVzPXtpbml0aWFsVmFsdWVzIHx8IGRlZmF1bHRJbml0aWFsVmFsdWVzfVxuICAgICAgb25TdWJtaXQ9eyh2YWx1ZXMsIHsgc2V0U3VibWl0dGluZywgc2V0U3RhdHVzIH0pID0+XG4gICAgICAgIHJlcXVlc3RQYXNzd29yZFJlc2V0KHsgdmFyaWFibGVzOiB7IGlucHV0OiB2YWx1ZXMgfSwgLi4uKG11dGF0aW9uT3B0aW9ucyB8fCB7fSkgfSlcbiAgICAgICAgICAudGhlbigoeyBkYXRhIH0pID0+IHtcbiAgICAgICAgICAgIGlmIChpc01vdW50ZWQuY3VycmVudCkge1xuICAgICAgICAgICAgICBzZXRTdWJtaXR0aW5nKGZhbHNlKTtcbiAgICAgICAgICAgICAgc2V0U3RhdHVzKHsgZGF0YSB9KTtcbiAgICAgICAgICAgICAgcmV0dXJuIG9uU3VjY2VzcyAmJiBvblN1Y2Nlc3MoZGF0YSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuY2F0Y2goZSA9PiB7XG4gICAgICAgICAgICBjb25zdCBlcnJvciA9IGdldFVzZXJFcnJvcihlKTtcbiAgICAgICAgICAgIGlmIChlcnJvci5sZW5ndGggJiYgaXNNb3VudGVkLmN1cnJlbnQpIHtcbiAgICAgICAgICAgICAgc2V0U3RhdHVzKHsgZXJyb3IgfSk7XG4gICAgICAgICAgICAgIHNldFN1Ym1pdHRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pXG4gICAgICB9XG4gICAgICB7Li4uZm9ybWlrUHJvcHN9XG4gICAgLz5cbiAgKTtcbn07XG4iXX0=