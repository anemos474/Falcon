"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.ProtectedRoute = void 0;

var _extends2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _inheritsLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/inheritsLoose"));

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _propTypes = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("prop-types"));

var _reactRouterDom = /*#__PURE__*/require("react-router-dom");

var _falconData = /*#__PURE__*/require("@deity/falcon-data");

var _falconShopData = /*#__PURE__*/require("@deity/falcon-shop-data");

var ProtectedRoute = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(ProtectedRoute, _React$Component);

  function ProtectedRoute() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = ProtectedRoute.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        component = _this$props.component,
        redirectTo = _this$props.redirectTo,
        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, ["component", "redirectTo"]);
    var Component = component;
    return /*#__PURE__*/_react.default.createElement(_reactRouterDom.Route, (0, _extends2.default)({}, rest, {
      render: function render(props) {
        return /*#__PURE__*/_react.default.createElement(_falconShopData.IsAuthenticatedQuery, {
          passLoading: true
        }, function (_ref) {
          var data = _ref.data,
              loading = _ref.loading;

          if (loading) {
            // we can not render anything until we get know if the customer is authenticated or not
            return /*#__PURE__*/_react.default.createElement(_falconData.Loader, null);
          }

          if (data.customer) {
            return /*#__PURE__*/_react.default.createElement(Component, props);
          }

          var location = props.location;
          var pathname = location.pathname,
              search = location.search;
          var hasRedirectToQueryPart = redirectTo.indexOf('?') > -1;
          var query = new URLSearchParams(hasRedirectToQueryPart ? redirectTo.substring(redirectTo.indexOf('?') + 1) : '');
          query.append('next', "" + pathname + search);
          return /*#__PURE__*/_react.default.createElement(_reactRouterDom.Redirect, {
            to: {
              pathname: hasRedirectToQueryPart ? redirectTo.substring(0, redirectTo.indexOf('?')) : redirectTo,
              search: "?" + query,
              state: {
                nextLocation: location
              }
            }
          });
        });
      }
    }));
  };

  return ProtectedRoute;
}(_react.default.Component);

exports.ProtectedRoute = ProtectedRoute;
ProtectedRoute.propTypes = /*#__PURE__*/Object.assign({}, _reactRouterDom.Route.propTypes, {
  redirectTo: _propTypes.default.string
});
ProtectedRoute.defaultProps = {
  redirectTo: '/sign-in'
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Sb3V0ZXMvUHJvdGVjdGVkUm91dGUudHN4Il0sIm5hbWVzIjpbIlByb3RlY3RlZFJvdXRlIiwicmVuZGVyIiwicHJvcHMiLCJjb21wb25lbnQiLCJyZWRpcmVjdFRvIiwicmVzdCIsIkNvbXBvbmVudCIsImRhdGEiLCJsb2FkaW5nIiwiY3VzdG9tZXIiLCJsb2NhdGlvbiIsInBhdGhuYW1lIiwic2VhcmNoIiwiaGFzUmVkaXJlY3RUb1F1ZXJ5UGFydCIsImluZGV4T2YiLCJxdWVyeSIsIlVSTFNlYXJjaFBhcmFtcyIsInN1YnN0cmluZyIsImFwcGVuZCIsInN0YXRlIiwibmV4dExvY2F0aW9uIiwiUmVhY3QiLCJwcm9wVHlwZXMiLCJSb3V0ZSIsIlByb3BUeXBlcyIsInN0cmluZyIsImRlZmF1bHRQcm9wcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztJQU9hQSxjOzs7Ozs7Ozs7U0FVWEMsTSxHQUFBLGtCQUFTO0FBQ1Asc0JBQTJDLEtBQUtDLEtBQWhEO0FBQUEsUUFBUUMsU0FBUixlQUFRQSxTQUFSO0FBQUEsUUFBbUJDLFVBQW5CLGVBQW1CQSxVQUFuQjtBQUFBLFFBQWtDQyxJQUFsQztBQUNBLFFBQU1DLFNBQVMsR0FBR0gsU0FBbEI7QUFFQSx3QkFDRSw2QkFBQyxxQkFBRCw2QkFDTUUsSUFETjtBQUVFLE1BQUEsTUFBTSxFQUFFLGdCQUFBSCxLQUFLO0FBQUEsNEJBQ1gsNkJBQUMsb0NBQUQ7QUFBc0IsVUFBQSxXQUFXO0FBQWpDLFdBQ0csZ0JBQXVCO0FBQUEsY0FBcEJLLElBQW9CLFFBQXBCQSxJQUFvQjtBQUFBLGNBQWRDLE9BQWMsUUFBZEEsT0FBYzs7QUFDdEIsY0FBSUEsT0FBSixFQUFhO0FBQ1g7QUFDQSxnQ0FBTyw2QkFBQyxrQkFBRCxPQUFQO0FBQ0Q7O0FBRUQsY0FBSUQsSUFBSSxDQUFDRSxRQUFULEVBQW1CO0FBQ2pCLGdDQUFPLDZCQUFDLFNBQUQsRUFBZVAsS0FBZixDQUFQO0FBQ0Q7O0FBRUQsY0FBUVEsUUFBUixHQUFxQlIsS0FBckIsQ0FBUVEsUUFBUjtBQUNBLGNBQVFDLFFBQVIsR0FBNkJELFFBQTdCLENBQVFDLFFBQVI7QUFBQSxjQUFrQkMsTUFBbEIsR0FBNkJGLFFBQTdCLENBQWtCRSxNQUFsQjtBQUVBLGNBQU1DLHNCQUFzQixHQUFHVCxVQUFVLENBQUNVLE9BQVgsQ0FBbUIsR0FBbkIsSUFBMEIsQ0FBQyxDQUExRDtBQUNBLGNBQU1DLEtBQUssR0FBRyxJQUFJQyxlQUFKLENBQ1pILHNCQUFzQixHQUFHVCxVQUFVLENBQUNhLFNBQVgsQ0FBcUJiLFVBQVUsQ0FBQ1UsT0FBWCxDQUFtQixHQUFuQixJQUEwQixDQUEvQyxDQUFILEdBQXVELEVBRGpFLENBQWQ7QUFHQUMsVUFBQUEsS0FBSyxDQUFDRyxNQUFOLENBQWEsTUFBYixPQUF3QlAsUUFBeEIsR0FBbUNDLE1BQW5DO0FBRUEsOEJBQ0UsNkJBQUMsd0JBQUQ7QUFDRSxZQUFBLEVBQUUsRUFBRTtBQUNGRCxjQUFBQSxRQUFRLEVBQUVFLHNCQUFzQixHQUFHVCxVQUFVLENBQUNhLFNBQVgsQ0FBcUIsQ0FBckIsRUFBd0JiLFVBQVUsQ0FBQ1UsT0FBWCxDQUFtQixHQUFuQixDQUF4QixDQUFILEdBQXNEVixVQURwRjtBQUVGUSxjQUFBQSxNQUFNLFFBQU1HLEtBRlY7QUFHRkksY0FBQUEsS0FBSyxFQUFFO0FBQUVDLGdCQUFBQSxZQUFZLEVBQUVWO0FBQWhCO0FBSEw7QUFETixZQURGO0FBU0QsU0E3QkgsQ0FEVztBQUFBO0FBRmYsT0FERjtBQXNDRCxHOzs7RUFwRGlDVyxlQUFNZixTOzs7QUFBN0JOLGMsQ0FDSnNCLFMsa0NBQ0RDLHFCQUFELENBQWVELFM7QUFDbEJsQixFQUFBQSxVQUFVLEVBQUVvQixtQkFBVUM7O0FBSGJ6QixjLENBTUowQixZLEdBQWU7QUFDcEJ0QixFQUFBQSxVQUFVLEVBQUU7QUFEUSxDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBSb3V0ZSwgUmVkaXJlY3QsIFJvdXRlUHJvcHMsIFJvdXRlQ29tcG9uZW50UHJvcHMgfSBmcm9tICdyZWFjdC1yb3V0ZXItZG9tJztcbmltcG9ydCB7IExvYWRlciB9IGZyb20gJ0BkZWl0eS9mYWxjb24tZGF0YSc7XG5pbXBvcnQgeyBJc0F1dGhlbnRpY2F0ZWRRdWVyeSB9IGZyb20gJ0BkZWl0eS9mYWxjb24tc2hvcC1kYXRhJztcblxuZXhwb3J0IHR5cGUgUHJvdGVjdGVkUm91dGVQcm9wcyA9IHtcbiAgLyoqIGRlZmF1bHQgcmVkaXJlY3Rpb24gdXJsIGlzIGAvc2lnbi1pbmAgKi9cbiAgcmVkaXJlY3RUbzogc3RyaW5nO1xufSAmIFJvdXRlUHJvcHM7XG5cbmV4cG9ydCBjbGFzcyBQcm90ZWN0ZWRSb3V0ZSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxQcm90ZWN0ZWRSb3V0ZVByb3BzPiB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgLi4uKFJvdXRlIGFzIGFueSkucHJvcFR5cGVzLFxuICAgIHJlZGlyZWN0VG86IFByb3BUeXBlcy5zdHJpbmdcbiAgfTtcblxuICBzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuICAgIHJlZGlyZWN0VG86ICcvc2lnbi1pbidcbiAgfTtcblxuICByZW5kZXIoKSB7XG4gICAgY29uc3QgeyBjb21wb25lbnQsIHJlZGlyZWN0VG8sIC4uLnJlc3QgfSA9IHRoaXMucHJvcHM7XG4gICAgY29uc3QgQ29tcG9uZW50ID0gY29tcG9uZW50IGFzIFJlYWN0LkNvbXBvbmVudFR5cGU8Um91dGVDb21wb25lbnRQcm9wczxhbnk+PiB8IFJlYWN0LkNvbXBvbmVudFR5cGU8YW55PjtcblxuICAgIHJldHVybiAoXG4gICAgICA8Um91dGVcbiAgICAgICAgey4uLnJlc3R9XG4gICAgICAgIHJlbmRlcj17cHJvcHMgPT4gKFxuICAgICAgICAgIDxJc0F1dGhlbnRpY2F0ZWRRdWVyeSBwYXNzTG9hZGluZz5cbiAgICAgICAgICAgIHsoeyBkYXRhLCBsb2FkaW5nIH0pID0+IHtcbiAgICAgICAgICAgICAgaWYgKGxvYWRpbmcpIHtcbiAgICAgICAgICAgICAgICAvLyB3ZSBjYW4gbm90IHJlbmRlciBhbnl0aGluZyB1bnRpbCB3ZSBnZXQga25vdyBpZiB0aGUgY3VzdG9tZXIgaXMgYXV0aGVudGljYXRlZCBvciBub3RcbiAgICAgICAgICAgICAgICByZXR1cm4gPExvYWRlciAvPjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmIChkYXRhLmN1c3RvbWVyKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIDxDb21wb25lbnQgey4uLnByb3BzfSAvPjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGNvbnN0IHsgbG9jYXRpb24gfSA9IHByb3BzO1xuICAgICAgICAgICAgICBjb25zdCB7IHBhdGhuYW1lLCBzZWFyY2ggfSA9IGxvY2F0aW9uO1xuXG4gICAgICAgICAgICAgIGNvbnN0IGhhc1JlZGlyZWN0VG9RdWVyeVBhcnQgPSByZWRpcmVjdFRvLmluZGV4T2YoJz8nKSA+IC0xO1xuICAgICAgICAgICAgICBjb25zdCBxdWVyeSA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoXG4gICAgICAgICAgICAgICAgaGFzUmVkaXJlY3RUb1F1ZXJ5UGFydCA/IHJlZGlyZWN0VG8uc3Vic3RyaW5nKHJlZGlyZWN0VG8uaW5kZXhPZignPycpICsgMSkgOiAnJ1xuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICBxdWVyeS5hcHBlbmQoJ25leHQnLCBgJHtwYXRobmFtZX0ke3NlYXJjaH1gKTtcblxuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxSZWRpcmVjdFxuICAgICAgICAgICAgICAgICAgdG89e3tcbiAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6IGhhc1JlZGlyZWN0VG9RdWVyeVBhcnQgPyByZWRpcmVjdFRvLnN1YnN0cmluZygwLCByZWRpcmVjdFRvLmluZGV4T2YoJz8nKSkgOiByZWRpcmVjdFRvLFxuICAgICAgICAgICAgICAgICAgICBzZWFyY2g6IGA/JHtxdWVyeX1gLFxuICAgICAgICAgICAgICAgICAgICBzdGF0ZTogeyBuZXh0TG9jYXRpb246IGxvY2F0aW9uIH1cbiAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH19XG4gICAgICAgICAgPC9Jc0F1dGhlbnRpY2F0ZWRRdWVyeT5cbiAgICAgICAgKX1cbiAgICAgIC8+XG4gICAgKTtcbiAgfVxufVxuIl19