"use strict";

var _interopRequireWildcard = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.TwoStepWizard = void 0;

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

/**
 * Two step wizard that can be used for any kind of "select and configure" process (like payments, shipping etc...)
 * @internal
 * @example
 * <TwoStepWizard>
 *   {({ selectedOption, selectOption }) => {
 *     // nothing selected - render picker
 *     if (!selectedOption) {
 *       return (
 *         <ul>
 *           <li>
 *             <label htmlFor="foo">
 *               <input id="foo" type="radio" name="wizard" value="foo" onChange={() => selectOption('foo')} />
 *               <span>Foo</span>
 *             </label>
 *           </li>
 *           <li>
 *             <label htmlFor="bar">
 *               <input id="bar" type="radio" name="wizard" value="bar" onChange={() => selectOption('bar')} />
 *               <span>Bar</span>
 *             </label>
 *           </li>
 *         </ul>
 *       );
 *     }
 *
 *     if (selectedOption === 'foo') {
 *       // render component for 'foo'
 *       return <div>configure Foo</div>;
 *     }
 *
 *     if (selectedOption === 'bar') {
 *       // render component for 'bar'
 *       return <div>configure Bar</div>;
 *     }
 *
 *     return null;
 *   }}
 * </TwoStepWizard>
 */
var TwoStepWizard = function TwoStepWizard(_ref) {
  var initialState = _ref.initialState,
      children = _ref.children;

  var _useState = (0, _react.useState)(initialState),
      selectedOption = _useState[0],
      setOption = _useState[1];

  var selectOption = function selectOption(value) {
    return setOption(value);
  };

  var resetOption = function resetOption() {
    return setOption(null);
  };

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children({
    selectedOption: selectedOption,
    selectOption: selectOption,
    resetOption: resetOption
  }));
};

exports.TwoStepWizard = TwoStepWizard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9XaXphcmRzL1R3b1N0ZXBXaXphcmQudHN4Il0sIm5hbWVzIjpbIlR3b1N0ZXBXaXphcmQiLCJpbml0aWFsU3RhdGUiLCJjaGlsZHJlbiIsInNlbGVjdGVkT3B0aW9uIiwic2V0T3B0aW9uIiwic2VsZWN0T3B0aW9uIiwidmFsdWUiLCJyZXNldE9wdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQWdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLElBQU1BLGFBQTRDLEdBQUcsU0FBL0NBLGFBQStDLE9BQWdDO0FBQUEsTUFBN0JDLFlBQTZCLFFBQTdCQSxZQUE2QjtBQUFBLE1BQWZDLFFBQWUsUUFBZkEsUUFBZTs7QUFDMUYsa0JBQW9DLHFCQUFTRCxZQUFULENBQXBDO0FBQUEsTUFBT0UsY0FBUDtBQUFBLE1BQXVCQyxTQUF2Qjs7QUFFQSxNQUFNQyxZQUFZLEdBQUcsU0FBZkEsWUFBZSxDQUFDQyxLQUFEO0FBQUEsV0FBZ0JGLFNBQVMsQ0FBQ0UsS0FBRCxDQUF6QjtBQUFBLEdBQXJCOztBQUNBLE1BQU1DLFdBQVcsR0FBRyxTQUFkQSxXQUFjO0FBQUEsV0FBTUgsU0FBUyxDQUFDLElBQUQsQ0FBZjtBQUFBLEdBQXBCOztBQUVBLHNCQUNFLDREQUNHRixRQUFRLENBQUM7QUFDUkMsSUFBQUEsY0FBYyxFQUFkQSxjQURRO0FBRVJFLElBQUFBLFlBQVksRUFBWkEsWUFGUTtBQUdSRSxJQUFBQSxXQUFXLEVBQVhBO0FBSFEsR0FBRCxDQURYLENBREY7QUFTRCxDQWZNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5leHBvcnQgdHlwZSBUd29TdGVwV2l6YXJkUmVuZGVyUHJvcHMgPSB7XG4gIC8qKiBjdXJyZW50bHkgc2VsZWN0ZWQgdmFsdWUgKi9cbiAgc2VsZWN0ZWRPcHRpb246IGFueTtcbiAgLyoqIHNldHMgdGhlIHNlbGVjdGVkIHZhbHVlICovXG4gIHNlbGVjdE9wdGlvbjogKHZhbHVlOiBhbnkpID0+IGFueTtcbiAgLyoqIHJlc2V0cyB0aGUgc2VsZWN0ZWQgdmFsdWUgKi9cbiAgcmVzZXRPcHRpb246ICgpID0+IGFueTtcbn07XG5cbmV4cG9ydCB0eXBlIFR3b1N0ZXBXaXphcmRQcm9wcyA9IHtcbiAgaW5pdGlhbFN0YXRlPzogYW55O1xuICBjaGlsZHJlbjogKHByb3BzOiBUd29TdGVwV2l6YXJkUmVuZGVyUHJvcHMpID0+IFJlYWN0LlJlYWN0Tm9kZTtcbn07XG5cbi8qKlxuICogVHdvIHN0ZXAgd2l6YXJkIHRoYXQgY2FuIGJlIHVzZWQgZm9yIGFueSBraW5kIG9mIFwic2VsZWN0IGFuZCBjb25maWd1cmVcIiBwcm9jZXNzIChsaWtlIHBheW1lbnRzLCBzaGlwcGluZyBldGMuLi4pXG4gKiBAaW50ZXJuYWxcbiAqIEBleGFtcGxlXG4gKiA8VHdvU3RlcFdpemFyZD5cbiAqICAgeyh7IHNlbGVjdGVkT3B0aW9uLCBzZWxlY3RPcHRpb24gfSkgPT4ge1xuICogICAgIC8vIG5vdGhpbmcgc2VsZWN0ZWQgLSByZW5kZXIgcGlja2VyXG4gKiAgICAgaWYgKCFzZWxlY3RlZE9wdGlvbikge1xuICogICAgICAgcmV0dXJuIChcbiAqICAgICAgICAgPHVsPlxuICogICAgICAgICAgIDxsaT5cbiAqICAgICAgICAgICAgIDxsYWJlbCBodG1sRm9yPVwiZm9vXCI+XG4gKiAgICAgICAgICAgICAgIDxpbnB1dCBpZD1cImZvb1wiIHR5cGU9XCJyYWRpb1wiIG5hbWU9XCJ3aXphcmRcIiB2YWx1ZT1cImZvb1wiIG9uQ2hhbmdlPXsoKSA9PiBzZWxlY3RPcHRpb24oJ2ZvbycpfSAvPlxuICogICAgICAgICAgICAgICA8c3Bhbj5Gb288L3NwYW4+XG4gKiAgICAgICAgICAgICA8L2xhYmVsPlxuICogICAgICAgICAgIDwvbGk+XG4gKiAgICAgICAgICAgPGxpPlxuICogICAgICAgICAgICAgPGxhYmVsIGh0bWxGb3I9XCJiYXJcIj5cbiAqICAgICAgICAgICAgICAgPGlucHV0IGlkPVwiYmFyXCIgdHlwZT1cInJhZGlvXCIgbmFtZT1cIndpemFyZFwiIHZhbHVlPVwiYmFyXCIgb25DaGFuZ2U9eygpID0+IHNlbGVjdE9wdGlvbignYmFyJyl9IC8+XG4gKiAgICAgICAgICAgICAgIDxzcGFuPkJhcjwvc3Bhbj5cbiAqICAgICAgICAgICAgIDwvbGFiZWw+XG4gKiAgICAgICAgICAgPC9saT5cbiAqICAgICAgICAgPC91bD5cbiAqICAgICAgICk7XG4gKiAgICAgfVxuICpcbiAqICAgICBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICdmb28nKSB7XG4gKiAgICAgICAvLyByZW5kZXIgY29tcG9uZW50IGZvciAnZm9vJ1xuICogICAgICAgcmV0dXJuIDxkaXY+Y29uZmlndXJlIEZvbzwvZGl2PjtcbiAqICAgICB9XG4gKlxuICogICAgIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gJ2JhcicpIHtcbiAqICAgICAgIC8vIHJlbmRlciBjb21wb25lbnQgZm9yICdiYXInXG4gKiAgICAgICByZXR1cm4gPGRpdj5jb25maWd1cmUgQmFyPC9kaXY+O1xuICogICAgIH1cbiAqXG4gKiAgICAgcmV0dXJuIG51bGw7XG4gKiAgIH19XG4gKiA8L1R3b1N0ZXBXaXphcmQ+XG4gKi9cbmV4cG9ydCBjb25zdCBUd29TdGVwV2l6YXJkOiBSZWFjdC5TRkM8VHdvU3RlcFdpemFyZFByb3BzPiA9ICh7IGluaXRpYWxTdGF0ZSwgY2hpbGRyZW4gfSkgPT4ge1xuICBjb25zdCBbc2VsZWN0ZWRPcHRpb24sIHNldE9wdGlvbl0gPSB1c2VTdGF0ZShpbml0aWFsU3RhdGUpO1xuXG4gIGNvbnN0IHNlbGVjdE9wdGlvbiA9ICh2YWx1ZTogYW55KSA9PiBzZXRPcHRpb24odmFsdWUpO1xuICBjb25zdCByZXNldE9wdGlvbiA9ICgpID0+IHNldE9wdGlvbihudWxsKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7Y2hpbGRyZW4oe1xuICAgICAgICBzZWxlY3RlZE9wdGlvbixcbiAgICAgICAgc2VsZWN0T3B0aW9uLFxuICAgICAgICByZXNldE9wdGlvblxuICAgICAgfSl9XG4gICAgPC8+XG4gICk7XG59O1xuIl19