import { Dispatch, SetStateAction } from 'react';
/**
 * React hook for keeping component state like `useState`,
 * additionally expose `callback` when state is changed
 * @param initialState
 * @param callback
 */
export declare const useStateCallback: <S>(initialState: S | (() => S), callback: (state: S, previousState?: S) => void) => [S, Dispatch<SetStateAction<S>>];
//# sourceMappingURL=useStateCallback.d.ts.map