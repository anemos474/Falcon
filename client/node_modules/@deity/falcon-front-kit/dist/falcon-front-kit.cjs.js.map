{"version":3,"file":"falcon-front-kit.cjs.js","sources":["../src/React/usePrevious.ts","../src/React/useStateCallback.ts","../src/React/useMounted.ts","../src/Account/SignInFormProvider.tsx","../src/Account/SignOutProvider.tsx","../src/Account/SignUpFormProvider.tsx","../src/Account/ForgotPasswordFormProvider.tsx","../src/Account/ResetPasswordFormProvider.tsx","../src/Account/ChangePasswordFormProvider.tsx","../src/Account/EditCustomerFormProvider.tsx","../src/Address/AddAddressFormProvider.tsx","../src/Address/EditAddressFormProvider.tsx","../src/Address/isCustomAddress.ts","../src/Address/addressToString.ts","../src/Apollo/apolloStateToObject.ts","../src/Checkout/CheckoutStep.ts","../src/Checkout/CheckoutContext.tsx","../src/Checkout/calculateCheckoutStep.ts","../src/Checkout/CheckoutProvider.tsx","../src/Checkout/CheckoutConsumer.tsx","../src/Checkout/CheckoutAddress.ts","../src/Checkout/SetShippingAddress.tsx","../src/Checkout/SetCheckoutAddressFormProvider.tsx","../src/Checkout/SetBillingAddress.tsx","../src/Checkout/shippingMethodToCheckoutDetailsInput.ts","../src/Checkout/SetShippingMethod.tsx","../src/Checkout/SetPaymentMethod.tsx","../src/Checkout/PaymentMethodData.ts","../src/Checkout/PlaceOrder.tsx","../src/ClientConfig/ClientConfigQuery.tsx","../src/ClientConfig/clientConfigResolver.ts","../src/FalconScope/FalconClientScopeConfig.ts","../src/GeoLocation/GeoLocationContext.ts","../src/GeoLocation/GeoLocationProvider.tsx","../src/FalconScope/FalconScopeContext.ts","../src/FalconScope/FalconScopeProvider.tsx","../src/FalconScope/falconScopeFromURL.ts","../src/FalconScope/falconScopeFromCookie.ts","../src/Locale/dateTimeFormat.ts","../src/Locale/LocaleContext.tsx","../src/Currency/priceFormat.ts","../src/Currency/CurrencyContext.tsx","../src/Currency/currencyCode.ts","../src/Router/Router.tsx","../src/Router/Redirect.tsx","../src/DynamicRoute/DynamicRoute.tsx","../src/DynamicRoute/findRouteElement.ts","../src/DynamicRoute/isResourceMetaRequired.ts","../src/DynamicRoute/SwitchDynamicUrl.tsx","../src/EnsureTTI/EnsureTTI.tsx","../src/Filters/FilterData.tsx","../src/Search/searchState.ts","../src/SortOrder/areSortOrderInputsEqual.ts","../src/Search/SearchContext.tsx","../src/Search/SearchProvider.tsx","../src/Search/SearchConsumer.tsx","../src/Search/useSearchContext.ts","../src/Filters/FiltersDataProvider.tsx","../src/Forms/FormContext.tsx","../src/Forms/string.ts","../src/Forms/IValidator.ts","../src/Forms/Field.tsx","../src/Forms/Form.tsx","../src/Forms/validators.ts","../src/Forms/getDefaultInputValidators.ts","../src/Forms/Submit.tsx","../src/IntersectionObserver/useIntersectionObserver.ts","../src/NetworkStatus/NetworkStatus.tsx","../src/Product/productOptionMappers.ts","../src/Product/AddToCartFormProvider.tsx","../src/Routes/OnlyUnauthenticatedRoute.tsx","../src/Routes/ProtectedRoute.tsx","../src/SidebarContainer/SidebarContainerContext.ts","../src/SidebarContainer/SidebarContainerProvider.tsx","../src/ScrollToTop/ScrollToTop.tsx","../src/SEO/SEO.tsx","../src/SortOrder/SortOrderPickerProvider.tsx","../src/SSR/InBrowserOnly.tsx","../src/Wizards/TwoStepWizard.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * React hook which returns previous value\n * @param value\n */\nexport const usePrevious = <TValue>(value: TValue) => {\n  const ref = useRef<TValue>();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n};\n","import { useState, useLayoutEffect, Dispatch, SetStateAction } from 'react';\nimport { usePrevious } from './usePrevious';\n\n/**\n * React hook for keeping component state like `useState`,\n * additionally expose `callback` when state is changed\n * @param initialState\n * @param callback\n */\nexport const useStateCallback = <S>(\n  initialState: S | (() => S),\n  callback: (state: S, previousState?: S) => void\n): [S, Dispatch<SetStateAction<S>>] => {\n  const [state, setState] = useState(initialState);\n  const previousState = usePrevious(state);\n\n  useLayoutEffect(() => {\n    if (state !== previousState) {\n      callback(state, previousState);\n    }\n  }, [state, callback, previousState]);\n\n  return [state, setState];\n};\n","import { useEffect, useRef } from 'react';\n\nexport const useMounted = (): { current: boolean } => {\n  const isMounted = useRef(false);\n\n  // Changing a ref like this doesn't cause rerenders\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return isMounted;\n};\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { useGetUserError } from '@deity/falcon-data';\nimport { useSignInMutation, SignInResponse } from '@deity/falcon-shop-data';\nimport { FormProviderProps } from '../Forms';\nimport { useMounted } from '../React';\n\nexport type SignInFormValues = {\n  email: string;\n  password: string;\n};\nexport type SignInFormProviderProps = FormProviderProps<SignInFormValues, SignInResponse>;\nexport const SignInFormProvider: React.FC<SignInFormProviderProps> = props => {\n  const { onSuccess, initialValues, mutationOptions, ...formikProps } = props;\n  const defaultInitialValues = {\n    email: '',\n    password: ''\n  };\n\n  const [signIn] = useSignInMutation();\n  const getUserError = useGetUserError();\n  const isMounted = useMounted();\n\n  return (\n    <Formik\n      initialStatus={{}}\n      initialValues={initialValues || defaultInitialValues}\n      onSubmit={(values, { setSubmitting, setStatus }) =>\n        signIn({ variables: { input: values }, ...(mutationOptions || {}) })\n          .then(({ data }) => {\n            if (isMounted.current) {\n              setSubmitting(false);\n              setStatus({ data });\n              return onSuccess && onSuccess(data);\n            }\n          })\n          .catch(e => {\n            const error = getUserError(e);\n            if (error.length && isMounted.current) {\n              setStatus({ error });\n              setSubmitting(false);\n            }\n          })\n      }\n      {...formikProps}\n    />\n  );\n};\n","import React from 'react';\nimport { MutationFunction, MutationResult } from '@apollo/client';\nimport { SignOutMutation, SignOutResponse, IsAuthenticatedQuery } from '@deity/falcon-shop-data';\n\nexport type SignOutProviderRenderProps = {\n  isSignedIn: boolean;\n  signOut: MutationFunction<SignOutResponse, {}>;\n  result: MutationResult<SignOutResponse>;\n};\n\nexport type SignOutProviderProps = {\n  children: (renderProps: SignOutProviderRenderProps) => any;\n};\nexport const SignOutProvider: React.SFC<SignOutProviderProps> = ({ children }) => (\n  <IsAuthenticatedQuery>\n    {({ data: { customer } }) => (\n      <SignOutMutation>{(signOut, result) => children({ isSignedIn: !!customer, signOut, result })}</SignOutMutation>\n    )}\n  </IsAuthenticatedQuery>\n);\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { useGetUserError } from '@deity/falcon-data';\nimport { useSignUpMutation, SignUpResponse } from '@deity/falcon-shop-data';\nimport { FormProviderProps } from '../Forms';\nimport { useMounted } from '../React';\n\nexport type SignUpFormValues = {\n  firstname: string;\n  lastname: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  autoSignIn: boolean;\n};\nexport type SignUpFormProviderProps = FormProviderProps<SignUpFormValues, SignUpResponse>;\nexport const SignUpFormProvider: React.SFC<SignUpFormProviderProps> = props => {\n  const { onSuccess, initialValues, mutationOptions, ...formikProps } = props;\n  const defaultInitialValues: SignUpFormValues = {\n    firstname: '',\n    lastname: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    autoSignIn: true\n  };\n\n  const [signUp] = useSignUpMutation();\n  const getUserError = useGetUserError();\n  const isMounted = useMounted();\n\n  return (\n    <Formik\n      initialStatus={{}}\n      initialValues={initialValues || defaultInitialValues}\n      onSubmit={({ confirmPassword, ...signUpValues }, { setSubmitting, setStatus, setErrors }) =>\n        signUp({ variables: { input: signUpValues }, ...(mutationOptions || {}) })\n          .then(({ data }) => {\n            if (isMounted.current) {\n              setSubmitting(false);\n              setStatus({ data });\n              return onSuccess && onSuccess(data);\n            }\n          })\n          .catch(e => {\n            const error = getUserError(e);\n            if (error.length && isMounted.current) {\n              setErrors(error.getFieldErrors());\n              setStatus({ error: error.getFormErrors() });\n\n              setSubmitting(false);\n            }\n          })\n      }\n      {...formikProps}\n    />\n  );\n};\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { useGetUserError } from '@deity/falcon-data';\nimport { RequestPasswordResetInput } from '@deity/falcon-shop-extension';\nimport { useRequestPasswordResetMutation, RequestPasswordResetResponse } from '@deity/falcon-shop-data';\nimport { FormProviderProps } from '../Forms';\nimport { useMounted } from '../React';\n\nexport type ForgotPasswordFormProviderProps = FormProviderProps<\n  RequestPasswordResetInput,\n  RequestPasswordResetResponse\n>;\nexport const ForgotPasswordFormProvider: React.SFC<ForgotPasswordFormProviderProps> = props => {\n  const { onSuccess, initialValues, mutationOptions, ...formikProps } = props;\n  const defaultInitialValues: RequestPasswordResetInput = {\n    email: ''\n  };\n\n  const [requestPasswordReset] = useRequestPasswordResetMutation();\n  const getUserError = useGetUserError();\n  const isMounted = useMounted();\n\n  return (\n    <Formik\n      initialStatus={{}}\n      initialValues={initialValues || defaultInitialValues}\n      onSubmit={(values, { setSubmitting, setStatus }) =>\n        requestPasswordReset({ variables: { input: values }, ...(mutationOptions || {}) })\n          .then(({ data }) => {\n            if (isMounted.current) {\n              setSubmitting(false);\n              setStatus({ data });\n              return onSuccess && onSuccess(data);\n            }\n          })\n          .catch(e => {\n            const error = getUserError(e);\n            if (error.length && isMounted.current) {\n              setStatus({ error });\n              setSubmitting(false);\n            }\n          })\n      }\n      {...formikProps}\n    />\n  );\n};\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { useGetUserError } from '@deity/falcon-data';\nimport { ResetPasswordInput } from '@deity/falcon-shop-extension';\nimport { useResetPasswordMutation, ResetPasswordResponse } from '@deity/falcon-shop-data';\nimport { FormProviderProps } from '../Forms';\nimport { useMounted } from '../React';\n\nexport type ResetPasswordFormProviderProps = FormProviderProps<ResetPasswordInput, ResetPasswordResponse>;\nexport const ResetPasswordFormProvider: React.SFC<ResetPasswordFormProviderProps> = props => {\n  const { onSuccess, initialValues, mutationOptions, ...formikProps } = props;\n  const defaultInitialValues: ResetPasswordInput = {\n    resetToken: '',\n    password: ''\n  };\n\n  const [resetPassword] = useResetPasswordMutation();\n  const getUserError = useGetUserError();\n  const isMounted = useMounted();\n\n  return (\n    <Formik\n      initialStatus={{}}\n      initialValues={initialValues || defaultInitialValues}\n      onSubmit={(values, { setSubmitting, setStatus }) =>\n        resetPassword({ variables: { input: values }, ...(mutationOptions || {}) })\n          .then(({ data }) => {\n            if (isMounted.current) {\n              setSubmitting(false);\n              setStatus({ data });\n              return onSuccess && onSuccess(data);\n            }\n          })\n          .catch(e => {\n            const error = getUserError(e);\n            if (error.length && isMounted.current) {\n              setStatus({ error });\n              setSubmitting(false);\n            }\n          })\n      }\n      {...formikProps}\n    />\n  );\n};\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { useGetUserError } from '@deity/falcon-data';\nimport { ChangePasswordInput } from '@deity/falcon-shop-extension';\nimport { useChangePasswordMutation, ChangePasswordResponse } from '@deity/falcon-shop-data';\nimport { FormProviderProps } from '../Forms';\nimport { useMounted } from '../React';\n\nexport type ChangePasswordFormProviderProps = FormProviderProps<ChangePasswordInput, ChangePasswordResponse>;\nexport const ChangePasswordFormProvider: React.SFC<ChangePasswordFormProviderProps> = props => {\n  const { onSuccess, initialValues, mutationOptions, ...formikProps } = props;\n  const defaultInitialValues: ChangePasswordInput = {\n    currentPassword: '',\n    password: ''\n  };\n\n  const [changePasswordMutation] = useChangePasswordMutation();\n  const getUserError = useGetUserError();\n  const isMounted = useMounted();\n\n  return (\n    <Formik\n      initialStatus={{}}\n      initialValues={initialValues || defaultInitialValues}\n      onSubmit={(values, { setSubmitting, setStatus }) =>\n        changePasswordMutation({ variables: { input: values }, ...(mutationOptions || {}) })\n          .then(({ data }) => {\n            if (isMounted.current) {\n              setSubmitting(false);\n              setStatus({ data });\n              return onSuccess && onSuccess(data);\n            }\n          })\n          .catch(e => {\n            const error = getUserError(e);\n            if (error.length && isMounted.current) {\n              setStatus({ error });\n              setSubmitting(false);\n            }\n          })\n      }\n      {...formikProps}\n    />\n  );\n};\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { useGetUserError } from '@deity/falcon-data';\nimport { EditCustomerInput, Customer } from '@deity/falcon-shop-extension';\nimport { useEditCustomerMutation, EditCustomerResponse } from '@deity/falcon-shop-data';\nimport { FormProviderProps } from '../Forms';\nimport { useMounted } from '../React';\n\nexport type EditCustomerFormProviderProps = FormProviderProps<EditCustomerInput, EditCustomerResponse> & {\n  customer: Pick<Customer, 'websiteId' | 'firstname' | 'lastname' | 'email'>;\n};\nexport const EditCustomerFormProvider: React.SFC<EditCustomerFormProviderProps> = props => {\n  const { onSuccess, initialValues, customer, mutationOptions, ...formikProps } = props;\n  const defaultInitialValues: EditCustomerInput = {\n    websiteId: customer.websiteId,\n    email: customer.email,\n    firstname: customer.firstname,\n    lastname: customer.lastname\n  };\n\n  const [editCustomerMutation] = useEditCustomerMutation();\n  const getUserError = useGetUserError();\n  const isMounted = useMounted();\n  return (\n    <Formik\n      initialStatus={{}}\n      initialValues={initialValues || defaultInitialValues}\n      onSubmit={(values, { setSubmitting, setStatus }) =>\n        editCustomerMutation({ variables: { input: values }, ...(mutationOptions || {}) })\n          .then(({ data }) => {\n            if (isMounted.current) {\n              setSubmitting(false);\n              setStatus({ data });\n              return onSuccess && onSuccess(data);\n            }\n          })\n          .catch(e => {\n            const error = getUserError(e);\n            if (error.length && isMounted.current) {\n              setStatus({ error });\n              setSubmitting(false);\n            }\n          })\n      }\n      {...formikProps}\n    />\n  );\n};\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { Country, Region } from '@deity/falcon-shop-extension';\nimport { useGetUserError } from '@deity/falcon-data';\nimport { useAddAddressMutation, AddAddressResponse } from '@deity/falcon-shop-data';\nimport { FormProviderProps } from '../Forms';\nimport { useMounted } from '../React';\n\nexport type AddAddressFormValues = {\n  firstname: string;\n  lastname: string;\n  street1?: string;\n  street2?: string;\n  postcode: string;\n  city: string;\n  country: Country;\n  region?: Region;\n  company?: string;\n  telephone?: string;\n  defaultBilling?: boolean;\n  defaultShipping?: boolean;\n};\n\nexport type AddAddressFormProviderProps = FormProviderProps<AddAddressFormValues, AddAddressResponse>;\nexport const AddAddressFormProvider: React.SFC<AddAddressFormProviderProps> = props => {\n  const { onSuccess, initialValues, mutationOptions, ...formikProps } = props;\n  const defaultInitialValues = {\n    firstname: '',\n    lastname: '',\n    street1: '',\n    street2: '',\n    postcode: '',\n    city: '',\n    country: undefined,\n    region: undefined,\n    company: '',\n    telephone: '',\n    defaultBilling: false,\n    defaultShipping: false\n  };\n\n  const [addAddress] = useAddAddressMutation();\n  const getUserError = useGetUserError();\n  const isMounted = useMounted();\n\n  return (\n    <Formik\n      initialStatus={{}}\n      initialValues={initialValues || defaultInitialValues}\n      onSubmit={({ street1, street2, country, region, ...values }, { setSubmitting, setStatus }) =>\n        addAddress({\n          variables: {\n            input: {\n              ...values,\n              street: [street1, street2].filter(Boolean),\n              countryId: country.id,\n              regionId: region ? region.id : undefined\n            }\n          },\n          ...(mutationOptions || {})\n        })\n          .then(({ data }) => {\n            if (isMounted.current) {\n              setSubmitting(false);\n              setStatus({ data });\n              return onSuccess && onSuccess(data);\n            }\n          })\n          .catch(e => {\n            const error = getUserError(e);\n            if (error.length && isMounted.current) {\n              setStatus({ error });\n              setSubmitting(false);\n            }\n          })\n      }\n      {...formikProps}\n    />\n  );\n};\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { Address, Country, Region } from '@deity/falcon-shop-extension';\nimport { useGetUserError } from '@deity/falcon-data';\nimport { useEditAddressMutation, EditAddressResponse } from '@deity/falcon-shop-data';\nimport { FormProviderProps } from '../Forms';\nimport { useMounted } from '../React';\n\nexport type EditAddressFormValues = {\n  firstname: string;\n  lastname: string;\n  street1?: string;\n  street2?: string;\n  postcode: string;\n  city: string;\n  country: Country;\n  region?: Region;\n  company?: string;\n  telephone?: string;\n  defaultBilling?: boolean;\n  defaultShipping?: boolean;\n};\n\nexport type EditAddressFormProviderProps = FormProviderProps<EditAddressFormValues, EditAddressResponse> & {\n  address: Address;\n};\nexport const EditAddressFormProvider: React.SFC<EditAddressFormProviderProps> = props => {\n  const { address, onSuccess, initialValues, mutationOptions, ...formikProps } = props;\n  const { __typename, street, ...rest } = address;\n  const defaultInitialValues = {\n    street1: street.length > 0 ? street[0] : undefined,\n    street2: street.length > 1 ? street[1] : undefined,\n    ...rest\n  };\n\n  const [editAddress] = useEditAddressMutation();\n  const getUserError = useGetUserError();\n  const isMounted = useMounted();\n\n  return (\n    <Formik\n      initialStatus={{}}\n      initialValues={initialValues || defaultInitialValues}\n      onSubmit={({ street1, street2, country, region, ...values }, { setSubmitting, setStatus }) =>\n        editAddress({\n          variables: {\n            input: {\n              ...values,\n              id: address.id,\n              street: [street1, street2].filter(Boolean),\n              countryId: country.id,\n              regionId: region ? region.id : undefined\n            }\n          },\n          ...(mutationOptions || {})\n        })\n          .then(({ data }) => {\n            if (isMounted.current) {\n              setSubmitting(false);\n              setStatus({ data });\n              return onSuccess && onSuccess(data);\n            }\n          })\n          .catch(e => {\n            const error = getUserError(e);\n            if (error.length && isMounted.current) {\n              setStatus({ error });\n              setSubmitting(false);\n            }\n          })\n      }\n      {...formikProps}\n    />\n  );\n};\n","import { Address } from '@deity/falcon-shop-extension';\n\n/**\n * Determines if the address is custom or already saved in the system\n * @param {Address} address\n */\nexport const isCustomAddress = (address?: Address) => !address || (address && !address.id);\n","import { Address } from '@deity/falcon-shop-extension';\n\n/**\n * Returns basic string representation of `Address`\n * @param {Address} address\n */\nexport const addressToString = (address: Address) =>\n  [\n    address.company,\n    `${address.firstname} ${address.lastname}`,\n    address.street && `${address.street.join(' ')}`,\n    `${address.postcode} ${address.city}, ${address.country.code}`\n  ]\n    .filter(x => x)\n    .join(', ');\n","/**\n * This method expands flatten Apollo cache value into a nested object\n * @param {object} state Apollo state object\n * @param {string} stateKey Apollo state key\n * @returns {object} Expanded object\n */\nexport function apolloStateToObject(state: object, stateKey: string): object {\n  const result = { ...state[stateKey] };\n\n  Object.keys(result).forEach(key => {\n    const value = result[key];\n\n    if (!value) {\n      return;\n    }\n\n    if (Array.isArray(value)) {\n      result[key] = value\n        .filter(item => item && typeof item === 'object' && item.generated && item.id)\n        .map(item => apolloStateToObject(state, item.id));\n    } else if (typeof value === 'object') {\n      if (value.generated && value.id) {\n        result[key] = apolloStateToObject(state, value.id);\n      } else if (value.type === 'json') {\n        result[key] = value.json;\n      }\n    }\n  });\n\n  return result;\n}\n","import { RecordEnumLike } from '../RecordEnumLike';\n\nexport type CheckoutStepType =\n  | 'email'\n  | 'shippingAddress'\n  | 'billingAddress'\n  | 'shippingMethod'\n  | 'paymentMethod'\n  | 'placeOrder';\n\n/** Defines basic checkout steps */\nexport const CheckoutStep: RecordEnumLike<CheckoutStepType> = {\n  email: 'email',\n  shippingAddress: 'shippingAddress',\n  billingAddress: 'billingAddress',\n  shippingMethod: 'shippingMethod',\n  paymentMethod: 'paymentMethod',\n  placeOrder: 'placeOrder'\n};\n\n/** Defines default checkout steps order */\nexport const CheckoutFlow = [\n  CheckoutStep.email,\n  CheckoutStep.shippingAddress,\n  CheckoutStep.billingAddress,\n  CheckoutStep.shippingMethod,\n  CheckoutStep.paymentMethod,\n  CheckoutStep.placeOrder\n];\n","import React from 'react';\nimport { PlaceOrderResult } from '@deity/falcon-shop-extension';\nimport { CheckoutStepType } from './CheckoutStep';\nimport { CheckoutValues, SetCheckoutValues } from './CheckoutValues';\nimport { CalculateCheckoutStep } from './calculateCheckoutStep';\n\nexport type CheckoutValuesContext = {\n  values: CheckoutValues;\n  isBillingSameAsShipping: boolean;\n  isLoading: boolean;\n  result?: PlaceOrderResult;\n};\n\nexport type CheckoutNavigationContext<TCheckoutStep extends string = CheckoutStepType> = {\n  stepsOrder: TCheckoutStep[];\n  step: TCheckoutStep;\n  nextStep?: TCheckoutStep;\n  calculateStep: CalculateCheckoutStep<TCheckoutStep>;\n  stepForward: () => TCheckoutStep;\n  canSetStep: (value: CheckoutValues, step: TCheckoutStep) => boolean;\n  setStep(step: TCheckoutStep): void;\n};\n\nexport type CheckoutContextType = CheckoutNavigationContext &\n  CheckoutValuesContext &\n  SetCheckoutValues & {\n    setLoading(isLoading: boolean);\n    setBillingSameAsShipping(same: boolean): void;\n    setResult(result: PlaceOrderResult): void;\n  };\n\nexport const CheckoutContext = React.createContext<CheckoutContextType>({} as any);\n","import { CheckoutValues } from './CheckoutValues';\nimport { CheckoutStep, CheckoutStepType } from './CheckoutStep';\n\nexport type CalculateCheckoutStep<TCheckoutStep extends string> = {\n  (values: CheckoutValues & { [step in TCheckoutStep]?: any }, step?: TCheckoutStep): TCheckoutStep;\n};\nexport type CalculateCheckoutStepFactory = {\n  <TCheckoutStep extends string = CheckoutStepType>(stepsOrder: TCheckoutStep[]): CalculateCheckoutStep<TCheckoutStep>;\n};\nexport const calculateCheckoutStepFactory: CalculateCheckoutStepFactory = stepsOrder => (values, step) => {\n  const stepFromValues = stepsOrder.find((x: string) => !values[x]) || stepsOrder[stepsOrder.length - 1];\n\n  if (step && step in CheckoutStep) {\n    const stepIndex = stepsOrder.findIndex(x => x === step);\n    const stepIndexFromValues = stepsOrder.findIndex(x => x === stepFromValues);\n    if (stepIndex < stepIndexFromValues) {\n      return step;\n    }\n  }\n\n  return stepFromValues;\n};\n","import React, { useState, useCallback, useLayoutEffect } from 'react';\nimport { PlaceOrderResult } from '@deity/falcon-shop-extension';\nimport { useStateCallback } from '../React';\nimport { CheckoutValues, SetCheckoutValues } from './CheckoutValues';\nimport { CheckoutStep, CheckoutStepType, CheckoutFlow } from './CheckoutStep';\nimport { CheckoutContext } from './CheckoutContext';\nimport { calculateCheckoutStepFactory, CalculateCheckoutStep } from './calculateCheckoutStep';\n\nexport type OnStepChanged<TCheckoutStep extends string = CheckoutStepType> = (\n  current: TCheckoutStep,\n  previous: TCheckoutStep | undefined,\n  props: { isForwardNavigation: boolean }\n) => void;\n\ninterface IGetNextPossibleCheckoutStep<TCheckoutStep> {\n  (step: TCheckoutStep): TCheckoutStep | undefined;\n}\nconst getNextPossibleCheckoutStepFactory: <TCheckoutStep extends string = CheckoutStepType>(\n  stepsOrder: TCheckoutStep[]\n) => IGetNextPossibleCheckoutStep<TCheckoutStep> = stepsOrder => step => {\n  const currentStepIndex = stepsOrder.findIndex(x => x === step);\n\n  return currentStepIndex < stepsOrder.length ? stepsOrder[currentStepIndex + 1] : undefined;\n};\n\nexport const isObject = (value: any): boolean => {\n  return Object.prototype.toString.call(value) === '[object Object]';\n};\n\nexport const browseAndCleanObject = (data: any, prop: string) => {\n  return Object.keys(data).reduce((object, key) => {\n    if (key !== prop) {\n      if (isObject(data[key])) {\n        object[key] = browseAndCleanObject(data[key], prop);\n      } else {\n        object[key] = data[key];\n      }\n    }\n    return object;\n  }, {});\n};\n\n/**\n * Strip `__typename` key from object keys\n * @param initialData\n * @returns {CheckoutValues}\n */\nexport const stripTypenames = (initialData: CheckoutValues): CheckoutValues => {\n  return browseAndCleanObject(initialData, '__typename');\n};\n\nexport type CheckoutProviderProps<TCheckoutStep extends string = CheckoutStepType> = {\n  initialValues?: CheckoutValues;\n  onValueChanged?: () => void;\n  billingSameAsShipping?: boolean;\n  step?: TCheckoutStep;\n  stepsOrder?: TCheckoutStep[];\n  autoStepForward?: boolean;\n  onStepChanged?: OnStepChanged;\n  calculateStep?: (stepsOrders: TCheckoutStep[]) => CalculateCheckoutStep<TCheckoutStep>;\n};\nexport const CheckoutProvider: React.SFC<CheckoutProviderProps> = props => {\n  const {\n    initialValues = {},\n    billingSameAsShipping,\n    stepsOrder,\n    autoStepForward,\n    onValueChanged,\n    onStepChanged\n  } = props;\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const calculateStep = useCallback(props.calculateStep(stepsOrder), [stepsOrder]);\n  const canSetStep = (values, step) => calculateStep(values, step) === step;\n  const [step, setStep] = useStateCallback<keyof typeof CheckoutStep>(\n    calculateStep(initialValues, props.step),\n    (cStep, pStep) => {\n      onStepChanged(cStep, pStep, {\n        isForwardNavigation: stepsOrder.findIndex(x => x === cStep) > stepsOrder.findIndex(x => x === pStep)\n      });\n    }\n  );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const getNextStep = useCallback(getNextPossibleCheckoutStepFactory(stepsOrder), [stepsOrder]);\n  const stepForward = () => {\n    const next = getNextStep(step);\n    setStep(next);\n\n    return next;\n  };\n\n  const isBoolean = val => typeof val === 'boolean';\n\n  const initialState = stripTypenames(initialValues);\n\n  let initialBillingSameAsShipping = false;\n\n  // First we check the initial state\n  if (isBoolean(initialValues.billingSameAsShipping)) {\n    initialBillingSameAsShipping = initialValues.billingSameAsShipping;\n  } else if (isBoolean(billingSameAsShipping)) {\n    initialBillingSameAsShipping = billingSameAsShipping;\n  }\n\n  const [isLoading, setLoading] = useState<boolean>(false);\n  const [isBillingSameAsShipping, setBillingSameAsShipping] = useState<boolean>(initialBillingSameAsShipping);\n\n  const [result, setResult] = useState<PlaceOrderResult>();\n  const [forceStep, setForceStep] = useState<CheckoutStepType | null>();\n  const [values, setValues] = useStateCallback<CheckoutValues>({ ...initialState }, newValues => {\n    onValueChanged();\n    if (autoStepForward) {\n      const newStep = forceStep || calculateStep(newValues);\n      setStep(newStep);\n    }\n  });\n\n  useLayoutEffect(() => {\n    if (props.step && props.step !== step) {\n      setStep(calculateStep(values, props.step));\n    }\n  }, [calculateStep, props.step, setStep, step, values, forceStep]);\n\n  const setEmail: SetCheckoutValues['setEmail'] = email => setValues(x => ({ ...x, email }));\n\n  const setShippingAddress: SetCheckoutValues['setShippingAddress'] = shippingAddress => {\n    if (!isBillingSameAsShipping) {\n      // Force the customer to review their billing address\n      setForceStep('billingAddress');\n    }\n    setValues(x => ({\n      ...x,\n      shippingAddress,\n      billingAddress: isBillingSameAsShipping ? shippingAddress : x.billingAddress,\n      shippingMethod: undefined,\n      paymentMethod: undefined\n    }));\n  };\n\n  const setBillingAddress: SetCheckoutValues['setBillingAddress'] = billingAddress => {\n    setForceStep(null);\n    setValues(x => ({\n      ...x,\n      shippingAddress: isBillingSameAsShipping ? billingAddress : x.shippingAddress,\n      billingAddress,\n      shippingMethod: undefined,\n      paymentMethod: undefined\n    }));\n  };\n\n  const setShippingMethod: SetCheckoutValues['setShippingMethod'] = shippingMethod =>\n    setValues(x => ({\n      ...x,\n      shippingMethod,\n      paymentMethod: undefined\n    }));\n\n  const setPaymentMethod: SetCheckoutValues['setPaymentMethod'] = paymentMethod =>\n    setValues(x => ({ ...x, paymentMethod }));\n\n  /**\n   * Allows to override OrderData values, useful when order was placed with some overrides and state needs to be synchronized\n   * @param order\n   */\n  const setOrderData: SetCheckoutValues['setOrderData'] = order => {\n    if (order) {\n      setValues({ ...order });\n    }\n  };\n\n  return (\n    <CheckoutContext.Provider\n      value={{\n        stepsOrder,\n        step,\n        nextStep: getNextStep(step),\n        calculateStep,\n        stepForward,\n        setStep,\n        canSetStep,\n        isLoading,\n        setLoading,\n        isBillingSameAsShipping,\n        setBillingSameAsShipping,\n        values,\n        setEmail,\n        setShippingAddress,\n        setBillingAddress,\n        setShippingMethod,\n        setPaymentMethod,\n        setOrderData,\n        result,\n        setResult\n      }}\n    >\n      {props.children}\n    </CheckoutContext.Provider>\n  );\n};\nCheckoutProvider.defaultProps = {\n  stepsOrder: CheckoutFlow,\n  autoStepForward: true,\n  billingSameAsShipping: false,\n  initialValues: {},\n  onValueChanged: () => {},\n  onStepChanged: () => {},\n  calculateStep: calculateCheckoutStepFactory\n};\n","import React, { useContext } from 'react';\nimport { CheckoutContext, CheckoutContextType } from './CheckoutContext';\n\nexport type CheckoutRenderProps = CheckoutContextType;\nexport const useCheckout = () => useContext(CheckoutContext) as CheckoutRenderProps;\n\nexport type CheckoutProps = { children: (props: CheckoutRenderProps) => any };\nexport const Checkout: React.FC<CheckoutProps> = ({ children }) => {\n  const checkout = useCheckout();\n\n  return children({ ...checkout });\n};\n","import { ID } from '@deity/falcon-data';\nimport { AddressBase, Country, Region, CheckoutAddressInput } from '@deity/falcon-shop-extension';\n\nexport type CheckoutAddress = AddressBase & {\n  id?: ID;\n  country: Country;\n  region?: Region;\n  email?: string;\n  saveInAddressBook?: boolean;\n};\n\nexport const addressToCheckoutAddressInput = (checkoutAddress: CheckoutAddress): CheckoutAddressInput => {\n  const { region, country, ...rest } = checkoutAddress;\n\n  return {\n    ...rest,\n    countryId: country.id,\n    regionId: region ? region.id : undefined\n  };\n};\n","import React, { useState, useCallback } from 'react';\nimport { useSetShippingAddressMutation, SetShippingAddressResponse } from '@deity/falcon-shop-data';\nimport { useCheckout } from './CheckoutConsumer';\nimport { CheckoutAddress, addressToCheckoutAddressInput } from './CheckoutAddress';\nimport { CheckoutOperation, CheckoutOperationHook } from './CheckoutOperation';\n\nexport const useSetShippingAddress: CheckoutOperationHook<SetShippingAddressResponse, CheckoutAddress> = () => {\n  const [address, setAddress] = useState<CheckoutAddress>();\n  const { isLoading, setLoading, setShippingAddress, isBillingSameAsShipping } = useCheckout();\n  const [mutation, result] = useSetShippingAddressMutation({\n    onCompleted: data => {\n      if (data) {\n        setShippingAddress(address);\n        setLoading(false);\n      }\n    }\n  });\n\n  if (result.loading !== isLoading) {\n    setLoading(result.loading);\n  }\n\n  return [\n    useCallback(\n      async (input: CheckoutAddress, options = {}) => {\n        setLoading(true);\n        setAddress(input);\n\n        return mutation({\n          ...options,\n          variables: {\n            input: {\n              address: addressToCheckoutAddressInput(input),\n              billingSameAsShipping: isBillingSameAsShipping\n            }\n          }\n        });\n      },\n      [isBillingSameAsShipping, mutation, setLoading]\n    ),\n    result\n  ];\n};\n\nexport type SetShippingAddressProps = {\n  children: CheckoutOperation<SetShippingAddressResponse, CheckoutAddress>;\n};\nexport const SetShippingAddress: React.FC<SetShippingAddressProps> = ({ children }) => {\n  return children(...useSetShippingAddress());\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { Address, Country, Region } from '@deity/falcon-shop-extension';\nimport { useGetUserError } from '@deity/falcon-data';\nimport { SetShippingAddressResponse, SetBillingAddressResponse } from '@deity/falcon-shop-data';\nimport { FormProviderProps } from '../Forms';\nimport { useMounted } from '../React';\nimport { CheckoutAddress } from './CheckoutAddress';\nimport { CheckoutOperationFunction } from './CheckoutOperation';\n\nexport type SetCheckoutAddressFormValues = {\n  email?: string;\n  firstname: string;\n  lastname: string;\n  street1?: string;\n  street2?: string;\n  postcode: string;\n  city: string;\n  country: Country;\n  region?: Region;\n  company?: string;\n  telephone?: string;\n  saveInAddressBook?: boolean;\n};\n\nconst INITIAL_VALUES: SetCheckoutAddressFormValues = {\n  email: '',\n  firstname: '',\n  lastname: '',\n  street1: '',\n  street2: '',\n  postcode: '',\n  city: '',\n  country: undefined,\n  region: undefined,\n  company: '',\n  telephone: '',\n  saveInAddressBook: false\n};\n\nexport type SetCheckoutAddressFormProviderProps = FormProviderProps<SetCheckoutAddressFormValues, CheckoutAddress> & {\n  setAddress: CheckoutOperationFunction<SetShippingAddressResponse | SetBillingAddressResponse, CheckoutAddress>;\n  address?: CheckoutAddress | Address;\n};\nexport const SetCheckoutAddressFormProvider: React.SFC<SetCheckoutAddressFormProviderProps> = props => {\n  const { initialValues, setAddress, address, onSuccess, mutationOptions, ...formikProps } = props;\n  const isMounted = useMounted();\n  const getUserError = useGetUserError();\n\n  return (\n    <Formik\n      initialStatus={{}}\n      initialValues={address ? checkoutAddressToSetCheckoutAddressFormValues(address) : initialValues}\n      enableReinitialize\n      onSubmit={({ street1, street2, ...values }, { setSubmitting, setStatus }) =>\n        setAddress(\n          {\n            ...values,\n            street: [street1, street2].filter(Boolean)\n          },\n          mutationOptions\n        )\n          .then(() => {\n            const successData = {\n              ...values,\n              street: [street1, street2].filter(Boolean)\n            };\n\n            if (isMounted.current) {\n              setStatus({ data: successData });\n              setSubmitting(false);\n            }\n\n            return onSuccess && onSuccess(successData);\n          })\n          .catch(e => {\n            const error = getUserError(e);\n            if (error.length && isMounted.current) {\n              setStatus({ error });\n              setSubmitting(false);\n            }\n          })\n      }\n      {...formikProps}\n    />\n  );\n};\nSetCheckoutAddressFormProvider.defaultProps = {\n  // eslint-disable-next-line react/default-props-match-prop-types\n  initialValues: { ...INITIAL_VALUES }\n};\nSetCheckoutAddressFormProvider.propTypes = {\n  setAddress: PropTypes.func.isRequired\n};\n\nexport interface ICheckoutAddressToSetCheckoutAddressFormValues {\n  (address?: CheckoutAddress | Address): SetCheckoutAddressFormValues;\n}\nexport const checkoutAddressToSetCheckoutAddressFormValues: ICheckoutAddressToSetCheckoutAddressFormValues = address => {\n  if (!address) {\n    return INITIAL_VALUES;\n  }\n\n  const { __typename, street, ...rest } = { __typename: undefined, ...address };\n\n  return {\n    street1: street.length > 0 ? street[0] : undefined,\n    street2: street.length > 1 ? street[1] : undefined,\n    ...rest\n  };\n};\n","import React, { useState, useCallback } from 'react';\nimport { useSetBillingAddressMutation, SetBillingAddressResponse } from '@deity/falcon-shop-data';\nimport { useCheckout } from './CheckoutConsumer';\nimport { CheckoutAddress, addressToCheckoutAddressInput } from './CheckoutAddress';\nimport { CheckoutOperation, CheckoutOperationHook } from './CheckoutOperation';\n\nexport const useSetBillingAddress: CheckoutOperationHook<SetBillingAddressResponse, CheckoutAddress> = () => {\n  const [address, setAddress] = useState<CheckoutAddress>();\n  const { isLoading, setLoading, setBillingAddress, isBillingSameAsShipping } = useCheckout();\n  const [mutation, result] = useSetBillingAddressMutation({\n    onCompleted: data => {\n      if (data) {\n        setBillingAddress(address);\n        setLoading(false);\n      }\n    }\n  });\n\n  if (result.loading !== isLoading) {\n    setLoading(result.loading);\n  }\n\n  return [\n    useCallback(\n      async (input: CheckoutAddress, options) => {\n        setLoading(true);\n        setAddress(input);\n\n        return mutation({\n          ...options,\n          variables: {\n            input: {\n              address: addressToCheckoutAddressInput(input),\n              billingSameAsShipping: isBillingSameAsShipping\n            }\n          }\n        });\n      },\n      [isBillingSameAsShipping, setLoading, mutation]\n    ),\n    result\n  ];\n};\n\nexport type SetBillingAddressProps = {\n  children: CheckoutOperation<SetBillingAddressResponse, CheckoutAddress>;\n};\nexport const SetBillingAddress: React.FC<SetBillingAddressProps> = ({ children }) => {\n  return children(...useSetBillingAddress());\n};\n","import { ShippingMethod, CheckoutDetailsInput } from '@deity/falcon-shop-extension';\n\n/**\n * Map `ShippingMethod` to `CheckoutDetailsInput`\n * @param shipping\n */\nexport const shippingMethodToCheckoutDetailsInput = (shipping: ShippingMethod): CheckoutDetailsInput => {\n  const { method, provider, title, ...data } = shipping;\n\n  return {\n    provider,\n    method,\n    data\n  };\n};\n","import React, { useState, useCallback } from 'react';\nimport { ShippingMethod } from '@deity/falcon-shop-extension';\nimport { useSetShippingMethodMutation, SetShippingMethodResponse } from '@deity/falcon-shop-data';\nimport { useCheckout } from './CheckoutConsumer';\nimport { CheckoutOperation, CheckoutOperationHook } from './CheckoutOperation';\nimport { shippingMethodToCheckoutDetailsInput } from './shippingMethodToCheckoutDetailsInput';\n\nexport const useSetShippingMethod: CheckoutOperationHook<SetShippingMethodResponse, ShippingMethod> = () => {\n  const [state, setState] = useState<ShippingMethod>();\n  const { isLoading, setLoading, setShippingMethod } = useCheckout();\n  const [mutation, result] = useSetShippingMethodMutation({\n    onCompleted: data => {\n      if (data) {\n        setShippingMethod(state);\n        setLoading(false);\n      }\n    }\n  });\n\n  if (result.loading !== isLoading) {\n    setLoading(result.loading);\n  }\n\n  return [\n    useCallback(\n      async (input: ShippingMethod, options) => {\n        setLoading(true);\n        setState(input);\n\n        return mutation({ ...options, variables: { input: shippingMethodToCheckoutDetailsInput(input) } });\n      },\n      [mutation, setLoading]\n    ),\n    result\n  ];\n};\n\nexport type SetShippingMethodProps = {\n  children: CheckoutOperation<SetShippingMethodResponse, ShippingMethod>;\n};\nexport const SetShippingMethod: React.FC<SetShippingMethodProps> = ({ children }) => {\n  return children(...useSetShippingMethod());\n};\n","import React, { useCallback } from 'react';\nimport { useSetPaymentMethodMutation, SetPaymentMethodResponse } from '@deity/falcon-shop-data';\nimport { useCheckout } from './CheckoutConsumer';\nimport { CheckoutOperation, CheckoutOperationHook } from './CheckoutOperation';\nimport { PaymentMethodData } from './PaymentMethodData';\n\nexport const useSetPaymentMethod: CheckoutOperationHook<SetPaymentMethodResponse, PaymentMethodData> = () => {\n  const { isLoading, setLoading, setPaymentMethod } = useCheckout();\n  const [mutation, result] = useSetPaymentMethodMutation();\n\n  if (result.loading !== isLoading) {\n    setLoading(result.loading);\n  }\n\n  return [\n    useCallback(\n      async (input: PaymentMethodData, options) => {\n        setLoading(true);\n        const response = await mutation({\n          ...options,\n          variables: { input: { provider: input.provider, method: input.method, data: input.data } }\n        });\n        const { data } = response;\n        setLoading(false);\n        if (data && data.setPaymentMethod) setPaymentMethod(data.setPaymentMethod);\n        return response;\n      },\n      [mutation, setLoading, setPaymentMethod]\n    ),\n    result\n  ];\n};\n\nexport type SetPaymentMethodProps = {\n  children: CheckoutOperation<SetPaymentMethodResponse, PaymentMethodData>;\n};\nexport const SetPaymentMethod: React.FC<SetPaymentMethodProps> = ({ children }) => {\n  return children(...useSetPaymentMethod());\n};\n","import { PaymentMethod, CheckoutDetailsInput } from '@deity/falcon-shop-extension';\n\nexport type PaymentMethodData = PaymentMethod & {\n  data?: object;\n};\n\nexport const paymentMethodToCheckoutDetailsInput = (payment: PaymentMethodData): CheckoutDetailsInput => {\n  return {\n    provider: payment.provider,\n    method: payment.method,\n    data: payment.data\n  };\n};\n","import React, { useCallback } from 'react';\nimport { usePlaceOrderMutation, PlaceOrderResponse } from '@deity/falcon-shop-data';\nimport { addressToCheckoutAddressInput } from './CheckoutAddress';\nimport { OrderData } from './CheckoutValues';\nimport { useCheckout } from './CheckoutConsumer';\nimport { CheckoutOperation, CheckoutOperationHook } from './CheckoutOperation';\nimport { shippingMethodToCheckoutDetailsInput } from './shippingMethodToCheckoutDetailsInput';\nimport { paymentMethodToCheckoutDetailsInput } from './PaymentMethodData';\n\nexport const usePlaceOrder: CheckoutOperationHook<PlaceOrderResponse, OrderData | undefined> = () => {\n  const { isLoading, setLoading, setOrderData, setResult } = useCheckout();\n  const [mutation, result] = usePlaceOrderMutation({\n    onCompleted: data => {\n      if (data) {\n        setResult(data.placeOrder);\n        setLoading(false);\n      }\n    }\n  });\n\n  if (result.loading !== isLoading) {\n    setLoading(result.loading);\n  }\n\n  return [\n    useCallback(\n      async (input: OrderData, options) => {\n        setLoading(true);\n        setOrderData(input);\n\n        return mutation({\n          ...(options || {}),\n          variables: {\n            input: {\n              email: input.email,\n              billingAddress: addressToCheckoutAddressInput(input.billingAddress),\n              shippingAddress: addressToCheckoutAddressInput(input.shippingAddress),\n              shippingMethod: shippingMethodToCheckoutDetailsInput(input.shippingMethod),\n              paymentMethod: input.paymentMethod ? paymentMethodToCheckoutDetailsInput(input.paymentMethod) : null\n            }\n          }\n        });\n      },\n      [setLoading, setOrderData, mutation]\n    ),\n    result\n  ];\n};\n\nexport type PlaceOrderProps = {\n  children: CheckoutOperation<PlaceOrderResponse, OrderData>;\n};\nexport const PlaceOrder: React.FC<PlaceOrderProps> = ({ children }) => {\n  return children(...usePlaceOrder());\n};\n","import { gql } from '@apollo/client';\nimport { Query } from '@deity/falcon-data';\n\nexport const GET_CONFIG = gql`\n  query Config {\n    config @client\n  }\n`;\n\nexport class ConfigQuery extends Query {\n  static defaultProps = {\n    query: GET_CONFIG\n  };\n}\n\nexport const GET_CONFIG_KEY = gql`\n  query GetConfigKey($key: String) {\n    configKey(key: $key) @client\n  }\n`;\n\nexport type ConfigKeyVariables = {\n  key?: string;\n};\nexport type ConfigKeyResponse = {\n  [key: string]: any;\n};\n\nexport class ConfigKeyQuery extends Query<ConfigKeyResponse, ConfigKeyVariables> {\n  static defaultProps = {\n    query: GET_CONFIG_KEY\n  };\n}\n","import { IFieldResolver } from 'graphql-tools';\n\nexport const getClientConfig = (apolloState: any, key?: string) => {\n  return key ? apolloState.ROOT_QUERY.config[key] : apolloState.ROOT_QUERY.config;\n};\n\nexport const getClientConfigResolver: IFieldResolver<{}, any, { key: string }> = (_source, { key }, context) => {\n  return getClientConfig(context.cache.data.data, key);\n};\n","import { UrlWithStringQuery } from 'url';\nimport { Cookies, useCookies } from 'react-cookie';\nimport { FalconScope, GeoLocation } from '@deity/falcon-data';\nimport { FalconScopeConfig } from './FalconScopeConfig';\n\n/** @see import { useCookie } from 'react-cookie' */\nexport type CookiesInterface = {\n  all: ReturnType<typeof useCookies>[0];\n  set: ReturnType<typeof useCookies>[1];\n  remove: ReturnType<typeof useCookies>[2];\n};\n\n/** Falcon Client side scope data - the selected scope based on current context (url, cookie, etc) */\nexport type FalconClientCurrentScopeConfig = {\n  /** scope id */\n  id: string;\n  /** router path basename */\n  pathBasename?: string;\n};\n\n/** Falcon Client side scopes configuration */\nexport type FalconClientScopesConfig = {\n  /** available scopes */\n  available: FalconScope[];\n  /** id of currently selected scope */\n  currentId: string;\n  /** default scope id (might be different from passed default scope if that one is not available */\n  defaultId: string;\n  /** router path basename */\n  pathBasename?: string;\n};\n\n/**\n * TODO: instead of using `Cookies` and `CookieInterface` we should be able to provide single and consistent interface\n */\nexport type ScopeContext<TCookie> = {\n  url: UrlWithStringQuery;\n  cookies: TCookie;\n  geoLocation: GeoLocation;\n};\n\n/** extracts Falcon Client side Scope configuration\n * @param falconScopeConfig\n * @param context\n */\nexport type GetFalconClientScopeConfig = (\n  config: FalconScopeConfig,\n  context: ScopeContext<Cookies>\n) => FalconClientCurrentScopeConfig;\n\nexport const tryGetFalconScopeConfig = (\n  config: FalconScopeConfig,\n  context: ScopeContext<Cookies>,\n  getter: GetFalconClientScopeConfig\n): FalconClientScopesConfig => {\n  let defaultScopeId = config.defaultId;\n  let selectedScope;\n\n  if (!config.scopes.length) {\n    throw new Error('Server returned empty list of scopes. Please configure the server to return at least one scope!');\n  }\n\n  try {\n    selectedScope = getter(config, context);\n  } catch (error) {\n    console.warn(`Can not get FalconScope! Trying to get the default FalconScope instead.`);\n    selectedScope = config.scopes.find(x => x.id === config.defaultId);\n    if (!selectedScope) {\n      console.warn(\n        `The default scope with id=\"${config.defaultId}\" was not returned from the server. Using the first scope from the list as default (id=\"${config.scopes[0].id}\")`\n      );\n      selectedScope = config.scopes[0];\n      defaultScopeId = selectedScope.id;\n    }\n  }\n\n  return {\n    available: config.scopes,\n    defaultId: defaultScopeId,\n    currentId: selectedScope.id,\n    pathBasename: selectedScope.pathBasename\n  };\n};\n\n/** sets Falcon Client side Scope configuration */\nexport type SetFalconClientScopeConfig = (\n  falconScopeId: string,\n  config: FalconScopeConfig,\n  context: ScopeContext<CookiesInterface>\n) => FalconClientCurrentScopeConfig | undefined;\n","import React from 'react';\n\nexport type GeoLocationContextType = {\n  country: string;\n  region?: string;\n  city?: string;\n  postCode?: string;\n};\n\nexport const GeoLocationContext = React.createContext<GeoLocationContextType>({} as any);\n","import React, { useContext } from 'react';\nimport { GeoLocationContext, GeoLocationContextType } from './GeoLocationContext';\n\nexport type GeoLocationProviderProps = GeoLocationContextType;\n\nexport const GeoLocationProvider: React.FC<GeoLocationProviderProps> = props => {\n  const { country, region, city, postCode, children } = props;\n\n  return (\n    <GeoLocationContext.Provider\n      value={{\n        country,\n        region,\n        city,\n        postCode\n      }}\n    >\n      {children}\n    </GeoLocationContext.Provider>\n  );\n};\n\nexport const useGeoLocation = (): GeoLocationContextType => useContext(GeoLocationContext);\n\nexport type GeoLocationRenderProps = GeoLocationContextType;\n\nexport type GeoLocationProps = {\n  children: (props: GeoLocationRenderProps) => any;\n};\n\nexport const GeoLocation: React.FC<GeoLocationProps> = ({ children }) => children({ ...useGeoLocation() });\n","import React from 'react';\nimport { FalconScope } from '@deity/falcon-data';\n\nexport type FalconScopeContextType = {\n  current: FalconScope;\n  available: FalconScope[];\n  default: FalconScope;\n  pathBasename?: string;\n  set: (id: string) => void;\n};\n\nexport const FalconScopeContext = React.createContext<FalconScopeContextType>({} as any);\n","import { parse } from 'url';\nimport React, { useContext, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { FalconScope as FalconScopeData } from '@deity/falcon-data';\nimport { useMounted } from '../React';\nimport { useGeoLocation } from '../GeoLocation';\nimport { FalconScopeContext, FalconScopeContextType } from './FalconScopeContext';\nimport { GetFalconClientScopeConfig, SetFalconClientScopeConfig } from './FalconClientScopeConfig';\n\nexport type FalconScopeProviderProps = {\n  currentId: string;\n  available: FalconScopeData[];\n  defaultId: string;\n  pathBasename?: string;\n  get: GetFalconClientScopeConfig;\n  set?: SetFalconClientScopeConfig;\n};\nexport const FalconScopeProvider: React.FC<FalconScopeProviderProps> = props => {\n  const { available, currentId, defaultId, pathBasename: basename, set, children } = props;\n  const isMounted = useMounted();\n  const [allCookies, setCookie, removeCookie] = useCookies();\n\n  const getById = id => available.find(x => x.id === id);\n\n  const [current, setCurrent] = useState(getById(currentId));\n  const [pathBasename, setPathBasename] = useState(basename);\n  const geoLocation = useGeoLocation();\n\n  const setNewScope = id => {\n    const newFalconScope = available.find(x => x.id === id);\n    if (newFalconScope === undefined || current.id === id) {\n      return;\n    }\n\n    const location = parse(window.location.href);\n    set(\n      id,\n      { scopes: available, defaultId },\n      { cookies: { all: allCookies, remove: removeCookie, set: setCookie }, url: location, geoLocation }\n    );\n    if (isMounted.current) {\n      setCurrent(getById(id));\n    }\n  };\n\n  return (\n    <FalconScopeContext.Provider\n      value={{\n        available,\n        current,\n        default: getById(defaultId),\n        pathBasename,\n        set: setNewScope\n      }}\n    >\n      {children}\n    </FalconScopeContext.Provider>\n  );\n};\n\nexport const useFalconScope = (): FalconScopeContextType => useContext(FalconScopeContext);\n\nexport type FalconScopeRenderProps = FalconScopeContextType;\nexport type FalconScopeProps = {\n  children: (props: FalconScopeRenderProps) => any;\n};\n\nexport const FalconScope: React.FC<FalconScopeProps> = ({ children }) => children({ ...useFalconScope() });\n","import { GetFalconClientScopeConfig, SetFalconClientScopeConfig } from './FalconClientScopeConfig';\n\n/**\n * provide FalconClient side Scope configuration from URL\n * @param config\n * @param context\n */\nexport const getFalconScopeFromURL: GetFalconClientScopeConfig = (config, context) => {\n  const { scopes, defaultId } = config;\n  const { url } = context;\n\n  const scope = scopes.find(x => url.pathname.startsWith(`/${x.id}`));\n  if (scope) {\n    return {\n      id: scope.id,\n      pathBasename: scope.id === defaultId ? '' : scope.id\n    };\n  }\n\n  return {\n    id: scopes.find(x => x.id === defaultId).id\n  };\n};\n\nexport const setFalconScopeToURL: SetFalconClientScopeConfig = (falconScopeId, config, context) => {\n  const { defaultId } = config;\n\n  if (defaultId === falconScopeId) {\n    window.location.pathname = `/`;\n  } else {\n    window.location.pathname = `/${falconScopeId}`;\n  }\n\n  return undefined;\n};\n","import { GetFalconClientScopeConfig, SetFalconClientScopeConfig } from './FalconClientScopeConfig';\n\nexport const FALCON_SCOPE_COOKIE_NAME = 'falcon-scope';\n\n/**\n * provide FalconClient side Scope configuration from cookie\n * @param config\n * @param context\n */\nexport const getFalconScopeFromCookie: GetFalconClientScopeConfig = (config, context) => {\n  const { scopes, defaultId } = config;\n  const { cookies } = context;\n\n  const falconScopeId = cookies.get(FALCON_SCOPE_COOKIE_NAME);\n  const id = falconScopeId || defaultId;\n\n  return {\n    id: scopes.find(x => x.id === id).id\n  };\n};\n\nexport const setFalconScopeToCookie: SetFalconClientScopeConfig = (falconScopeId, config, context) => {\n  const { defaultId } = config;\n  const { cookies } = context;\n\n  if (falconScopeId === defaultId) {\n    cookies.remove(FALCON_SCOPE_COOKIE_NAME);\n  } else {\n    cookies.set(FALCON_SCOPE_COOKIE_NAME, falconScopeId);\n  }\n\n  if (typeof window !== 'undefined') {\n    setTimeout(() => window.location.reload(), 1);\n  }\n\n  return {\n    id: falconScopeId\n  };\n};\n","const getDateTimeFormatter = (locales: string[], dateTimeFormatOptions: Intl.DateTimeFormatOptions) =>\n  new Intl.DateTimeFormat(\n    locales.filter(x => x),\n    { ...dateTimeFormatOptions }\n  );\n\nexport type DateTimeFormatOptions = {\n  locale?: string;\n} & Intl.DateTimeFormatOptions;\n\nexport function dateTimeFormatFactory(localeCodes: string[], options: DateTimeFormatOptions) {\n  const memoizedFormatter = getDateTimeFormatter([options.locale, ...localeCodes], options);\n\n  /**\n   * DateTime Format (memoized)\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {number | string | Date} value value to format\n   * @returns {string} formatted value\n   */\n  function dateTimeFormat(value: number | string | Date): string;\n  /**\n   * DateTime Format (not memoized, because of custom options, so the performance penalty could be paid)\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n   * @param {number | string | Date} value value to format\n   * @param {DateTimeFormatOptions} overrides `LocaleProvider.dateTimeFormatOptions` options overrides\n   * @returns {string} formatted value\n   */\n  function dateTimeFormat(value: number | string | Date, overrides: DateTimeFormatOptions): string;\n  function dateTimeFormat(value: number | string | Date, overrides?: DateTimeFormatOptions): string {\n    return overrides\n      ? getDateTimeFormatter([overrides.locale, options.locale, ...localeCodes], {\n          ...options,\n          ...overrides\n        }).format(new Date(value))\n      : memoizedFormatter.format(new Date(value));\n  }\n\n  return dateTimeFormat;\n}\n","import React, { useContext } from 'react';\nimport { useFalconScope } from '../FalconScope';\nimport { dateTimeFormatFactory, DateTimeFormatOptions } from './dateTimeFormat';\n\nexport type LocaleContextType = {\n  locale: string;\n  localeFallback: string;\n  dateTimeFormat: ReturnType<typeof dateTimeFormatFactory>;\n};\nconst LocaleContext = React.createContext<LocaleContextType>({} as any);\n\nexport type LocaleProviderProps = {\n  dateTimeFormatOptions?: DateTimeFormatOptions;\n  locale?: LocaleContextType['locale'];\n  localeFallback?: LocaleContextType['localeFallback'];\n};\nexport const LocaleProvider: React.FC<LocaleProviderProps> = props => {\n  const { locale, localeFallback, dateTimeFormatOptions = {} } = props;\n\n  const falconScope = useFalconScope();\n\n  const value = locale || falconScope.current.languageTag;\n  const valueFallback = localeFallback || falconScope.default.languageTag;\n  const dateTimeFormat = dateTimeFormatFactory([dateTimeFormatOptions.locale, value, valueFallback], {\n    ...props.dateTimeFormatOptions\n  });\n\n  return (\n    <LocaleContext.Provider value={{ locale: value, localeFallback: valueFallback, dateTimeFormat }}>\n      {props.children}\n    </LocaleContext.Provider>\n  );\n};\n\nexport const useLocale = (): LocaleContextType => useContext(LocaleContext);\n\nexport type LocaleRenderProps = LocaleContextType;\nexport type LocaleProps = {\n  children: (props: LocaleRenderProps) => any;\n};\n\nexport const Locale: React.FC<LocaleProps> = ({ children }) => children({ ...useLocale() });\n","const getPriceFormatter = (locales: string[], numberFormatOptions: Intl.NumberFormatOptions) =>\n  new Intl.NumberFormat(\n    locales.filter(x => x),\n    { ...numberFormatOptions, style: 'currency' }\n  );\n\nexport type PriceFormatOptions = {\n  locale?: string;\n} & Omit<Intl.NumberFormatOptions, 'style'>;\n\n/**\n * Price Format function factory based on Intl api\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\n * @param {string[]} localeCodes localization codes\n * @param {PriceFormatOptions} options formatting options\n * @returns {ReturnType<typeof priceFormatFactory>} price formatter\n */\nexport function priceFormatFactory(localeCodes: string[], options: PriceFormatOptions) {\n  const memoizedFormatter = getPriceFormatter([options.locale, ...localeCodes], options);\n\n  /**\n   * Price Format (memoized)\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\n   * @param {number} value value to format\n   * @returns {string} formatted value\n   */\n  function priceFormat(value: number): string;\n  /**\n   * Price Format (not memoized, because of custom options, so the performance penalty could be paid)\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\n   * @param {number} value value to format\n   * @param {PriceFormatOptions} overrides `LocaleProvider.priceFormatOptions` options overrides\n   * @returns {string} formatted value\n   */\n  function priceFormat(value: number, overrides: PriceFormatOptions): string;\n  function priceFormat(value: number, overrides?: PriceFormatOptions): string {\n    return overrides\n      ? getPriceFormatter([overrides.locale, options.locale, ...localeCodes], {\n          ...options,\n          ...overrides\n        }).format(value)\n      : memoizedFormatter.format(value);\n  }\n\n  return priceFormat;\n}\n","import React, { useContext } from 'react';\nimport { useFalconScope } from '../FalconScope';\nimport { useLocale } from '../Locale';\nimport { priceFormatFactory, PriceFormatOptions } from './priceFormat';\n\nexport type CurrencyContextType = {\n  currency: string;\n  priceFormat: ReturnType<typeof priceFormatFactory>;\n};\n\nconst CurrencyContext = React.createContext<CurrencyContextType>({} as any);\n\nexport type CurrencyProviderProps = {\n  /** if not provided  then `backendConfig.shop.activeCurrency` will be used */\n  currency?: string;\n  priceFormatOptions?: PriceFormatOptions;\n};\n/**\n * Depends on `FalconScopeProvider` and `LocaleProvider`\n * @internal\n */\nexport const CurrencyProvider: React.FC<CurrencyProviderProps> = ({ priceFormatOptions = {}, children, ...rest }) => {\n  const scope = useFalconScope();\n  const { locale, localeFallback } = useLocale();\n\n  const currency = rest.currency || scope.current.currency;\n\n  return (\n    <CurrencyContext.Provider\n      value={{\n        currency,\n        priceFormat: priceFormatFactory([priceFormatOptions.locale, locale, localeFallback], {\n          currency,\n          ...priceFormatOptions\n        })\n      }}\n    >\n      {children}\n    </CurrencyContext.Provider>\n  );\n};\n\nexport const useCurrency = (): CurrencyContextType => useContext(CurrencyContext);\n\nexport type CurrencyRenderProps = CurrencyContextType;\nexport type CurrencyProps = {\n  children: (props: CurrencyRenderProps) => any;\n};\nexport const Currency: React.FC<CurrencyProps> = ({ children }) => children({ ...useCurrency() });\n","/**\n * Helper to get the currency label including symbol e.g. $ USD\n * @param {string} currency currency code e.g. USD\n * @param {string} locale lacel code e.g. en or en-GB\n * @returns {string} currency label\n */\nexport function getCurrencyLabel(currency: string, locale: string): string {\n  const localeFormatter = new Intl.NumberFormat(locale, {\n    currency,\n    style: 'currency'\n  });\n\n  const localeData = localeFormatter.formatToParts();\n  const currencyArray = localeData.filter(part => part.type === 'currency');\n\n  // For some locales the currency code is the same as the currency symbol. In this case we only return the code\n  if (currencyArray.length && currencyArray[0].value !== currency) {\n    return `${currencyArray[0].value} ${currency}`;\n  }\n\n  return currency;\n}\n","import React from 'react';\nimport ReactRouterDom, { withRouter, RouteComponentProps } from 'react-router-dom';\n// eslint-disable-next-line\nimport { History, Location } from 'history';\n\nexport type RouterRenderProps = {\n  children: (props: ReactRouterRenderProps) => any;\n} & RouteComponentProps;\n\nexport type ReactRouterRenderProps = {\n  match: ReactRouterDom.match;\n  location: Location;\n  history: History;\n};\n\nconst RenderRouterProps: React.FC<RouterRenderProps> = props => {\n  const { match, location, history, children } = props;\n\n  return children({ match, location, history });\n};\n\nexport const Router = withRouter(RenderRouterProps);\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport const DynamicRedirect = ({ match, location, staticContext }) => {\n  const { path, status = 301 } = match.params;\n  if (staticContext) {\n    staticContext.status = status;\n  }\n  return <Redirect from={location.pathname} to={path} />;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Location } from 'history';\nimport { UrlQuery, UrlResult } from '@deity/falcon-data';\nimport { Router } from '../Router';\n\nexport type DynamicRouteComponentProps = UrlResult;\nexport type ComponentsMap = Record<string, React.ComponentType<DynamicRouteComponentProps> | object>;\nexport type DynamicRouteProps = {\n  location?: Location;\n  components: ComponentsMap;\n  notFound: React.ComponentType<{ location?: any }>;\n};\nexport const DynamicRoute: React.SFC<DynamicRouteProps> = props => {\n  const { components, notFound: NotFound } = props;\n\n  return (\n    <Router>\n      {router => {\n        const location = props.location || router.location;\n        const { pathname: path } = location;\n\n        return (\n          <UrlQuery variables={{ path }}>\n            {({ data: { url } }) => {\n              if (!url) {\n                return <NotFound location={location} />;\n              }\n\n              if (!('type' in url)) {\n                return <Redirect to={url.path} />;\n              }\n\n              const Component = components[url.type] as React.ComponentType<DynamicRouteComponentProps>;\n              if (!Component) {\n                throw new Error(`[DynamicRoute]: Please register component for '${url.type}' content type!`);\n              }\n\n              return <Component {...url} />;\n            }}\n          </UrlQuery>\n        );\n      }}\n    </Router>\n  );\n};\nDynamicRoute.propTypes = {\n  location: PropTypes.any,\n  components: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired).isRequired,\n  notFound: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport { matchPath, match as Match } from 'react-router-dom';\nimport { Location } from 'history';\n\nexport const findRouteElement = (\n  children: React.ReactNode,\n  location: Location,\n  type?: string\n): [Match | null, React.ReactNode] => {\n  let element: React.ReactNode;\n  let match: Match<any> | null;\n\n  // We use React.Children.forEach instead of React.Children.toArray().find()\n  // here because toArray adds keys to all child elements and we do not want\n  // to trigger an unmount/remount for two <Route>s that render the same\n  // component at different URLs.\n  React.Children.forEach(children, child => {\n    if (match == null && React.isValidElement(child)) {\n      const path = child.props.path || child.props.from;\n      if (path) {\n        match = matchPath(location.pathname, { ...child.props, path });\n      } else {\n        // eslint-disable-next-line\n        if (child.props.type && type) {\n          match = matchPath(type, { ...child.props, path: child.props.type });\n        }\n      }\n\n      // eslint-disable-next-line\n      element = child;\n    }\n  });\n\n  return [match, element];\n};\n","import React from 'react';\nimport { matchPath, match as Match } from 'react-router-dom';\nimport { Location } from 'history';\n\n/**\n * Determines if for provided location is handled via Route component which requires to fetch resource metadata first\n * @param children set of Route components to search for matching\n * @param location location to which Route component needs to be matched\n */\nexport const isResourceMetaRequired = (children: React.ReactNode, location: Location): boolean => {\n  let result = false;\n  let match: Match<any> | null;\n\n  // We use React.Children.forEach instead of React.Children.toArray().find()\n  // here because toArray adds keys to all child elements and we do not want\n  // to trigger an unmount/remount for two <Route>s that render the same\n  // component at different URLs.\n  React.Children.forEach(children, child => {\n    if (!result && match == null && React.isValidElement(child)) {\n      const path = child.props.path || child.props.from;\n      if (path) {\n        match = matchPath(location.pathname, { ...child.props, path });\n      } else {\n        result = !!child.props.type;\n      }\n    }\n  });\n\n  return result;\n};\n","import React, { useState } from 'react';\nimport { match as Match, SwitchProps, useLocation, useRouteMatch } from 'react-router-dom';\nimport { Location } from 'history';\nimport { UrlQuery, UrlResult, Loader, OperationError } from '@deity/falcon-data';\nimport { findRouteElement } from './findRouteElement';\nimport { isResourceMetaRequired } from './isResourceMetaRequired';\n\nconst RouteElementRenderer = React.memo<any>(({ element, location, match, additionalParams = {} }) => {\n  if (!match) {\n    return null;\n  }\n\n  match.params = {\n    ...match.params,\n    ...additionalParams\n  };\n\n  return React.cloneElement(element as any, { location, computedMatch: match });\n});\n\nexport type SwitchDynamicURLProps = SwitchProps & {\n  /**\n   * invoked when fetching `Url` data\n   * @example \n   * <SwitchDynamicURL\n      onLoading={({ component }) => (\n        <React.Fragment>\n          <Loader variant=\"overlay\" />\n          {component}\n        </React.Fragment>\n      )}\n    >\n   */\n  onLoading?: (props: { component: React.ReactNode; location?: Location; match: Match<any> }) => React.ReactNode;\n};\n\nfunction getUrlType(urlResult: UrlResult) {\n  // eslint-disable-next-line no-underscore-dangle\n  return urlResult.__typename === 'ResourceMeta' ? urlResult.type : 'redirect';\n}\n\n/**\n * `react-router` `Switch` component which is able to handle dynamically resolved components.\n * It works with `Url` query.\n * @example\n * <SwitchDynamicURL>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact type=\"shop-product\" component={Product} />\n    <p>not Found</p>\n  </SwitchDynamicURL>\n * @param {SwitchDynamicURLProps} props\n */\nexport const SwitchDynamicURL: React.FC<SwitchDynamicURLProps> = props => {\n  const contextMatch = useRouteMatch();\n  const contextLocation = useLocation();\n  const location = props.location || contextLocation;\n  const [previousLocation, setPreviousLocation] = useState<Location<any>>(location);\n  const [previousResourceMeta, setPreviousResourceMeta] = useState<UrlResult>(undefined);\n\n  if (isResourceMetaRequired(props.children, location) === false) {\n    if (location !== previousLocation) {\n      setPreviousLocation(location);\n    }\n\n    const [match, element] = findRouteElement(props.children, location);\n\n    return <RouteElementRenderer element={element} location={location} match={match || contextMatch} />;\n  }\n\n  return (\n    <UrlQuery\n      variables={{\n        path: location.pathname + location.search\n      }}\n      passLoading\n      onCompleted={result => {\n        if (result) setPreviousResourceMeta(result.url);\n      }}\n    >\n      {({ data, error, loading }) => {\n        if (loading) {\n          const [previousMatch, previousElement] = previousLocation\n            ? findRouteElement(\n                props.children,\n                previousLocation,\n                previousResourceMeta && getUrlType(previousResourceMeta)\n              )\n            : [undefined, undefined];\n\n          if (previousMatch) {\n            return (\n              <RouteElementRenderer\n                element={previousElement}\n                location={previousLocation}\n                match={previousMatch}\n                additionalParams={previousResourceMeta}\n              />\n            );\n          }\n\n          // looks like this is unreachable code actually\n          return <Loader variant=\"overlay\" />;\n        }\n\n        if (error) {\n          return <OperationError {...error} />;\n        }\n\n        if (loading === false && data && previousLocation !== location) {\n          setPreviousLocation(location);\n        }\n        const [match, element] = findRouteElement(props.children, location, data?.url && getUrlType(data.url));\n        return (\n          <RouteElementRenderer\n            element={element}\n            location={location}\n            match={match || contextMatch}\n            additionalParams={data.url}\n          />\n        );\n      }}\n    </UrlQuery>\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\ntype EnsureTTIState = {\n  isReady: boolean;\n  setTimeoutHandlerId?: any;\n  requestIdleHandlerId?: any;\n};\n\nexport type EnsureTTIRenderProps = {\n  isReady: boolean;\n  forceReady: () => void;\n};\nexport type EnsureTTIProps = {\n  /** Default timeout is `6000`ms and based on the assumption how the Lighthouse measures time to interactive to improve perceived performance\n   * @see https://developers.google.com/web/updates/2018/05/first-input-delay\n   */\n  timeout?: number;\n  forceReady?: boolean;\n  children: (props: EnsureTTIRenderProps) => React.ReactNode;\n};\n\n/**\n * TTI measures the time from Navigation Start until the page's resources are loaded and the main thread is idle for at least 5 seconds\n */\nexport class EnsureTTI extends React.Component<EnsureTTIProps, EnsureTTIState> {\n  static propTypes = {\n    timeout: PropTypes.number,\n    children: PropTypes.func.isRequired\n  };\n\n  static defaultProps = {\n    timeout: 6000\n  };\n\n  constructor(props: EnsureTTIProps) {\n    super(props);\n\n    this.state = {\n      isReady: false,\n      setTimeoutHandlerId: undefined,\n      requestIdleHandlerId: undefined\n    };\n  }\n\n  componentDidMount() {\n    const { timeout } = this.props;\n\n    // set isReady flag after timeout\n    const setTimeoutHandlerId = window.setTimeout(() => {\n      if (this.state.isReady) {\n        return;\n      }\n\n      if ('requestIdleCallback' in window) {\n        // @ts-ignore\n        const requestIdleHandlerId = window.requestIdleCallback(this.forceReady);\n\n        return this.setState(x => ({ ...x, requestIdleHandlerId }));\n      }\n\n      return this.forceReady();\n    }, timeout);\n\n    // eslint-disable-next-line\n    this.setState(x => ({ ...x, setTimeoutHandlerId }));\n  }\n\n  componentDidUpdate() {\n    if (this.props.forceReady) {\n      this.forceReady();\n    }\n  }\n\n  componentWillUnmount() {\n    const { setTimeoutHandlerId, requestIdleHandlerId } = this.state;\n\n    window.clearTimeout(setTimeoutHandlerId);\n    if ('cancelIdleCallback' in window && requestIdleHandlerId !== undefined) {\n      // @ts-ignore\n      window.cancelIdleCallback(requestIdleHandlerId);\n    }\n  }\n\n  /** Sets isReady even before `timeout` */\n  forceReady = () => {\n    if (!this.state.isReady) {\n      this.setState(x => ({ ...x, isReady: true }));\n    }\n  };\n\n  render() {\n    return this.props.children({\n      isReady: this.state.isReady,\n      forceReady: this.forceReady\n    });\n  }\n}\n","import { SelectionType, Aggregation } from '@deity/falcon-data';\n\nexport type FilterData = {\n  field: string;\n  title: string;\n  type: SelectionType;\n  options: FilterOption[];\n  value: string[];\n};\n\nexport type FilterOption = {\n  title: string;\n  value: string;\n  count: number;\n};\n\nexport const aggregationToFilterData = (aggregation: Aggregation): FilterData => ({\n  field: aggregation.field,\n  title: aggregation.title,\n  type: aggregation.type,\n  options: aggregation.buckets,\n  value: []\n});\n","import qs from 'qs';\nimport { SortOrderValue, PaginationInput, SortOrderDirection } from '@deity/falcon-data';\nimport { FilterOperator } from '@deity/falcon-shop-data';\nimport { FilterInput } from '@deity/falcon-shop-extension';\n\nexport type SearchState = {\n  term?: string;\n  filters: FilterInput[];\n  sort?: SortOrderValue;\n  pagination?: PaginationInput;\n};\n\nexport function searchStateFromURL(url: string): Partial<SearchState> {\n  const parts = qs.parse(url.replace('?', ''));\n  const searchState: Partial<SearchState> = {};\n\n  if (parts.q) {\n    searchState.term = parts.q as string;\n  }\n\n  if (parts.p) {\n    searchState.pagination = {\n      page: parseInt(parts.p as string, 10),\n      perPage: parseInt(parts.pp as string, 10)\n    };\n  }\n\n  if (parts.sort) {\n    const [field, direction] = (parts.sort as string).split(':');\n    searchState.sort = {\n      field,\n      direction: direction as SortOrderDirection\n    };\n  }\n\n  if (parts.filters) {\n    const names = Object.keys(parts.filters);\n    searchState.filters = [];\n    for (let i = 0; i < names.length; i++) {\n      const [field, operator] = names[i].split(':');\n      searchState.filters.push({\n        field,\n        operator: (operator as FilterOperator) || FilterOperator.equals,\n        value: parts.filters[names[i]].split(',')\n      });\n    }\n  }\n\n  return searchState;\n}\n\nexport type UrlParts = {\n  // search query\n  q?: string;\n  // search filters - key/value map\n  filters?: { [key: string]: string };\n  // current page\n  p?: string;\n  // items per page\n  pp?: string;\n  // sort order\n  sort?: string;\n};\n\nexport function searchStateToURL(state: Partial<SearchState>): string {\n  const { term, filters, sort, pagination } = state;\n\n  const parts: UrlParts = {};\n\n  if (filters) {\n    parts.filters = {};\n    for (let i = 0; i < filters.length; i++) {\n      const filter = filters[i];\n      const name = filter.operator === FilterOperator.equals ? filter.field : `${filter.field}:${filter.operator}`;\n      parts.filters[name] = filter.value.join(',');\n    }\n  }\n\n  if (sort && sort.field && sort.direction) {\n    parts.sort = `${sort.field}:${sort.direction}`;\n  }\n\n  if (pagination) {\n    if (pagination.perPage) {\n      parts.pp = pagination.perPage.toString();\n    }\n    if (pagination.page && pagination.page > 1) {\n      parts.p = pagination.page.toString();\n    }\n  }\n\n  if (term) {\n    parts.q = term; // eslint-disable-line id-length\n  }\n\n  return qs.stringify(parts, { encode: false });\n}\n","import { SortOrderValue } from '@deity/falcon-data';\n\n/**\n * Determines if two `SortOrderValue` are equal from a value perspective\n * @param item1\n * @param item2\n */\nexport const areSortOrderInputsEqual = (item1?: SortOrderValue, item2?: SortOrderValue): boolean =>\n  !!item1 && !!item2 && item1.field === item2.field && item1.direction === item2.direction;\n","import React from 'react';\nimport { SearchContextValue } from './SearchContextValue';\n\nexport const SearchContext = React.createContext<SearchContextValue>({\n  state: {\n    filters: []\n  },\n  setTerm: () => {},\n  setFilter: () => {},\n  removeFilter: () => {},\n  removeFilters: () => {},\n  setSortOrder: () => {},\n  setPagination: () => {}\n});\n","import React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { Location } from 'history';\nimport { SortOrderValue, PaginationInput } from '@deity/falcon-data';\nimport { BackendConfigQuery, FilterOperator } from '@deity/falcon-shop-data';\nimport { areSortOrderInputsEqual } from '../SortOrder/areSortOrderInputsEqual';\nimport { SearchContext } from './SearchContext';\nimport { SearchState, searchStateFromURL, searchStateToURL } from './searchState';\n\ntype SearchProviderInnerProps = SearchProviderProps &\n  RouteComponentProps & {\n    sortOrders: (SortOrderValue | undefined)[];\n    defaultSortOrder?: SortOrderValue;\n  };\nexport class SearchProviderInner extends React.Component<SearchProviderInnerProps, SearchState> {\n  static defaultProps = {\n    searchStateFromURL,\n    searchStateToURL,\n    filters: []\n  };\n\n  constructor(props: SearchProviderInnerProps) {\n    super(props);\n\n    this.state = this.getStateFromURL(props.location);\n  }\n\n  componentDidMount() {\n    this.historyUnlisten = this.props.history.listen(this.restoreStateFromURL);\n  }\n\n  componentWillUnmount() {\n    this.historyUnlisten();\n  }\n\n  get defaultSortOrder(): SortOrderValue | undefined {\n    const { defaultSortOrder, sortOrders } = this.props;\n    if (defaultSortOrder) {\n      return defaultSortOrder;\n    }\n    if (sortOrders.some(x => !x)) {\n      return undefined;\n    }\n\n    return sortOrders[0];\n  }\n\n  getStateFromURL(location: Location): SearchState {\n    const { sort, filters, ...rest } = this.props.searchStateFromURL!(location.search);\n\n    return {\n      ...rest,\n      filters: Array.isArray(filters) ? filters : [],\n      sort: sort && this.sortOrderExists(sort) ? sort : undefined\n    };\n  }\n\n  setFilter = (field: string, value: string[], operator = FilterOperator.equals) => {\n    let filters = [...this.state.filters];\n\n    if (value.length === 0) {\n      filters = filters.filter(x => x.field !== field);\n    } else {\n      const filterIndex = filters.findIndex(x => x.field === field);\n      if (filterIndex >= 0) {\n        filters[filterIndex] = { ...filters[filterIndex], value, operator };\n      } else {\n        filters.push({ field, value, operator });\n      }\n    }\n\n    this.updateURL({\n      ...this.state,\n      filters,\n      // reset pagination on filters change - go back to the 1st page\n      pagination: this.setPaginationToFirstPage()\n    });\n  };\n\n  setPaginationToFirstPage = () => {\n    return {\n      ...this.state.pagination,\n      page: 1\n    };\n  };\n\n  setSortOrder = (sort?: SortOrderValue) => {\n    this.updateURL({\n      ...this.state,\n      sort: this.sortOrderExists(sort) ? sort : this.defaultSortOrder,\n      pagination: this.setPaginationToFirstPage()\n    });\n  };\n\n  setPagination = (pagination: PaginationInput) => this.updateURL({ ...this.state, pagination });\n\n  setTerm = (term: string) =>\n    this.updateURL({\n      ...this.state,\n      term,\n      // reset pagination on search term change - go back to the 1st page\n      pagination: this.setPaginationToFirstPage()\n    });\n\n  sortOrderExists = (sort?: SortOrderValue): boolean =>\n    this.props.sortOrders.some(x => (!x && !sort) || areSortOrderInputsEqual(x, sort));\n\n  removeFilters = () =>\n    this.updateURL({\n      ...this.state,\n      filters: [],\n      pagination: this.setPaginationToFirstPage()\n    });\n\n  stateToSerialize = (state: SearchState): Partial<SearchState> => {\n    const stateToSerialize: Partial<SearchState> = { ...state };\n\n    return stateToSerialize;\n  };\n\n  private restoreStateFromURL = (location: any) => {\n    const state = this.getStateFromURL(location);\n    // state created from URL might be empty so we have to make sure that all the items are correctly\n    // removed from current state - setting undefined for non existing value will do the trick\n    Object.keys(this.state).forEach(key => {\n      if (!(key in state)) {\n        state[key as keyof SearchState] = undefined;\n      }\n    });\n\n    this.setState(state);\n  };\n\n  private historyUnlisten = () => {};\n\n  private updateURL(state: SearchState) {\n    const queryString = this.props.searchStateToURL!(state);\n    this.props.history.push(`${this.props.location.pathname}?${queryString}`);\n  }\n\n  render() {\n    return (\n      <SearchContext.Provider\n        value={{\n          state: { ...this.state },\n          setFilter: this.setFilter,\n          removeFilter: x => this.setFilter(x, []),\n          removeFilters: this.removeFilters,\n          setSortOrder: this.setSortOrder,\n          setPagination: this.setPagination,\n          setTerm: this.setTerm\n        }}\n      >\n        {this.props.children}\n      </SearchContext.Provider>\n    );\n  }\n}\n\nexport type SearchProviderProps = {\n  searchStateFromURL?(url: string): Partial<SearchState>;\n  searchStateToURL?(state: Partial<SearchState>): string;\n};\nconst SearchProviderWithSortOrders: React.SFC<SearchProviderProps & RouteComponentProps> = ({ ...rest }) => (\n  <BackendConfigQuery>\n    {({ data: { backendConfig } }) => (\n      <SearchProviderInner {...rest} sortOrders={backendConfig.shop.sortOrderList.map(x => x.value)} />\n    )}\n  </BackendConfigQuery>\n);\n\n// wrap everything in router so SearchProviderWithSortOrders has access to history and location\nexport const SearchProvider = withRouter(SearchProviderWithSortOrders);\n","import { SearchContext } from './SearchContext';\n\nexport const SearchConsumer = SearchContext.Consumer;\n","import { useContext } from 'react';\nimport { SearchContext } from './SearchContext';\n\nexport const useSearchContext = () => useContext(SearchContext);\n","import React from 'react';\nimport { Aggregation } from '@deity/falcon-data';\nimport { FilterOperator, FilterInput } from '@deity/falcon-shop-extension';\nimport { SearchConsumer } from '../Search';\nimport { FilterData, FilterOption, aggregationToFilterData } from './FilterData';\n\nexport const getFiltersData = (\n  filters: FilterInput[],\n  aggregations: Aggregation[] = [],\n  filterData: FilterData[] = []\n): FilterData[] =>\n  [...[], ...aggregations.map(x => aggregationToFilterData(x)), ...filterData].map(x => {\n    const selected = filters.find(filter => filter.field === x.field);\n\n    return {\n      ...x,\n      value: selected ? selected.value : []\n    };\n  });\n\nexport const getSelectedFilterOptionsFor = (data: FilterData[], field: string) => {\n  const filter = data.find(x => x.field === field);\n\n  if (filter === undefined) {\n    return [];\n  }\n  const { options, value } = filter;\n\n  return options.filter(option => value.some(x => x === option.value));\n};\n\nexport type FiltersDataProviderRenderProps = {\n  filters: FilterData[];\n  anySelected: boolean;\n  getSelectedFilterOptionsFor: (data: FilterData[], field: string) => FilterOption[];\n  setFilter(name: string, value: string[], operator?: FilterOperator): void;\n  removeFilter(name: string): void;\n  removeFilters(): void;\n};\n\nexport type FiltersDataProviderProps = {\n  aggregations?: Aggregation[];\n  data?: FilterData[];\n  children: (renderProps: FiltersDataProviderRenderProps) => React.ReactNode;\n};\n\nexport const FiltersDataProvider: React.SFC<FiltersDataProviderProps> = ({ children, aggregations, data }) => (\n  <SearchConsumer>\n    {({ state: { filters }, setFilter, removeFilter, removeFilters }) =>\n      children({\n        filters: getFiltersData(filters, aggregations || [], data || []),\n        anySelected: filters.length > 0,\n        getSelectedFilterOptionsFor,\n        setFilter,\n        removeFilter,\n        removeFilters\n      })\n    }\n  </SearchConsumer>\n);\n","import React, { useContext } from 'react';\n\nexport type FormContextValue = {\n  id: string;\n  name?: string;\n  i18nId?: string;\n};\n\nexport const FormContext = React.createContext<FormContextValue>({} as any);\n\nexport const useFormContext = () => useContext(FormContext);\n","export const capitalize: (x: string) => string = x => x.charAt(0).toUpperCase() + x.slice(1);\n","import { FieldConfig } from 'formik';\nimport { TranslationFunction } from '@deity/falcon-i18n';\nimport { capitalize } from './string';\n\nexport type ValidatorProps = {\n  name: string;\n  label?: string;\n  value?: any;\n  formI18nId?: string;\n  t: TranslationFunction;\n};\nexport interface IValidator {\n  (props: ValidatorProps): ValidationError;\n}\n\nexport type ValidationError = undefined | string | I18nValidationError;\nexport type I18nValidationError = {\n  errorI18nId: string;\n} & { [key in string]: any };\n\nexport function isI18nValidationError(error: ValidationError): error is I18nValidationError {\n  return typeof error === 'object' && (error as I18nValidationError).errorI18nId !== undefined;\n}\n\nexport const getErrorI18nId: (error: string, name: string, formI18nId?: string) => string | string[] = (\n  error,\n  name,\n  formI18nId\n) => {\n  if (formI18nId) {\n    return [`${formI18nId}.${name}Field${capitalize(error)}`, `formError.${error}`];\n  }\n\n  return `formError.${error}`;\n};\n\nexport interface IFieldValidator {\n  (validators: IValidator[], validatorProps: Omit<ValidatorProps, 'value'>): FieldConfig['validate'];\n}\nexport const fieldValidator: IFieldValidator = (validators = [], { name, label, formI18nId, t }) => value => {\n  for (let i = 0; i < validators.length; i++) {\n    const result = validators[i]({ name, label, value, formI18nId, t });\n\n    if (isI18nValidationError(result)) {\n      const { errorI18nId: error, ...errorProps } = result;\n\n      return t<string>(getErrorI18nId(error, name, formI18nId), {\n        name,\n        value,\n        ...errorProps,\n        label: label || capitalize(name)\n      });\n    }\n\n    if (result !== undefined) {\n      return result;\n    }\n  }\n\n  return undefined;\n};\n","import React, { useCallback } from 'react';\nimport { Field as FormikField, FastField as FormikFastField, FieldProps as FormikFieldProps } from 'formik';\nimport { useI18n } from '@deity/falcon-i18n';\nimport { useFormContext } from './FormContext';\nimport { fieldValidator, IValidator } from './IValidator';\n\nconst translateIfExists = (t, key?: string) => (key ? (t(key, { defaultValue: '' }) as string) : undefined);\n\nconst LABEL_SUFFIX = 'FieldLabel';\nconst PLACEHOLDER_SUFFIX = 'FieldPlaceholder';\n\nexport const getLabelI18nId = (formI18nId: string, fieldName: string) => `${formI18nId}.${fieldName}${LABEL_SUFFIX}`;\nexport const getPlaceholderI18nId = (formI18nId: string, fieldName: string) =>\n  `${formI18nId}.${fieldName}${PLACEHOLDER_SUFFIX}`;\n\nexport type FieldRenderProps<TValue = any> = {\n  form: FormikFieldProps<TValue>['form'] & {\n    id?: number | string;\n  };\n  field: FormikFieldProps<TValue>['field'] & {\n    id?: string;\n    placeholder?: string;\n    invalid: boolean;\n  };\n  label?: string;\n  error?: string;\n  i18nIds: {\n    label?: string;\n    placeholder?: string;\n  };\n};\n\nexport type FieldProps<TValue = any> = {\n  id?: string;\n  name: string;\n  label?: string;\n  placeholder?: string;\n  validate?: IValidator[];\n  fast?: boolean;\n  children?: (props: FieldRenderProps<TValue>) => React.ReactNode;\n};\nexport const Field: React.SFC<FieldProps> = React.memo(props => {\n  const { name, label, placeholder, validate, children, fast, ...restProps } = props;\n  const { t } = useI18n();\n  const { id: formId, i18nId: formI18nId } = useFormContext();\n\n  const i18nIds = formI18nId\n    ? {\n        label: getLabelI18nId(formI18nId, name),\n        placeholder: getPlaceholderI18nId(formI18nId, name)\n      }\n    : {};\n  const fieldLabel = label || translateIfExists(t, i18nIds.label);\n  const fieldPlaceholder = placeholder || translateIfExists(t, i18nIds.placeholder);\n\n  const validateCallback = useCallback(() => fieldValidator(validate, { name, label: fieldLabel, formI18nId, t }), [\n    validate,\n    name,\n    fieldLabel,\n    formI18nId,\n    t\n  ]);\n\n  if (!children) {\n    return null;\n  }\n\n  const FieldComponent = fast ? FormikFastField : FormikField;\n  return (\n    <FieldComponent name={name} validate={validateCallback()}>\n      {({ form, field, meta: { touched, error } }: FormikFieldProps) =>\n        children({\n          form: { ...form, id: formId },\n          field: {\n            id: `${formId}-${name}`,\n            ...restProps,\n            ...field,\n            placeholder: fieldPlaceholder,\n            invalid: !!touched && !!error\n          },\n          error,\n          label: fieldLabel,\n          i18nIds\n        })\n      }\n    </FieldComponent>\n  );\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form as FormikForm, FormikFormProps, useFormikContext } from 'formik';\nimport { FormContext, FormContextValue } from './FormContext';\n\nexport type FormProps = FormContextValue &\n  FormikFormProps & {\n    autoSubmit: boolean;\n  };\n\nexport const Form: React.SFC<FormProps> = ({ i18nId, autoSubmit, ...restProps }) => {\n  const { submitCount, isValid, submitForm, isSubmitting } = useFormikContext();\n\n  if (autoSubmit) {\n    if (!isSubmitting && submitCount === 0 && isValid) {\n      submitForm();\n      return null;\n    }\n    if (isSubmitting && submitCount <= 1) {\n      return null;\n    }\n  }\n\n  return (\n    <FormContext.Provider\n      value={{\n        id: restProps.id,\n        name: restProps.name,\n        i18nId\n      }}\n    >\n      <FormikForm {...restProps} />\n    </FormContext.Provider>\n  );\n};\nForm.propTypes = {\n  id: PropTypes.string.isRequired\n};\n","import { IValidator } from './IValidator';\n\nconst VALID_EMAIL_REGEX = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nconst VALID_PASSWORD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/;\n\nconst isValueProvided = x =>\n  (x !== '' && x !== undefined && x !== null && x !== false && x !== 'placeholder') ||\n  (Array.isArray(x) && (x as any[]).length);\n\nexport const requiredValidator: IValidator = ({ value }) => {\n  if (!isValueProvided(value)) {\n    return { errorI18nId: 'required' };\n  }\n\n  return undefined;\n};\n\nexport function isCheckedValidator(checkedValue = true): IValidator {\n  return ({ value }) => {\n    if (!isValueProvided(value) || value !== checkedValue) {\n      return { errorI18nId: 'isNotChecked' };\n    }\n\n    return undefined;\n  };\n}\n\nexport const emailValidator: IValidator = ({ value }) => {\n  if (isValueProvided(value) && !VALID_EMAIL_REGEX.test(value.toLowerCase())) {\n    return { errorI18nId: 'invalid' };\n  }\n\n  return undefined;\n};\n\nexport const passwordValidator: IValidator = ({ value }) => {\n  if (isValueProvided(value) && !VALID_PASSWORD_REGEX.test(value)) {\n    return { errorI18nId: 'uncomplexPassword' };\n  }\n\n  return undefined;\n};\n\nexport function confirmPasswordValidator(password: string = ''): IValidator {\n  return ({ value }) => {\n    if (password !== '' && isValueProvided(value)) {\n      return password !== value ? { errorI18nId: 'differentPasswords' } : undefined;\n    }\n\n    return undefined;\n  };\n}\n\nexport function lengthValidator(min: number = 0, max?: number): IValidator {\n  if (max && max < min) {\n    throw new Error(`value of 'min' can not be greater than 'max'!`);\n  }\n\n  return ({ value }) => {\n    if (isValueProvided(value) && typeof value === 'string') {\n      // Ignore newlines when counting characters\n      const { length } = value.replace(/\\n/g, '');\n\n      if (length < min) {\n        return { errorI18nId: 'tooShort', min, ...(max ? { max } : {}) };\n      }\n\n      if (max && length > max) {\n        return { errorI18nId: 'tooLong', min, max };\n      }\n    }\n\n    return undefined;\n  };\n}\n\nexport function numLinesValidator(min: number = 0, max?: number): IValidator {\n  if (max && max < min) {\n    throw new Error(`value of 'min' can not be greater than 'max'!`);\n  }\n\n  return ({ value }) => {\n    if (isValueProvided(value) && typeof value === 'string') {\n      const numLines = value.split('\\n').length;\n\n      if (numLines < min) {\n        return { errorI18nId: 'tooLittleLines', min };\n      }\n      if (numLines > max) {\n        return { errorI18nId: 'tooManyLines', max };\n      }\n    }\n\n    return undefined;\n  };\n}\n\nexport const numberValidator: IValidator = ({ value }) => {\n  if (isValueProvided(value)) {\n    if (value.toString() !== parseFloat(value).toString()) {\n      return { errorI18nId: 'notAnNumber' };\n    }\n  }\n\n  return undefined;\n};\n\nexport const integerValidator: IValidator = ({ value }) => {\n  if (isValueProvided(value)) {\n    if (value.toString() !== parseInt(value, 10).toString()) {\n      return { errorI18nId: 'notInteger' };\n    }\n  }\n\n  return undefined;\n};\n\nexport function rangeValidator(min: number, max: number): IValidator {\n  if (max !== undefined && max < min) {\n    throw new Error(`value of 'min' can not be greater than 'max'!`);\n  }\n\n  return ({ value }) => {\n    value = parseInt(value.toString(), 10);\n\n    if (isValueProvided(value) && typeof value === 'number') {\n      if (value < min) {\n        return { errorI18nId: 'belowRange', min, ...(max ? { max } : {}) };\n      }\n\n      if (max && value > max) {\n        return { errorI18nId: 'aboveRange', min, max };\n      }\n    }\n\n    return undefined;\n  };\n}\n\nexport function dateRangeValidator(min?: string, max?: string, dateTimeFormat?: any): IValidator {\n  const minDate = min && new Date(min);\n  const maxDate = max && new Date(max);\n\n  const formattedMinDate = dateTimeFormat?.(minDate) || minDate.toISOString().split('T')[0];\n  const formattedMaxDate = dateTimeFormat?.(maxDate) || maxDate.toISOString().split('T')[0];\n\n  if (maxDate && maxDate < minDate) {\n    throw new Error(`value of 'min' can not be earlier than 'max'!`);\n  }\n\n  return ({ value }) => {\n    if (isValueProvided(value)) {\n      const valueDate = new Date(value);\n\n      if (minDate && valueDate < minDate) {\n        return { errorI18nId: 'belowDateRange', min: formattedMinDate };\n      }\n\n      if (maxDate && valueDate > maxDate) {\n        return { errorI18nId: 'aboveDateRange', max: formattedMaxDate };\n      }\n    }\n\n    return undefined;\n  };\n}\n","import * as validators from './validators';\nimport { IValidator } from './IValidator';\n\n/**\n * Provides default value validators based on HTML input type\n * @see https://www.w3schools.com/html/html_form_input_types.asp\n * @param input\n */\nexport function getDefaultInputValidators(\n  input: Pick<React.InputHTMLAttributes<HTMLInputElement>, 'type' | 'required' | 'min' | 'max'> & {\n    validate?: IValidator[];\n  }\n): IValidator[] {\n  const { type, required, validate } = input;\n  const anyValidatorsDefined = !!validate;\n\n  const result = anyValidatorsDefined ? validate : [];\n  if (required) {\n    result.unshift(validators.requiredValidator);\n  }\n\n  if (anyValidatorsDefined) {\n    return result;\n  }\n\n  switch (type) {\n    case 'password':\n      result.push(validators.lengthValidator(8), validators.passwordValidator);\n      break;\n    case 'email':\n      result.push(validators.emailValidator);\n      break;\n    case 'text':\n      {\n        const { min = 0, max } = input;\n\n        result.push(\n          validators.lengthValidator(parseInt(min.toString(), 10), max ? parseInt(max.toString(), 10) : undefined)\n        );\n      }\n      break;\n    case 'number':\n      {\n        const { min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER } = input;\n\n        result.push(validators.rangeValidator(parseInt(min.toString(), 10), parseInt(max.toString(), 10)));\n      }\n      break;\n    default:\n      break;\n  }\n\n  return result;\n}\n","import React from 'react';\nimport { useFormikContext, FormikProps } from 'formik';\nimport { useI18n } from '@deity/falcon-i18n';\nimport { FormContext } from './FormContext';\n\nexport type SubmitRenderProps<TValue = any> = {\n  form: FormikProps<TValue> & {\n    id?: number | string;\n  };\n  submit: {\n    value?: string;\n  };\n  i18nIds: {\n    value?: string;\n  };\n};\n\nexport type SubmitProps<TValue = any> = {\n  children?: (props: SubmitRenderProps<TValue>) => React.ReactNode;\n};\n\nexport const Submit: React.SFC<SubmitProps> = ({ children, ...restProps }) => {\n  const { t } = useI18n();\n  const formik = useFormikContext();\n\n  if (!children) {\n    return null;\n  }\n\n  return (\n    <FormContext.Consumer>\n      {({ id: formId, i18nId: formI18nId }) => {\n        const valueId = `${formI18nId}.submitButton`;\n\n        return children({\n          form: {\n            ...formik,\n            id: formId\n          },\n          submit: {\n            value: t(valueId),\n            ...restProps\n          },\n          i18nIds: {\n            value: valueId\n          }\n        });\n      }}\n    </FormContext.Consumer>\n  );\n};\n","export const canUseIntesectionObserver = (): boolean => {\n  return (\n    typeof window !== 'undefined' &&\n    'IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window?.IntersectionObserverEntry?.prototype &&\n    'isIntersecting' in window?.IntersectionObserverEntry?.prototype\n  );\n};\n","import React from 'react';\n\ntype NetworkStatusState = {\n  isOnline: boolean;\n};\nexport type NetworkStatusRenderProps = {\n  isOnline: boolean;\n};\nexport type NetworkStatusProps = {\n  children: (renderProps: NetworkStatusRenderProps) => React.ReactNode;\n};\nexport class NetworkStatus extends React.Component<NetworkStatusProps, NetworkStatusState> {\n  constructor(props) {\n    super(props);\n\n    this.updateOnLineStatus = this.updateOnLineStatus.bind(this);\n\n    this.state = {\n      isOnline: true\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('online', this.updateOnLineStatus);\n    window.addEventListener('offline', this.updateOnLineStatus);\n\n    // run detection logic when component mounts as React 16 optimizes too much and doesn't\n    // re-render even when SSR html doesn't match client-side\n    // @see https://github.com/facebook/react/issues/10591\n    this.updateOnLineStatus();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('online', this.updateOnLineStatus);\n    window.removeEventListener('offline', this.updateOnLineStatus);\n  }\n\n  updateOnLineStatus() {\n    const { navigator } = window;\n    const online = navigator && navigator.onLine;\n\n    if (this.state.isOnline === online) {\n      return;\n    }\n\n    this.setState({ isOnline: online });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { isOnline } = this.state;\n\n    return children({ isOnline });\n  }\n}\n","import { ProductOption, ProductOptionInput } from '@deity/falcon-shop-extension';\n\nexport type ProductOptionsMap = {\n  [id: string]: any;\n};\n\nexport const productOptionsToForm = (\n  options: (Pick<ProductOption, 'id'> & { defaultValue?: any; values?: { id: any; isDefault: boolean }[] })[]\n): ProductOptionsMap =>\n  options.reduce((result, option) => {\n    const values = Array.isArray(option.values) && option.values.length ? option.values : [];\n    const defaultValue = values.find(x => x.isDefault);\n\n    return {\n      ...result,\n      [option.id]: option.defaultValue || (defaultValue && defaultValue.id) || undefined\n    };\n  }, {});\n\nexport const formProductOptionsToInput = (options: ProductOptionsMap) =>\n  Object.entries(options)\n    .filter(x => x[1] !== undefined)\n    .map<ProductOptionInput>(item => ({\n      id: parseInt(item[0], 10),\n      value: item[1]\n    }));\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { useGetUserError } from '@deity/falcon-data';\nimport { Product, ProductOption } from '@deity/falcon-shop-extension';\nimport { useAddToCartMutation, AddToCartResponse } from '@deity/falcon-shop-data';\nimport { FormProviderProps } from '../Forms';\nimport { useMounted } from '../React';\nimport { ProductOptionsMap, productOptionsToForm, formProductOptionsToInput } from './productOptionMappers';\n\nexport type AddToCartFormValues = {\n  qty: string;\n  options: ProductOptionsMap;\n  bundleOptions: [];\n};\nexport type AddToCartFormProviderProps = FormProviderProps<AddToCartFormValues, AddToCartResponse> & {\n  quantity: number;\n  product: Pick<Product, 'sku'> & {\n    options?: Pick<ProductOption, 'id'>[];\n    bundleOptions?: Pick<Product, 'bundleOptions'>;\n  };\n};\nexport const AddToCartFormProvider: React.SFC<AddToCartFormProviderProps> = props => {\n  const { onSuccess, initialValues, quantity, product, mutationOptions, ...formikProps } = props;\n  const defaultInitialValues = {\n    qty: quantity,\n    options: productOptionsToForm(product.options || []),\n    bundleOptions: product.bundleOptions || []\n  };\n\n  const [addToCart] = useAddToCartMutation();\n  const getUserError = useGetUserError();\n  const isMounted = useMounted();\n\n  return (\n    <Formik\n      initialStatus={{}}\n      initialValues={initialValues || defaultInitialValues}\n      onSubmit={(values, { setSubmitting, setStatus }) =>\n        addToCart({\n          variables: {\n            input: {\n              sku: product.sku,\n              qty: parseInt(values.qty.toString(), 10),\n              options: formProductOptionsToInput(values.options),\n              bundleOptions: undefined // values.bundleOptions as any - TODO: add appropriate mapper\n            }\n          },\n          ...(mutationOptions || {})\n        })\n          .then(({ data }) => {\n            if (isMounted.current) {\n              setSubmitting(false);\n              setStatus({ data });\n              return onSuccess && onSuccess(data);\n            }\n          })\n          .catch(e => {\n            const error = getUserError(e);\n            if (error.length && isMounted.current) {\n              setStatus({ error });\n              setSubmitting(false);\n            }\n          })\n      }\n      {...formikProps}\n    />\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect, RouteProps, RouteComponentProps } from 'react-router-dom';\nimport { Loader } from '@deity/falcon-data';\nimport { IsAuthenticatedQuery } from '@deity/falcon-shop-data';\n\nexport type OnlyUnauthenticatedRouteProps = {\n  /** default redirection url is `/` */\n  redirectTo: string;\n} & RouteProps;\n\nexport class OnlyUnauthenticatedRoute extends React.Component<OnlyUnauthenticatedRouteProps> {\n  static propTypes = {\n    ...(Route as any).propTypes,\n    redirectTo: PropTypes.string\n  };\n\n  static defaultProps = {\n    redirectTo: '/'\n  };\n\n  render() {\n    const { component, redirectTo, ...rest } = this.props;\n    const Component = component as React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n\n    return (\n      <Route\n        {...rest}\n        render={props => (\n          <IsAuthenticatedQuery passLoading>\n            {({ data, loading }) => {\n              if (loading) {\n                // we can not render anything until we get know if the customer is authenticated or not\n                return <Loader />;\n              }\n\n              if (data.customer) {\n                return <Redirect to={{ pathname: redirectTo }} />;\n              }\n\n              return <Component {...props} />;\n            }}\n          </IsAuthenticatedQuery>\n        )}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect, RouteProps, RouteComponentProps } from 'react-router-dom';\nimport { Loader } from '@deity/falcon-data';\nimport { IsAuthenticatedQuery } from '@deity/falcon-shop-data';\n\nexport type ProtectedRouteProps = {\n  /** default redirection url is `/sign-in` */\n  redirectTo: string;\n} & RouteProps;\n\nexport class ProtectedRoute extends React.Component<ProtectedRouteProps> {\n  static propTypes = {\n    ...(Route as any).propTypes,\n    redirectTo: PropTypes.string\n  };\n\n  static defaultProps = {\n    redirectTo: '/sign-in'\n  };\n\n  render() {\n    const { component, redirectTo, ...rest } = this.props;\n    const Component = component as React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\n\n    return (\n      <Route\n        {...rest}\n        render={props => (\n          <IsAuthenticatedQuery passLoading>\n            {({ data, loading }) => {\n              if (loading) {\n                // we can not render anything until we get know if the customer is authenticated or not\n                return <Loader />;\n              }\n\n              if (data.customer) {\n                return <Component {...props} />;\n              }\n\n              const { location } = props;\n              const { pathname, search } = location;\n\n              const hasRedirectToQueryPart = redirectTo.indexOf('?') > -1;\n              const query = new URLSearchParams(\n                hasRedirectToQueryPart ? redirectTo.substring(redirectTo.indexOf('?') + 1) : ''\n              );\n              query.append('next', `${pathname}${search}`);\n\n              return (\n                <Redirect\n                  to={{\n                    pathname: hasRedirectToQueryPart ? redirectTo.substring(0, redirectTo.indexOf('?')) : redirectTo,\n                    search: `?${query}`,\n                    state: { nextLocation: location }\n                  }}\n                />\n              );\n            }}\n          </IsAuthenticatedQuery>\n        )}\n      />\n    );\n  }\n}\n","import React from 'react';\n\nexport type SidebarContainerContextType = {\n  isOpen: boolean;\n  content: SidebarContent;\n  open: (type: string, params?: any, side?: 'right') => void;\n  close: () => void;\n};\n\nexport type SidebarContent = {\n  type: string;\n  params?: any;\n  side;\n};\n\nexport const SidebarContainerContext = React.createContext<SidebarContainerContextType>({} as any);\n","import React, { useContext, useState } from 'react';\nimport { SidebarContainerContext, SidebarContainerContextType, SidebarContent } from './SidebarContainerContext';\n\nexport type SidebarContainerProviderProps = {};\nexport const SidebarContainerProvider: React.FC<SidebarContainerProviderProps> = props => {\n  const { children } = props;\n\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const [content, setContent] = useState<SidebarContent>(undefined);\n\n  const open = (type: string, params: any, side?: 'right') => {\n    setContent({ type, params, side });\n    setIsOpen(true);\n  };\n\n  const close = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <SidebarContainerContext.Provider\n      value={{\n        isOpen,\n        content,\n        open,\n        close\n      }}\n    >\n      {children}\n    </SidebarContainerContext.Provider>\n  );\n};\n\nexport const useSidebarContainer = (): SidebarContainerContextType => useContext(SidebarContainerContext);\n\nexport type SidebarContainerRenderProps = SidebarContainerContextType;\nexport type SidebarContainerProps = {\n  children: (props: SidebarContainerRenderProps) => any;\n};\n\nexport const SidebarContainer: React.FC<SidebarContainerProps> = ({ children }) =>\n  children({ ...useSidebarContainer() });\n","import React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nexport type ScrollToTopProps = {\n  ignoreHash: boolean;\n};\nclass ScrollToTopInner extends React.Component<ScrollToTopProps & RouteComponentProps> {\n  static defaultProps = {\n    ignoreHash: false\n  };\n\n  componentDidUpdate(prevProps: RouteComponentProps) {\n    const { ignoreHash, location } = this.props;\n    const { pathname, hash } = location;\n    const { pathname: prevPathname, hash: prevHash } = prevProps.location;\n\n    if (pathname !== prevPathname || (ignoreHash && hash !== prevHash)) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return children || null;\n  }\n}\n\nexport const ScrollToTop = withRouter(ScrollToTopInner);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { SEO as ShopSEO } from '@deity/falcon-shop-extension';\n\nexport type SEOProps = {\n  meta: Partial<ShopSEO>;\n  title: string;\n};\nexport const SEO: React.FC<SEOProps> = ({ title, meta }) => {\n  const { title: metaTitle, description, keywords } = meta;\n\n  return (\n    <Helmet>\n      <title>{metaTitle || title}</title>\n      {description && <meta name=\"description\" content={description} />}\n      {keywords && <meta name=\"keywords\" content={keywords} />}\n    </Helmet>\n  );\n};\nSEO.propTypes = {\n  title: PropTypes.string.isRequired,\n  meta: PropTypes.shape({\n    title: PropTypes.string,\n    description: PropTypes.string,\n    keywords: PropTypes.string\n  })\n};\nSEO.defaultProps = {\n  meta: {}\n};\n","import React from 'react';\nimport { SortOrder } from '@deity/falcon-data';\nimport { BackendConfigQuery } from '@deity/falcon-shop-data';\nimport { SearchConsumer } from '../Search/SearchConsumer';\nimport { areSortOrderInputsEqual } from './areSortOrderInputsEqual';\n\nexport type SortOrderPickerProviderRenderProps = {\n  items: SortOrder[];\n  value: SortOrder;\n  onChange(active: SortOrder): void;\n};\n\nexport type SortOrderPickerProviderProps = {\n  children(props: SortOrderPickerProviderRenderProps): any;\n};\nexport const SortOrderPickerProvider: React.SFC<SortOrderPickerProviderProps> = ({ children }) => (\n  <BackendConfigQuery>\n    {({ data: { backendConfig } }) => {\n      const { sortOrderList } = backendConfig.shop;\n\n      return (\n        <SearchConsumer>\n          {({ state: { sort }, setSortOrder }) =>\n            children({\n              items: sortOrderList,\n              value: sortOrderList.find(x => (!x.value && !sort) || areSortOrderInputsEqual(x.value, sort))!,\n              onChange: x => setSortOrder(x.value)\n            })\n          }\n        </SearchConsumer>\n      );\n    }}\n  </BackendConfigQuery>\n);\n","import React, { useEffect, useState, Children } from 'react';\nimport PropTypes from 'prop-types';\n\nexport type InBrowserOnlyProps = {\n  fallback?: React.ReactNode;\n  children: React.ReactNode;\n};\nexport const InBrowserOnly: React.SFC<InBrowserOnlyProps> = ({ children, fallback }) => {\n  const [showChildren, setShowChildren] = useState(false);\n  useEffect(() => {\n    setShowChildren(true);\n  }, []);\n\n  return <>{showChildren ? children : fallback || null}</>;\n};\nInBrowserOnly.propTypes = {\n  children: PropTypes.node.isRequired\n};\n","import React, { useState } from 'react';\n\nexport type TwoStepWizardRenderProps = {\n  /** currently selected value */\n  selectedOption: any;\n  /** sets the selected value */\n  selectOption: (value: any) => any;\n  /** resets the selected value */\n  resetOption: () => any;\n};\n\nexport type TwoStepWizardProps = {\n  initialState?: any;\n  children: (props: TwoStepWizardRenderProps) => React.ReactNode;\n};\n\n/**\n * Two step wizard that can be used for any kind of \"select and configure\" process (like payments, shipping etc...)\n * @internal\n * @example\n * <TwoStepWizard>\n *   {({ selectedOption, selectOption }) => {\n *     // nothing selected - render picker\n *     if (!selectedOption) {\n *       return (\n *         <ul>\n *           <li>\n *             <label htmlFor=\"foo\">\n *               <input id=\"foo\" type=\"radio\" name=\"wizard\" value=\"foo\" onChange={() => selectOption('foo')} />\n *               <span>Foo</span>\n *             </label>\n *           </li>\n *           <li>\n *             <label htmlFor=\"bar\">\n *               <input id=\"bar\" type=\"radio\" name=\"wizard\" value=\"bar\" onChange={() => selectOption('bar')} />\n *               <span>Bar</span>\n *             </label>\n *           </li>\n *         </ul>\n *       );\n *     }\n *\n *     if (selectedOption === 'foo') {\n *       // render component for 'foo'\n *       return <div>configure Foo</div>;\n *     }\n *\n *     if (selectedOption === 'bar') {\n *       // render component for 'bar'\n *       return <div>configure Bar</div>;\n *     }\n *\n *     return null;\n *   }}\n * </TwoStepWizard>\n */\nexport const TwoStepWizard: React.SFC<TwoStepWizardProps> = ({ initialState, children }) => {\n  const [selectedOption, setOption] = useState(initialState);\n\n  const selectOption = (value: any) => setOption(value);\n  const resetOption = () => setOption(null);\n\n  return (\n    <>\n      {children({\n        selectedOption,\n        selectOption,\n        resetOption\n      })}\n    </>\n  );\n};\n"],"names":["usePrevious","value","ref","useRef","useEffect","current","useStateCallback","initialState","callback","state","setState","useState","previousState","useLayoutEffect","useMounted","isMounted","SignInFormProvider","props","onSuccess","initialValues","mutationOptions","formikProps","defaultInitialValues","email","password","signIn","useSignInMutation","getUserError","useGetUserError","React","Formik","values","setSubmitting","setStatus","variables","input","then","data","catch","e","error","length","SignOutProvider","children","IsAuthenticatedQuery","customer","SignOutMutation","signOut","result","isSignedIn","SignUpFormProvider","firstname","lastname","confirmPassword","autoSignIn","signUp","useSignUpMutation","setErrors","signUpValues","getFieldErrors","getFormErrors","ForgotPasswordFormProvider","requestPasswordReset","useRequestPasswordResetMutation","ResetPasswordFormProvider","resetToken","resetPassword","useResetPasswordMutation","ChangePasswordFormProvider","currentPassword","changePasswordMutation","useChangePasswordMutation","EditCustomerFormProvider","websiteId","editCustomerMutation","useEditCustomerMutation","AddAddressFormProvider","street1","street2","postcode","city","country","undefined","region","company","telephone","defaultBilling","defaultShipping","addAddress","useAddAddressMutation","street","filter","Boolean","countryId","id","regionId","EditAddressFormProvider","address","rest","editAddress","useEditAddressMutation","isCustomAddress","addressToString","join","code","x","apolloStateToObject","stateKey","Object","keys","forEach","key","Array","isArray","item","generated","map","type","json","CheckoutStep","shippingAddress","billingAddress","shippingMethod","paymentMethod","placeOrder","CheckoutFlow","CheckoutContext","createContext","calculateCheckoutStepFactory","stepsOrder","step","stepFromValues","find","stepIndex","findIndex","stepIndexFromValues","getNextPossibleCheckoutStepFactory","currentStepIndex","isObject","prototype","toString","call","browseAndCleanObject","prop","reduce","object","stripTypenames","initialData","CheckoutProvider","billingSameAsShipping","autoStepForward","onValueChanged","onStepChanged","calculateStep","useCallback","canSetStep","setStep","cStep","pStep","isForwardNavigation","getNextStep","stepForward","next","isBoolean","val","initialBillingSameAsShipping","isLoading","setLoading","isBillingSameAsShipping","setBillingSameAsShipping","setResult","forceStep","setForceStep","setValues","newValues","newStep","setEmail","setShippingAddress","setBillingAddress","setShippingMethod","setPaymentMethod","setOrderData","order","nextStep","defaultProps","useCheckout","useContext","Checkout","checkout","addressToCheckoutAddressInput","checkoutAddress","useSetShippingAddress","setAddress","mutation","useSetShippingAddressMutation","onCompleted","loading","options","SetShippingAddress","INITIAL_VALUES","saveInAddressBook","SetCheckoutAddressFormProvider","checkoutAddressToSetCheckoutAddressFormValues","successData","propTypes","PropTypes","func","isRequired","__typename","useSetBillingAddress","useSetBillingAddressMutation","SetBillingAddress","shippingMethodToCheckoutDetailsInput","shipping","method","provider","useSetShippingMethod","useSetShippingMethodMutation","SetShippingMethod","useSetPaymentMethod","useSetPaymentMethodMutation","response","SetPaymentMethod","paymentMethodToCheckoutDetailsInput","payment","usePlaceOrder","usePlaceOrderMutation","PlaceOrder","GET_CONFIG","ConfigQuery","Query","query","GET_CONFIG_KEY","ConfigKeyQuery","getClientConfig","apolloState","ROOT_QUERY","config","getClientConfigResolver","_source","context","cache","tryGetFalconScopeConfig","getter","defaultScopeId","defaultId","selectedScope","scopes","Error","console","warn","available","currentId","pathBasename","GeoLocationContext","GeoLocationProvider","postCode","useGeoLocation","GeoLocation","FalconScopeContext","FalconScopeProvider","basename","set","allCookies","setCookie","removeCookie","useCookies","getById","setCurrent","setPathBasename","geoLocation","setNewScope","newFalconScope","location","parse","window","href","cookies","all","remove","url","default","useFalconScope","FalconScope","getFalconScopeFromURL","scope","pathname","startsWith","setFalconScopeToURL","falconScopeId","FALCON_SCOPE_COOKIE_NAME","getFalconScopeFromCookie","get","setFalconScopeToCookie","setTimeout","reload","getDateTimeFormatter","locales","dateTimeFormatOptions","Intl","DateTimeFormat","dateTimeFormatFactory","localeCodes","memoizedFormatter","locale","dateTimeFormat","overrides","format","Date","LocaleContext","LocaleProvider","localeFallback","falconScope","languageTag","valueFallback","useLocale","Locale","getPriceFormatter","numberFormatOptions","NumberFormat","style","priceFormatFactory","priceFormat","CurrencyContext","CurrencyProvider","priceFormatOptions","currency","useCurrency","Currency","getCurrencyLabel","localeFormatter","localeData","formatToParts","currencyArray","part","RenderRouterProps","match","history","Router","withRouter","DynamicRedirect","staticContext","path","status","params","Redirect","DynamicRoute","components","notFound","NotFound","router","UrlQuery","Component","any","objectOf","oneOfType","findRouteElement","element","Children","child","isValidElement","from","matchPath","isResourceMetaRequired","RouteElementRenderer","memo","additionalParams","cloneElement","computedMatch","getUrlType","urlResult","SwitchDynamicURL","contextMatch","useRouteMatch","contextLocation","useLocation","previousLocation","setPreviousLocation","previousResourceMeta","setPreviousResourceMeta","search","previousMatch","previousElement","Loader","OperationError","EnsureTTI","constructor","forceReady","isReady","setTimeoutHandlerId","requestIdleHandlerId","componentDidMount","timeout","requestIdleCallback","componentDidUpdate","componentWillUnmount","clearTimeout","cancelIdleCallback","render","number","aggregationToFilterData","aggregation","field","title","buckets","searchStateFromURL","parts","qs","replace","searchState","q","term","p","pagination","page","parseInt","perPage","pp","sort","direction","split","filters","names","i","operator","push","FilterOperator","equals","searchStateToURL","name","stringify","encode","areSortOrderInputsEqual","item1","item2","SearchContext","setTerm","setFilter","removeFilter","removeFilters","setSortOrder","setPagination","SearchProviderInner","filterIndex","updateURL","setPaginationToFirstPage","sortOrderExists","defaultSortOrder","sortOrders","some","stateToSerialize","restoreStateFromURL","getStateFromURL","historyUnlisten","listen","queryString","SearchProviderWithSortOrders","BackendConfigQuery","backendConfig","shop","sortOrderList","SearchProvider","SearchConsumer","Consumer","useSearchContext","getFiltersData","aggregations","filterData","selected","getSelectedFilterOptionsFor","option","FiltersDataProvider","anySelected","FormContext","useFormContext","capitalize","charAt","toUpperCase","slice","isI18nValidationError","errorI18nId","getErrorI18nId","formI18nId","fieldValidator","validators","label","t","errorProps","translateIfExists","defaultValue","LABEL_SUFFIX","PLACEHOLDER_SUFFIX","getLabelI18nId","fieldName","getPlaceholderI18nId","Field","placeholder","validate","fast","restProps","useI18n","formId","i18nId","i18nIds","fieldLabel","fieldPlaceholder","validateCallback","FieldComponent","FormikFastField","FormikField","form","meta","touched","invalid","Form","autoSubmit","submitCount","isValid","submitForm","isSubmitting","useFormikContext","FormikForm","string","VALID_EMAIL_REGEX","VALID_PASSWORD_REGEX","isValueProvided","requiredValidator","isCheckedValidator","checkedValue","emailValidator","test","toLowerCase","passwordValidator","confirmPasswordValidator","lengthValidator","min","max","numLinesValidator","numLines","numberValidator","parseFloat","integerValidator","rangeValidator","dateRangeValidator","minDate","maxDate","formattedMinDate","toISOString","formattedMaxDate","valueDate","getDefaultInputValidators","required","anyValidatorsDefined","unshift","Number","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","Submit","formik","valueId","submit","canUseIntesectionObserver","IntersectionObserverEntry","NetworkStatus","updateOnLineStatus","bind","isOnline","addEventListener","removeEventListener","navigator","online","onLine","productOptionsToForm","isDefault","formProductOptionsToInput","entries","AddToCartFormProvider","quantity","product","qty","bundleOptions","addToCart","useAddToCartMutation","sku","OnlyUnauthenticatedRoute","component","redirectTo","Route","ProtectedRoute","hasRedirectToQueryPart","indexOf","URLSearchParams","substring","append","nextLocation","SidebarContainerContext","SidebarContainerProvider","isOpen","setIsOpen","content","setContent","open","side","close","useSidebarContainer","SidebarContainer","ScrollToTopInner","prevProps","ignoreHash","hash","prevPathname","prevHash","scrollTo","ScrollToTop","SEO","metaTitle","description","keywords","Helmet","shape","SortOrderPickerProvider","items","onChange","InBrowserOnly","fallback","showChildren","setShowChildren","node","TwoStepWizard","selectedOption","setOption","selectOption","resetOption"],"mappings":"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"}