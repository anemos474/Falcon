"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.ConfigKeyQuery = exports.GET_CONFIG_KEY = exports.ConfigQuery = exports.GET_CONFIG = void 0;

var _inheritsLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/inheritsLoose"));

var _falconData = /*#__PURE__*/require("@deity/falcon-data");

var GET_CONFIG = {
  "kind": "Document",
  "definitions": [{
    "kind": "OperationDefinition",
    "operation": "query",
    "name": {
      "kind": "Name",
      "value": "Config"
    },
    "variableDefinitions": [],
    "directives": [],
    "selectionSet": {
      "kind": "SelectionSet",
      "selections": [{
        "kind": "Field",
        "name": {
          "kind": "Name",
          "value": "config"
        },
        "arguments": [],
        "directives": [{
          "kind": "Directive",
          "name": {
            "kind": "Name",
            "value": "client"
          },
          "arguments": []
        }]
      }]
    }
  }],
  "loc": {
    "start": 0,
    "end": 41,
    "source": {
      "body": "\n  query Config {\n    config @client\n  }\n",
      "name": "GraphQL request",
      "locationOffset": {
        "line": 1,
        "column": 1
      }
    }
  }
};
exports.GET_CONFIG = GET_CONFIG;

var ConfigQuery = /*#__PURE__*/function (_Query) {
  (0, _inheritsLoose2.default)(ConfigQuery, _Query);

  function ConfigQuery() {
    return _Query.apply(this, arguments) || this;
  }

  return ConfigQuery;
}(_falconData.Query);

exports.ConfigQuery = ConfigQuery;
ConfigQuery.defaultProps = {
  query: GET_CONFIG
};
var GET_CONFIG_KEY = {
  "kind": "Document",
  "definitions": [{
    "kind": "OperationDefinition",
    "operation": "query",
    "name": {
      "kind": "Name",
      "value": "GetConfigKey"
    },
    "variableDefinitions": [{
      "kind": "VariableDefinition",
      "variable": {
        "kind": "Variable",
        "name": {
          "kind": "Name",
          "value": "key"
        }
      },
      "type": {
        "kind": "NamedType",
        "name": {
          "kind": "Name",
          "value": "String"
        }
      },
      "directives": []
    }],
    "directives": [],
    "selectionSet": {
      "kind": "SelectionSet",
      "selections": [{
        "kind": "Field",
        "name": {
          "kind": "Name",
          "value": "configKey"
        },
        "arguments": [{
          "kind": "Argument",
          "name": {
            "kind": "Name",
            "value": "key"
          },
          "value": {
            "kind": "Variable",
            "name": {
              "kind": "Name",
              "value": "key"
            }
          }
        }],
        "directives": [{
          "kind": "Directive",
          "name": {
            "kind": "Name",
            "value": "client"
          },
          "arguments": []
        }]
      }]
    }
  }],
  "loc": {
    "start": 0,
    "end": 75,
    "source": {
      "body": "\n  query GetConfigKey($key: String) {\n    configKey(key: $key) @client\n  }\n",
      "name": "GraphQL request",
      "locationOffset": {
        "line": 1,
        "column": 1
      }
    }
  }
};
exports.GET_CONFIG_KEY = GET_CONFIG_KEY;

var ConfigKeyQuery = /*#__PURE__*/function (_Query2) {
  (0, _inheritsLoose2.default)(ConfigKeyQuery, _Query2);

  function ConfigKeyQuery() {
    return _Query2.apply(this, arguments) || this;
  }

  return ConfigKeyQuery;
}(_falconData.Query);

exports.ConfigKeyQuery = ConfigKeyQuery;
ConfigKeyQuery.defaultProps = {
  query: GET_CONFIG_KEY
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9DbGllbnRDb25maWcvQ2xpZW50Q29uZmlnUXVlcnkudHN4Il0sIm5hbWVzIjpbIkdFVF9DT05GSUciLCJDb25maWdRdWVyeSIsIlF1ZXJ5IiwiZGVmYXVsdFByb3BzIiwicXVlcnkiLCJHRVRfQ09ORklHX0tFWSIsIkNvbmZpZ0tleVF1ZXJ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFDQTs7QUFFTyxJQUFNQSxVQUFVO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBaEI7OztJQU1NQyxXOzs7Ozs7OztFQUFvQkMsaUI7OztBQUFwQkQsVyxDQUNKRSxZLEdBQWU7QUFDcEJDLEVBQUFBLEtBQUssRUFBRUo7QUFEYSxDO0FBS2pCLElBQU1LLGNBQWM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxDQUFwQjs7O0lBYU1DLGM7Ozs7Ozs7O0VBQXVCSixpQjs7O0FBQXZCSSxjLENBQ0pILFksR0FBZTtBQUNwQkMsRUFBQUEsS0FBSyxFQUFFQztBQURhLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBncWwgfSBmcm9tICdAYXBvbGxvL2NsaWVudCc7XG5pbXBvcnQgeyBRdWVyeSB9IGZyb20gJ0BkZWl0eS9mYWxjb24tZGF0YSc7XG5cbmV4cG9ydCBjb25zdCBHRVRfQ09ORklHID0gZ3FsYFxuICBxdWVyeSBDb25maWcge1xuICAgIGNvbmZpZyBAY2xpZW50XG4gIH1cbmA7XG5cbmV4cG9ydCBjbGFzcyBDb25maWdRdWVyeSBleHRlbmRzIFF1ZXJ5IHtcbiAgc3RhdGljIGRlZmF1bHRQcm9wcyA9IHtcbiAgICBxdWVyeTogR0VUX0NPTkZJR1xuICB9O1xufVxuXG5leHBvcnQgY29uc3QgR0VUX0NPTkZJR19LRVkgPSBncWxgXG4gIHF1ZXJ5IEdldENvbmZpZ0tleSgka2V5OiBTdHJpbmcpIHtcbiAgICBjb25maWdLZXkoa2V5OiAka2V5KSBAY2xpZW50XG4gIH1cbmA7XG5cbmV4cG9ydCB0eXBlIENvbmZpZ0tleVZhcmlhYmxlcyA9IHtcbiAga2V5Pzogc3RyaW5nO1xufTtcbmV4cG9ydCB0eXBlIENvbmZpZ0tleVJlc3BvbnNlID0ge1xuICBba2V5OiBzdHJpbmddOiBhbnk7XG59O1xuXG5leHBvcnQgY2xhc3MgQ29uZmlnS2V5UXVlcnkgZXh0ZW5kcyBRdWVyeTxDb25maWdLZXlSZXNwb25zZSwgQ29uZmlnS2V5VmFyaWFibGVzPiB7XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgcXVlcnk6IEdFVF9DT05GSUdfS0VZXG4gIH07XG59XG4iXX0=