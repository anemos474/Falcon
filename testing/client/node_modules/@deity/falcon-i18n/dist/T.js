"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.T = void 0;

var _objectWithoutPropertiesLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _inheritsLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/inheritsLoose"));

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _propTypes = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("prop-types"));

var _context = /*#__PURE__*/require("./context");

// eslint-disable-next-line id-length
var T = /*#__PURE__*/function (_React$Component) {
  (0, _inheritsLoose2.default)(T, _React$Component);

  function T() {
    return _React$Component.apply(this, arguments) || this;
  }

  var _proto = T.prototype;

  _proto.render = function render() {
    var _this$props = this.props,
        id = _this$props.id,
        translationOptions = (0, _objectWithoutPropertiesLoose2.default)(_this$props, ["id"]);
    return /*#__PURE__*/_react.default.createElement(_context.I18nContext.Consumer, null, function (_ref) {
      var t = _ref.t;
      return t(id, translationOptions);
    });
  };

  return T;
}(_react.default.Component);

exports.T = T;
T.propTypes = {
  id: _propTypes.default.string.isRequired,
  defaultValue: /*#__PURE__*/_propTypes.default.oneOfType([_propTypes.default.string]),
  count: _propTypes.default.number,
  // eslint-disable-next-line react/forbid-prop-types
  context: _propTypes.default.any,
  // used for contexts (eg. male\female)
  replace: /*#__PURE__*/_propTypes.default.shape({}),
  // object with vars for interpolation - or put them directly in options
  lng: _propTypes.default.string,
  lngs: /*#__PURE__*/_propTypes.default.arrayOf(_propTypes.default.string),
  fallbackLng: /*#__PURE__*/_propTypes.default.oneOfType([_propTypes.default.string, /*#__PURE__*/_propTypes.default.arrayOf(_propTypes.default.string)]),
  ns: /*#__PURE__*/_propTypes.default.oneOfType([_propTypes.default.string, /*#__PURE__*/_propTypes.default.arrayOf(_propTypes.default.string)]),
  keySeparator: _propTypes.default.string,
  nsSeparator: _propTypes.default.string,
  returnObjects: _propTypes.default.bool,
  // accessing an object not a translation string
  joinArrays: _propTypes.default.string,
  // char, eg. '\n' that arrays will be joined by (can be set globally too)
  postProcess: /*#__PURE__*/_propTypes.default.oneOfType([_propTypes.default.string, /*#__PURE__*/_propTypes.default.arrayOf(_propTypes.default.string)]),
  // postProcessors to apply see interval plurals as a sample
  interpolation: /*#__PURE__*/_propTypes.default.shape({})
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9ULnRzeCJdLCJuYW1lcyI6WyJUIiwicmVuZGVyIiwicHJvcHMiLCJpZCIsInRyYW5zbGF0aW9uT3B0aW9ucyIsInQiLCJSZWFjdCIsIkNvbXBvbmVudCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJkZWZhdWx0VmFsdWUiLCJvbmVPZlR5cGUiLCJjb3VudCIsIm51bWJlciIsImNvbnRleHQiLCJhbnkiLCJyZXBsYWNlIiwic2hhcGUiLCJsbmciLCJsbmdzIiwiYXJyYXlPZiIsImZhbGxiYWNrTG5nIiwibnMiLCJrZXlTZXBhcmF0b3IiLCJuc1NlcGFyYXRvciIsInJldHVybk9iamVjdHMiLCJib29sIiwiam9pbkFycmF5cyIsInBvc3RQcm9jZXNzIiwiaW50ZXJwb2xhdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7QUFNQTtJQUNhQSxDOzs7Ozs7Ozs7U0FvQlhDLE0sR0FBQSxrQkFBUztBQUNQLHNCQUFzQyxLQUFLQyxLQUEzQztBQUFBLFFBQVFDLEVBQVIsZUFBUUEsRUFBUjtBQUFBLFFBQWVDLGtCQUFmO0FBRUEsd0JBQU8sNkJBQUMsb0JBQUQsQ0FBYSxRQUFiLFFBQXVCO0FBQUEsVUFBR0MsQ0FBSCxRQUFHQSxDQUFIO0FBQUEsYUFBV0EsQ0FBQyxDQUFDRixFQUFELEVBQUtDLGtCQUFMLENBQVo7QUFBQSxLQUF2QixDQUFQO0FBQ0QsRzs7O0VBeEJvQkUsZUFBTUMsUzs7O0FBQWhCUCxDLENBQ0pRLFMsR0FBWTtBQUNqQkwsRUFBQUEsRUFBRSxFQUFFTSxtQkFBVUMsTUFBVixDQUFpQkMsVUFESjtBQUVqQkMsRUFBQUEsWUFBWSxlQUFFSCxtQkFBVUksU0FBVixDQUFvQixDQUFDSixtQkFBVUMsTUFBWCxDQUFwQixDQUZHO0FBR2pCSSxFQUFBQSxLQUFLLEVBQUVMLG1CQUFVTSxNQUhBO0FBSWpCO0FBQ0FDLEVBQUFBLE9BQU8sRUFBRVAsbUJBQVVRLEdBTEY7QUFLTztBQUN4QkMsRUFBQUEsT0FBTyxlQUFFVCxtQkFBVVUsS0FBVixDQUFnQixFQUFoQixDQU5RO0FBTWE7QUFDOUJDLEVBQUFBLEdBQUcsRUFBRVgsbUJBQVVDLE1BUEU7QUFRakJXLEVBQUFBLElBQUksZUFBRVosbUJBQVVhLE9BQVYsQ0FBa0JiLG1CQUFVQyxNQUE1QixDQVJXO0FBU2pCYSxFQUFBQSxXQUFXLGVBQUVkLG1CQUFVSSxTQUFWLENBQW9CLENBQUNKLG1CQUFVQyxNQUFYLGVBQW1CRCxtQkFBVWEsT0FBVixDQUFrQmIsbUJBQVVDLE1BQTVCLENBQW5CLENBQXBCLENBVEk7QUFVakJjLEVBQUFBLEVBQUUsZUFBRWYsbUJBQVVJLFNBQVYsQ0FBb0IsQ0FBQ0osbUJBQVVDLE1BQVgsZUFBbUJELG1CQUFVYSxPQUFWLENBQWtCYixtQkFBVUMsTUFBNUIsQ0FBbkIsQ0FBcEIsQ0FWYTtBQVdqQmUsRUFBQUEsWUFBWSxFQUFFaEIsbUJBQVVDLE1BWFA7QUFZakJnQixFQUFBQSxXQUFXLEVBQUVqQixtQkFBVUMsTUFaTjtBQWFqQmlCLEVBQUFBLGFBQWEsRUFBRWxCLG1CQUFVbUIsSUFiUjtBQWFjO0FBQy9CQyxFQUFBQSxVQUFVLEVBQUVwQixtQkFBVUMsTUFkTDtBQWNhO0FBQzlCb0IsRUFBQUEsV0FBVyxlQUFFckIsbUJBQVVJLFNBQVYsQ0FBb0IsQ0FBQ0osbUJBQVVDLE1BQVgsZUFBbUJELG1CQUFVYSxPQUFWLENBQWtCYixtQkFBVUMsTUFBNUIsQ0FBbkIsQ0FBcEIsQ0FmSTtBQWUwRTtBQUMzRnFCLEVBQUFBLGFBQWEsZUFBRXRCLG1CQUFVVSxLQUFWLENBQWdCLEVBQWhCO0FBaEJFLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcbmltcG9ydCB7IFRPcHRpb25zIH0gZnJvbSAnaTE4bmV4dCc7XG5pbXBvcnQgeyBJMThuQ29udGV4dCB9IGZyb20gJy4vY29udGV4dCc7XG5cbmV4cG9ydCB0eXBlIFRQcm9wcyA9IHtcbiAgaWQ6IHN0cmluZztcbn0gJiBUT3B0aW9ucztcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGlkLWxlbmd0aFxuZXhwb3J0IGNsYXNzIFQgZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQ8VFByb3BzPiB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgaWQ6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgICBkZWZhdWx0VmFsdWU6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmddKSxcbiAgICBjb3VudDogUHJvcFR5cGVzLm51bWJlcixcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QvZm9yYmlkLXByb3AtdHlwZXNcbiAgICBjb250ZXh0OiBQcm9wVHlwZXMuYW55LCAvLyB1c2VkIGZvciBjb250ZXh0cyAoZWcuIG1hbGVcXGZlbWFsZSlcbiAgICByZXBsYWNlOiBQcm9wVHlwZXMuc2hhcGUoe30pLCAvLyBvYmplY3Qgd2l0aCB2YXJzIGZvciBpbnRlcnBvbGF0aW9uIC0gb3IgcHV0IHRoZW0gZGlyZWN0bHkgaW4gb3B0aW9uc1xuICAgIGxuZzogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBsbmdzOiBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuc3RyaW5nKSxcbiAgICBmYWxsYmFja0xuZzogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyldKSxcbiAgICBuczogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyldKSxcbiAgICBrZXlTZXBhcmF0b3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgbnNTZXBhcmF0b3I6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgcmV0dXJuT2JqZWN0czogUHJvcFR5cGVzLmJvb2wsIC8vIGFjY2Vzc2luZyBhbiBvYmplY3Qgbm90IGEgdHJhbnNsYXRpb24gc3RyaW5nXG4gICAgam9pbkFycmF5czogUHJvcFR5cGVzLnN0cmluZywgLy8gY2hhciwgZWcuICdcXG4nIHRoYXQgYXJyYXlzIHdpbGwgYmUgam9pbmVkIGJ5IChjYW4gYmUgc2V0IGdsb2JhbGx5IHRvbylcbiAgICBwb3N0UHJvY2VzczogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLnN0cmluZyldKSwgLy8gcG9zdFByb2Nlc3NvcnMgdG8gYXBwbHkgc2VlIGludGVydmFsIHBsdXJhbHMgYXMgYSBzYW1wbGVcbiAgICBpbnRlcnBvbGF0aW9uOiBQcm9wVHlwZXMuc2hhcGUoe30pXG4gIH07XG5cbiAgcmVuZGVyKCkge1xuICAgIGNvbnN0IHsgaWQsIC4uLnRyYW5zbGF0aW9uT3B0aW9ucyB9ID0gdGhpcy5wcm9wcztcblxuICAgIHJldHVybiA8STE4bkNvbnRleHQuQ29uc3VtZXI+eyh7IHQgfSkgPT4gdChpZCwgdHJhbnNsYXRpb25PcHRpb25zKX08L0kxOG5Db250ZXh0LkNvbnN1bWVyPjtcbiAgfVxufVxuIl19