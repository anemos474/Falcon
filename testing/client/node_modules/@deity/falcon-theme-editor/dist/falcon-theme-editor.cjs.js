'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = require('react');
var React__default = _interopDefault(React);
var falconUi = require('@deity/falcon-ui');
var deepObjectDiff = require('deep-object-diff');

const fonts = [{
  value: '"Segoe UI", system-ui, sans-serif'
}, {
  value: '"SF Mono", monospace'
}, {
  value: 'Work Sans',
  google: 'Work Sans:300,400,700'
}, {
  value: 'Eczar',
  google: 'Eczar:300,400,700'
}, {
  value: 'Fira Sans',
  google: 'Fira Sans:300,400,700'
}, {
  value: 'Rubik',
  google: 'Rubik:300,400,700'
}, {
  value: 'Libre Franklin',
  google: 'Libre Franklin:300,400,700'
}, {
  value: 'Space Mono',
  google: 'Space Mono:300,400,700'
}, {
  value: 'IBM Plex Sans',
  google: 'IBM Plex Sans:300,400,700'
}, {
  value: 'Bangers',
  google: 'Bangers:300,400,700'
}, {
  value: 'Bubblegum Sans',
  google: 'Bubblegum Sans:300,400,700'
}, {
  value: 'Monoton',
  google: 'Monoton:300,400,700'
}, {
  value: 'Baloo',
  google: 'Baloo:300,400,700'
}, {
  value: 'Lilita One',
  google: 'Lilita One:300,400,700'
}];

const themeMeta = {
  colors: {
    input: {
      type: 'color'
    },
    previewCss: value => ({
      backgroundColor: value
    })
  },
  spacing: {
    input: {
      type: 'number',
      min: 0,
      step: 1,
      max: 100
    },
    unit: 'px',
    previewCss: value => ({
      width: value
    })
  },
  fonts: {
    input: {
      type: 'dropdown',
      options: fonts
    }
  },
  fontSizes: {
    input: {
      type: 'number',
      min: 0,
      step: 1,
      max: 80
    },
    previewCss: value => ({
      fontSize: value
    }),
    unit: 'px'
  },
  fontWeights: {
    input: {
      type: 'text'
    }
  },
  lineHeights: {
    input: {
      type: 'number',
      min: 0,
      step: 0.1,
      max: 3
    }
  },
  letterSpacings: {
    input: {
      type: 'text'
    },
    previewCss: value => ({
      letterSpacing: value
    })
  },
  breakpoints: {
    input: {
      type: 'number',
      step: 1,
      min: 0,
      max: 2048
    },
    unit: 'px'
  },
  borders: {
    input: {
      type: 'text'
    },
    previewCss: value => ({
      border: value
    })
  },
  borderRadius: {
    input: {
      type: 'number',
      min: 0,
      step: 1,
      max: 100
    },
    unit: 'px',
    previewCss: value => ({
      borderRadius: value
    })
  },
  boxShadows: {
    input: {
      type: 'text'
    },
    previewCss: value => ({
      boxShadow: value
    })
  },
  easingFunctions: {
    input: {
      type: 'text'
    }
  },
  transitionDurations: {
    input: {
      type: 'text'
    }
  }
};
const themeCategories = {
  colors: {
    name: 'Colors',
    themeSections: ['colors']
  },
  spacing: {
    name: 'Spacing',
    themeSections: ['spacing']
  },
  typography: {
    name: 'Typography',
    themeSections: ['fonts', 'fontSizes', 'fontWeights', 'letterSpacings', 'lineHeights']
  },
  breakpoints: {
    name: 'Breakpoints',
    themeSections: ['breakpoints']
  },
  borders: {
    name: 'Borders',
    themeSections: ['borders', 'borderRadius']
  },
  misc: {
    name: 'Miscellaneous',
    themeSections: ['boxShadows', 'easingFunctions', 'transitionDurations']
  }
};

var _jsxFileName = "/home/vsts/work/1/s/packages/falcon-theme-editor/src/ComponentsEditor.tsx";

function keys(object) {
  return Object.keys(object);
}

const ThemedPropEditor = ({
  themeProp,
  themeSection,
  onChange,
  propKey,
  propValue
}) => {
  const meta = themeMeta[themeProp];
  if (!meta) return null;
  return /*#__PURE__*/React__default.createElement(falconUi.Dropdown, {
    onChange: value => onChange(value.key, value.value),
    __source: {
      fileName: _jsxFileName,
      lineNumber: 53,
      columnNumber: 5
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.DropdownLabel, {
    css: {
      width: '100%'
    },
    __source: {
      fileName: _jsxFileName,
      lineNumber: 54,
      columnNumber: 7
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.GridLayout, {
    gridTemplateColumns: "auto 1fr",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 55,
      columnNumber: 9
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 56,
      columnNumber: 11
    }
  }, propValue, /*#__PURE__*/React__default.createElement(falconUi.Box, {
    as: "span",
    fontSize: "xs",
    ml: "xs",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 13
    }
  }, "(", themeSection[propValue], meta.unit, ")")), meta.previewCss && /*#__PURE__*/React__default.createElement(falconUi.Box, {
    justifySelf: "end",
    bg: "secondaryLight",
    border: "regular",
    borderColor: "secondaryDark",
    size: "md",
    css: meta.previewCss(themeSection[propValue]),
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 13
    }
  }))), /*#__PURE__*/React__default.createElement(falconUi.DropdownMenu, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 77,
      columnNumber: 7
    }
  }, keys(themeSection).map(key => /*#__PURE__*/React__default.createElement(falconUi.DropdownMenuItem, {
    key: key,
    value: {
      key: propKey,
      value: key
    },
    pl: "sm",
    pr: "xxl",
    color: key === propValue ? 'primaryText' : 'secondaryText',
    bg: key === propValue ? 'primary' : 'transparent',
    __source: {
      fileName: _jsxFileName,
      lineNumber: 79,
      columnNumber: 11
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.GridLayout, {
    gridTemplateColumns: "auto 1fr",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 87,
      columnNumber: 13
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 88,
      columnNumber: 15
    }
  }, key, /*#__PURE__*/React__default.createElement(falconUi.Box, {
    as: "span",
    fontSize: "xs",
    ml: "xs",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 90,
      columnNumber: 17
    }
  }, "(", themeSection[key], meta.unit, ")")), meta.previewCss && /*#__PURE__*/React__default.createElement(falconUi.Box, {
    justifySelf: "end",
    bg: "secondaryLight",
    border: "regular",
    borderColor: "secondaryDark",
    size: "md",
    css: meta.previewCss(themeSection[key]),
    __source: {
      fileName: _jsxFileName,
      lineNumber: 96,
      columnNumber: 17
    }
  }))))));
};

class ComponentEditor extends React__default.Component {
  render() {
    const {
      theme,
      themeProps,
      defaultThemeProps,
      onChange
    } = this.props;
    const mergedProps = falconUi.mergeThemes(defaultThemeProps, themeProps || {});
    return /*#__PURE__*/React__default.createElement(falconUi.Box, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 120,
        columnNumber: 7
      }
    }, keys(falconUi.mappings).filter(mapping => mergedProps[mapping] !== undefined).map(prop => {
      const {
        themeProp
      } = falconUi.mappings[prop];
      const propValue = mergedProps[prop];
      return /*#__PURE__*/React__default.createElement(falconUi.GridLayout, {
        key: prop,
        gridTemplateColumns: "120px 1fr",
        mb: "md",
        alignItems: "center",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 128,
          columnNumber: 15
        }
      }, /*#__PURE__*/React__default.createElement(falconUi.Text, {
        p: "none",
        ellipsis: true,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 129,
          columnNumber: 17
        }
      }, prop), typeof propValue === 'string' && (themeProp ? /*#__PURE__*/React__default.createElement(ThemedPropEditor, {
        propKey: prop,
        propValue: propValue,
        themeProp: themeProp,
        themeSection: theme[themeProp],
        onChange: onChange,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 135,
          columnNumber: 21
        }
      }) : /*#__PURE__*/React__default.createElement(falconUi.Input, {
        border: "none",
        fontWeight: "bold",
        value: propValue,
        readOnly: true,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 143,
          columnNumber: 21
        }
      })), typeof propValue === 'object' && /*#__PURE__*/React__default.createElement(falconUi.GridLayout, {
        gridGap: "sm",
        border: "regular",
        borderColor: "secondary",
        borderRadius: "medium",
        p: "sm",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 147,
          columnNumber: 19
        }
      }, keys(propValue).map(breakpointKey => /*#__PURE__*/React__default.createElement(falconUi.Box, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 149,
          columnNumber: 23
        }
      }, /*#__PURE__*/React__default.createElement(falconUi.Text, {
        pb: "xs",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 150,
          columnNumber: 25
        }
      }, breakpointKey, /*#__PURE__*/React__default.createElement(falconUi.Box, {
        as: "span",
        ml: "xs",
        fontSize: "xs",
        __source: {
          fileName: _jsxFileName,
          lineNumber: 152,
          columnNumber: 27
        }
      }, "(min-width: ", theme.breakpoints[breakpointKey], "px)")), themeProp ? /*#__PURE__*/React__default.createElement(ThemedPropEditor, {
        propKey: prop,
        propValue: propValue[breakpointKey],
        themeProp: themeProp,
        themeSection: theme[themeProp],
        onChange: (key, value) => {
          onChange(key, {
            [breakpointKey]: value
          });
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 158,
          columnNumber: 27
        }
      }) : /*#__PURE__*/React__default.createElement(falconUi.Input, {
        border: "none",
        fontWeight: "bold",
        value: propValue[breakpointKey],
        readOnly: true,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 170,
          columnNumber: 27
        }
      })))));
    }));
  }

}

const ComponentsEditor = ({
  theme,
  selectedComponents,
  onComponentThemeChange
}) => /*#__PURE__*/React__default.createElement(React__default.Fragment, null, selectedComponents.map(selectedComponent => {
  const themeKey = Object.keys(selectedComponent.defaultTheme)[0];
  return /*#__PURE__*/React__default.createElement(falconUi.Box, {
    key: themeKey,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 200,
      columnNumber: 9
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.H3, {
    mb: "md",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 201,
      columnNumber: 11
    }
  }, themeKey, " theme"), /*#__PURE__*/React__default.createElement(ComponentEditor, {
    defaultThemeProps: selectedComponent.defaultTheme[themeKey],
    themeProps: theme.components[themeKey],
    theme: theme,
    onChange: onComponentThemeChange(themeKey),
    __source: {
      fileName: _jsxFileName,
      lineNumber: 203,
      columnNumber: 11
    }
  }), selectedComponent.defaultTheme[themeKey].variants && /*#__PURE__*/React__default.createElement(falconUi.Box, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 211,
      columnNumber: 13
    }
  }, Object.keys(selectedComponent.defaultTheme[themeKey].variants).map(variantKey => /*#__PURE__*/React__default.createElement(React__default.Fragment, {
    key: variantKey,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 213,
      columnNumber: 17
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.H3, {
    fontSize: "md",
    my: "md",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 214,
      columnNumber: 19
    }
  }, "variant: ", variantKey), /*#__PURE__*/React__default.createElement(ComponentEditor, {
    defaultThemeProps: selectedComponent.defaultTheme[themeKey].variants[variantKey],
    themeProps: theme.components[themeKey] && theme.components[themeKey].variants && theme.components[themeKey].variants[variantKey],
    theme: theme,
    onChange: onComponentThemeChange(themeKey, variantKey),
    __source: {
      fileName: _jsxFileName,
      lineNumber: 217,
      columnNumber: 19
    }
  })))));
}));

var _jsxFileName$1 = "/home/vsts/work/1/s/packages/falcon-theme-editor/src/ComponentFinder.tsx";

function throttle(callback, wait, context) {
  let timeout;
  let callbackArgs;

  const later = () => {
    callback.apply(context, callbackArgs);
    timeout = undefined;
  };

  return (...args) => {
    if (!timeout) {
      callbackArgs = args;
      timeout = window.setTimeout(later, wait);
    }
  };
}

function getNearestThemableComponentForElement(element) {
  const maxElementHierarchyTraversal = 3;
  let currentTraversal = 0;
  let elementToCheck = element;

  while (currentTraversal < maxElementHierarchyTraversal) {
    if (!elementToCheck) {
      return undefined;
    } // __reactInternalInstance trick based on https://stackoverflow.com/a/50204915/105206
    // eslint-disable-next-line


    for (const key in elementToCheck) {
      if (key.startsWith('__reactInternalInstance$')) {
        const fiberNode = elementToCheck[key]; // eslint-disable-next-line

        const component = fiberNode && fiberNode._debugOwner;
        const defaultTheme = component && component.memoizedProps && component.memoizedProps.defaultTheme;

        if (defaultTheme) {
          return {
            defaultTheme: defaultTheme,
            rect: elementToCheck.getBoundingClientRect()
          };
        } // some themed components render via another component, like checkbox
        // so we need to search for parent's defaultTheme prop as well
        // eslint-disable-next-line


        const parentComponent = component && component._debugOwner;
        const parentDefaultTheme = parentComponent && parentComponent.memoizedProps && parentComponent.memoizedProps.defaultTheme;

        if (parentDefaultTheme && elementToCheck.parentElement) {
          return {
            defaultTheme: parentDefaultTheme,
            rect: elementToCheck.parentElement.getBoundingClientRect()
          };
        }
      }
    }

    elementToCheck = elementToCheck.parentElement;
    currentTraversal++;
  }

  return undefined;
} // based on https://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript


function getHashCode(val) {
  let hash = 0;
  if (val.length === 0) return hash;

  for (let i = 0; i < val.length; i++) {
    // eslint-disable-next-line
    hash = val.charCodeAt(i) + ((hash << 5) - hash); // eslint-disable-next-line

    hash &= hash;
  }

  return hash;
}

function getHSLA(hash) {
  const shortened = hash % 360;
  return `hsla(${shortened}, 90%, 30%, 0.2)`;
}

class ComponentFinder extends React__default.Component {
  constructor(...args) {
    super(...args);
    this.state = {};
    this.currentElementFromPoint = undefined;
    this.throttledOnChange = undefined;

    this.onClick = e => {
      if (!this.props.onChange) return;
      if (!this.state.locatedComponent) return;
      this.props.onChange([{
        defaultTheme: this.state.locatedComponent.defaultTheme
      }]);
      e.preventDefault();
      e.stopPropagation();
    };

    this.onScroll = () => {
      if (!this.state.locatedComponent) return;
      this.setState({
        locatedComponent: undefined
      });
    };
  }

  componentDidMount() {
    this.throttledOnChange = throttle(this.onChange, 50, this);
    window.addEventListener('mousemove', this.throttledOnChange);
    window.addEventListener('click', this.onClick, true);
    window.addEventListener('scroll', this.onScroll);
  }

  componentWillUnmount() {
    window.removeEventListener('mousemove', this.throttledOnChange);
    window.removeEventListener('click', this.onClick, true);
    window.addEventListener('scroll', this.onScroll);
    this.currentElementFromPoint = undefined;
    this.throttledOnChange = undefined;
  }

  onChange(e) {
    const elementFromPoint = document.elementFromPoint(e.clientX, e.clientY);
    if (!elementFromPoint) return;
    if (this.currentElementFromPoint === elementFromPoint) return;
    this.currentElementFromPoint = elementFromPoint;
    const nearestThemableComponent = getNearestThemableComponentForElement(this.currentElementFromPoint);
    requestAnimationFrame(() => {
      this.setState({
        locatedComponent: nearestThemableComponent
      });
    });
  }

  renderOverlay() {
    const {
      locatedComponent
    } = this.state;
    if (!locatedComponent) return null;
    const themeKey = Object.keys(locatedComponent.defaultTheme)[0];
    return /*#__PURE__*/React__default.createElement(falconUi.Box, {
      position: "absolute",
      style: {
        left: locatedComponent.rect.left,
        right: locatedComponent.rect.right,
        top: locatedComponent.rect.top,
        bottom: locatedComponent.rect.bottom,
        height: locatedComponent.rect.height,
        width: locatedComponent.rect.width,
        backgroundColor: getHSLA(getHashCode(themeKey))
      },
      __source: {
        fileName: _jsxFileName$1,
        lineNumber: 165,
        columnNumber: 7
      }
    }, /*#__PURE__*/React__default.createElement(falconUi.Box, {
      bg: "black",
      position: "absolute",
      bottom: "100%",
      fontSize: "sm",
      px: "sm",
      py: "xs",
      color: "white",
      __source: {
        fileName: _jsxFileName$1,
        lineNumber: 177,
        columnNumber: 9
      }
    }, themeKey));
  }

  render() {
    return /*#__PURE__*/React__default.createElement(falconUi.Portal, {
      __source: {
        fileName: _jsxFileName$1,
        lineNumber: 186,
        columnNumber: 7
      }
    }, /*#__PURE__*/React__default.createElement(falconUi.Box, {
      position: "fixed",
      top: "0",
      left: "0",
      css: {
        pointerEvents: 'none',
        height: 100,
        width: 100,
        zIndex: 10000
      },
      __source: {
        fileName: _jsxFileName$1,
        lineNumber: 187,
        columnNumber: 9
      }
    }, this.renderOverlay()));
  }

}

var _jsxFileName$2 = "/home/vsts/work/1/s/packages/falcon-theme-editor/src/Tabs.tsx";
const Tabs = props => {
  const {
    items,
    active,
    onChange
  } = props;
  return /*#__PURE__*/React__default.createElement(falconUi.FlexLayout, {
    pr: "sm",
    justifyContent: "space-between",
    css: {
      textAlign: 'center'
    },
    __source: {
      fileName: _jsxFileName$2,
      lineNumber: 18,
      columnNumber: 5
    }
  }, items.map(item => /*#__PURE__*/React__default.createElement(falconUi.Box, {
    key: item.key,
    css: {
      cursor: 'pointer'
    },
    onClick: () => onChange(item.key),
    __source: {
      fileName: _jsxFileName$2,
      lineNumber: 20,
      columnNumber: 9
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.Icon, {
    src: item.key,
    stroke: item.key === active ? 'primary' : 'black',
    fill: item.key === active ? 'primary' : 'black',
    transitionTimingFunction: "easeIn",
    transitionDuration: "short",
    css: {
      strokeWidth: 2,
      transitionProperty: 'all'
    },
    __source: {
      fileName: _jsxFileName$2,
      lineNumber: 21,
      columnNumber: 11
    }
  }), /*#__PURE__*/React__default.createElement(falconUi.Text, {
    fontSize: "xs",
    color: item.key === active ? 'primary' : 'black',
    __source: {
      fileName: _jsxFileName$2,
      lineNumber: 29,
      columnNumber: 11
    }
  }, item.name))));
};

var _jsxFileName$3 = "/home/vsts/work/1/s/packages/falcon-theme-editor/src/ThemePropsEditor.tsx";

const EditorSection = ({
  theme,
  section,
  onChange,
  onFontChange
}) => /*#__PURE__*/React__default.createElement(React__default.Fragment, null, Object.keys(theme[section]).map(themeProp => {
  const meta = themeMeta[section];
  if (!meta) return null;
  return /*#__PURE__*/React__default.createElement(falconUi.GridLayout, {
    alignItems: "center",
    gridGap: "xs",
    mb: "xs",
    gridTemplateColumns: meta.input.type === 'dropdown' ? '50px auto 1.8fr 20px' : '1.1fr auto 1.8fr 35px',
    key: themeProp,
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 52,
      columnNumber: 9
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.Text, {
    p: "xs",
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 59,
      columnNumber: 11
    }
  }, `"${themeProp}"`), meta.input.type === 'number' && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(falconUi.NumberInput, {
    value: theme[section][themeProp],
    min: meta.input.min,
    max: meta.input.max,
    step: meta.input.step,
    onChange: onChange(section, themeProp, true),
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 63,
      columnNumber: 15
    }
  }), /*#__PURE__*/React__default.createElement(falconUi.RangeInput, {
    value: theme[section][themeProp],
    min: meta.input.min,
    max: meta.input.max,
    step: meta.input.step,
    onChange: onChange(section, themeProp, true),
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 71,
      columnNumber: 15
    }
  }), /*#__PURE__*/React__default.createElement(falconUi.Text, {
    p: "none",
    ml: "xs",
    fontSize: "sm",
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 78,
      columnNumber: 15
    }
  }, "px")), meta.input.type === 'dropdown' && /*#__PURE__*/React__default.createElement(falconUi.Dropdown, {
    onChange: onFontChange(themeProp),
    gridColumn: "span 3",
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 84,
      columnNumber: 13
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.DropdownLabel, {
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 85,
      columnNumber: 15
    }
  }, theme[section][themeProp]), /*#__PURE__*/React__default.createElement(falconUi.DropdownMenu, {
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 86,
      columnNumber: 15
    }
  }, fonts.map(font => /*#__PURE__*/React__default.createElement(falconUi.DropdownMenuItem, {
    key: font.value,
    value: font,
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 88,
      columnNumber: 19
    }
  }, `${font.value} ${font.google ? ' - (Google Font)' : ''}`)))), meta.input.type === 'color' && /*#__PURE__*/React__default.createElement(falconUi.Input, {
    onChange: onChange(section, themeProp),
    type: "color",
    gridColumn: "span 2",
    value: theme[section][themeProp],
    css: {
      padding: 0,
      width: 60,
      borderRadius: 0,
      border: 'none'
    },
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 96,
      columnNumber: 13
    }
  }), meta.input.type === 'text' && /*#__PURE__*/React__default.createElement(falconUi.Input, {
    onChange: onChange(section, themeProp),
    gridColumn: "span 3",
    type: "text",
    value: theme[section][themeProp],
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 111,
      columnNumber: 13
    }
  }));
}));

const ThemePropsEditor = ({
  openPanels,
  toggleOpenPanel,
  theme,
  onChange,
  onFontChange
}) => /*#__PURE__*/React__default.createElement(falconUi.GridLayout, {
  gridGap: "xs",
  __source: {
    fileName: _jsxFileName$3,
    lineNumber: 131,
    columnNumber: 3
  }
}, Object.keys(themeCategories).map(categoryKey => {
  const category = themeCategories[categoryKey];
  return /*#__PURE__*/React__default.createElement(falconUi.Details, {
    key: category.name,
    open: openPanels[categoryKey],
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 135,
      columnNumber: 9
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.Summary, {
    onClick: e => {
      e.preventDefault();
      toggleOpenPanel(categoryKey);
    },
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 136,
      columnNumber: 11
    }
  }, category.name), openPanels[categoryKey] && /*#__PURE__*/React__default.createElement(falconUi.DetailsContent, {
    pr: "xs",
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 146,
      columnNumber: 13
    }
  }, category.themeSections.length === 1 && /*#__PURE__*/React__default.createElement(EditorSection, {
    section: category.themeSections[0],
    theme: theme,
    onChange: onChange,
    onFontChange: onFontChange,
    __source: {
      fileName: _jsxFileName$3,
      lineNumber: 148,
      columnNumber: 17
    }
  }), category.themeSections.length > 1 && category.themeSections.map(section => {
    const key = categoryKey + section;
    return /*#__PURE__*/React__default.createElement(falconUi.Details, {
      mb: "sm",
      key: key,
      open: openPanels[key],
      __source: {
        fileName: _jsxFileName$3,
        lineNumber: 161,
        columnNumber: 21
      }
    }, /*#__PURE__*/React__default.createElement(falconUi.Summary, {
      onClick: e => {
        e.preventDefault();
        toggleOpenPanel(key);
      },
      __source: {
        fileName: _jsxFileName$3,
        lineNumber: 162,
        columnNumber: 23
      }
    }, section), /*#__PURE__*/React__default.createElement(falconUi.DetailsContent, {
      mr: "xs",
      __source: {
        fileName: _jsxFileName$3,
        lineNumber: 170,
        columnNumber: 23
      }
    }, /*#__PURE__*/React__default.createElement(EditorSection, {
      section: section,
      theme: theme,
      onChange: onChange,
      onFontChange: onFontChange,
      __source: {
        fileName: _jsxFileName$3,
        lineNumber: 171,
        columnNumber: 25
      }
    })));
  })));
}));

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

var _jsxFileName$4 = "/home/vsts/work/1/s/packages/falcon-theme-editor/src/editortheme.tsx";
const editorTheme = falconUi.createTheme({
  components: {
    summary: {
      bg: 'secondaryLight',
      borderRadius: 'round'
    },
    button: {
      borderRadius: 'round'
    }
  },
  icons: {
    presets: {
      icon: props => /*#__PURE__*/React__default.createElement("svg", _extends({
        viewBox: "0 0 50 48"
      }, props, {
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 17,
          columnNumber: 9
        }
      }), /*#__PURE__*/React__default.createElement("path", {
        d: "M45.188,19.75c0.138,0,0.25-0.112,0.25-0.25V4.875c0-0.138-0.112-0.25-0.25-0.25H30.563c-0.138,0-0.25,0.112-0.25,0.25  v7.969H19.688V4.875c0-0.138-0.112-0.25-0.25-0.25H4.813c-0.138,0-0.25,0.112-0.25,0.25V19.5c0,0.138,0.112,0.25,0.25,0.25h8.031  v10.5H4.813c-0.138,0-0.25,0.112-0.25,0.25v14.625c0,0.138,0.112,0.25,0.25,0.25h14.625c0.138,0,0.25-0.112,0.25-0.25v-7.969h10.625  v7.969c0,0.138,0.112,0.25,0.25,0.25h14.625c0.138,0,0.25-0.112,0.25-0.25V30.5c0-0.138-0.112-0.25-0.25-0.25h-8.031v-10.5H45.188z   M30.813,5.125h14.125V19.25h-7.781v-6.156c0-0.138-0.112-0.25-0.25-0.25h-6.094V5.125z M13.344,36.656V13.344h23.313v6.154  c0,0.001-0.001,0.001-0.001,0.002s0.001,0.001,0.001,0.002v10.996c0,0-0.001,0.001-0.001,0.002s0.001,0.002,0.001,0.002v6.154  H13.344z M5.063,19.25V5.125h14.125v7.719h-6.094c-0.138,0-0.25,0.112-0.25,0.25v6.156H5.063z M19.188,44.875H5.063V30.75h7.781  v6.156c0,0.138,0.112,0.25,0.25,0.25h6.094V44.875z M44.938,30.75v14.125H30.813v-7.719h6.094c0.138,0,0.25-0.112,0.25-0.25V30.75  H44.938z",
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 18,
          columnNumber: 11
        }
      }))
    },
    component: {
      icon: props => /*#__PURE__*/React__default.createElement("svg", _extends({
        viewBox: "5 0 90 90"
      }, props, {
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 24,
          columnNumber: 9
        }
      }), /*#__PURE__*/React__default.createElement("path", {
        d: "M17.6,63.9c0,1.5,0.7,2.8,1.8,3.7L47.1,89c0.9,0.7,1.9,1,2.9,1s2-0.3,2.9-1l27.7-21.4c1.2-0.9,1.8-2.3,1.8-3.7    c0-1.5-0.7-2.8-1.8-3.7L76.4,57l4.2-3.2c1.2-0.9,1.8-2.3,1.8-3.7c0-1.5-0.7-2.8-1.8-3.7L76.4,43l4.2-3.2c1.2-0.9,1.8-2.3,1.8-3.7    s-0.7-2.8-1.8-3.7L52.9,11c-1.6-1.3-4.1-1.3-5.8,0L19.4,32.3c-1.2,0.9-1.8,2.3-1.8,3.7s0.7,2.8,1.8,3.7l4.2,3.2l-4.2,3.2    c-1.2,0.9-1.8,2.3-1.8,3.7c0,1.5,0.7,2.8,1.8,3.7l4.2,3.2l-4.2,3.2C18.3,61.1,17.6,62.4,17.6,63.9z M21.6,36.1    c0-0.1,0-0.4,0.3-0.6l27.7-21.4C49.7,14,49.9,14,50,14s0.3,0,0.4,0.2l27.7,21.4c0.2,0.2,0.3,0.4,0.3,0.6s0,0.4-0.3,0.6L50.4,58    c-0.3,0.3-0.6,0.3-0.9,0L21.9,36.7C21.6,36.5,21.6,36.2,21.6,36.1z M21.6,50c0-0.1,0-0.4,0.3-0.6l5-3.9l20.2,15.6    c0.8,0.6,1.9,1,2.9,1s2.1-0.4,2.9-1l20.2-15.6l5,3.9c0.2,0.2,0.3,0.4,0.3,0.6s0,0.4-0.3,0.6l-6.2,4.8c0,0-0.1,0-0.1,0.1L50.4,71.9    c-0.3,0.2-0.6,0.2-0.9,0L28.2,55.5c0,0-0.1,0-0.1-0.1l-6.2-4.8C21.6,50.4,21.6,50.1,21.6,50z M21.9,63.3l5-3.9l20.2,15.6    c0.9,0.7,1.9,1,2.9,1s2-0.3,2.9-1l20.2-15.6l5,3.9c0.2,0.2,0.3,0.4,0.3,0.6c0,0.1,0,0.4-0.3,0.6L50.4,85.9c-0.3,0.2-0.6,0.2-0.9,0    L21.9,64.5c-0.2-0.2-0.3-0.4-0.3-0.6C21.6,63.8,21.6,63.5,21.9,63.3z",
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 25,
          columnNumber: 11
        }
      }))
    },
    finder: {
      icon: props => /*#__PURE__*/React__default.createElement("svg", _extends({
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 24 24"
      }, props, {
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 31,
          columnNumber: 9
        }
      }), /*#__PURE__*/React__default.createElement("path", {
        d: "M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3",
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 32,
          columnNumber: 11
        }
      })),
      css: {
        cursor: 'pointer',
        fill: 'none'
      }
    },
    download: {
      icon: props => /*#__PURE__*/React__default.createElement("svg", _extends({
        viewBox: "10 0 85 85"
      }, props, {
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 42,
          columnNumber: 9
        }
      }), /*#__PURE__*/React__default.createElement("path", {
        d: "M22.25,76.813v4h55.5v-4H22.25z M72.98,45.41l-2.828-2.828L52,60.734V21.188h-4v39.547L29.848,42.582L27.02,45.41L50,68.391  L72.98,45.41z",
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 43,
          columnNumber: 11
        }
      })),
      css: {
        cursor: 'pointer',
        fill: 'none'
      }
    },
    copy: {
      icon: props => /*#__PURE__*/React__default.createElement("svg", _extends({
        viewBox: "0 0 24 24",
        strokeWidth: 2
      }, props, {
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 53,
          columnNumber: 9
        }
      }), /*#__PURE__*/React__default.createElement("rect", {
        x: "9",
        y: "9",
        width: "13",
        height: "13",
        rx: "2",
        ry: "2",
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 54,
          columnNumber: 11
        }
      }), /*#__PURE__*/React__default.createElement("path", {
        d: "M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1",
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 55,
          columnNumber: 11
        }
      })),
      fill: 'transparent'
    },
    theme: {
      icon: props => /*#__PURE__*/React__default.createElement("svg", _extends({
        viewBox: "0 0 100 100"
      }, props, {
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 62,
          columnNumber: 9
        }
      }), /*#__PURE__*/React__default.createElement("path", {
        d: "M12,52H30v7H48V52H88V48H48V41H30v7H12Zm22-7H44V55H34Z",
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 63,
          columnNumber: 11
        }
      }), /*#__PURE__*/React__default.createElement("path", {
        d: "M12,22H49v7H67V22H88V18H67V11H49v7H12Zm41-7H63V25H53Z",
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 64,
          columnNumber: 11
        }
      }), /*#__PURE__*/React__default.createElement("path", {
        d: "M12,82H49v7H67V82H88V78H67V71H49v7H12Zm41-7H63V85H53Z",
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 65,
          columnNumber: 11
        }
      }))
    },
    dropdownArrowDown: {
      icon: props => /*#__PURE__*/React__default.createElement("svg", _extends({
        viewBox: "0 0 24 24"
      }, props, {
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 72,
          columnNumber: 9
        }
      }), /*#__PURE__*/React__default.createElement("polyline", {
        points: "6 9 12 15 18 9",
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 73,
          columnNumber: 11
        }
      })),
      stroke: 'primary',
      fill: 'transparent',
      size: 'md',
      ml: 'xs'
    },
    dropdownArrowUp: {
      icon: props => /*#__PURE__*/React__default.createElement("svg", _extends({
        viewBox: "0 0 24 24"
      }, props, {
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 84,
          columnNumber: 9
        }
      }), /*#__PURE__*/React__default.createElement("polyline", {
        points: "18 15 12 9 6 15",
        __source: {
          fileName: _jsxFileName$4,
          lineNumber: 85,
          columnNumber: 11
        }
      })),
      stroke: 'primary',
      fill: 'transparent',
      size: 'md',
      ml: 'xs'
    }
  }
});

var _jsxFileName$5 = "/home/vsts/work/1/s/packages/falcon-theme-editor/src/ThemeDownloader.tsx";
const CREATE_THEME_IMPORT = "import { createTheme } from '@deity/falcon-ui';";

function getThemeCustomizations(initialTheme, currentTheme) {
  const themeDiff = deepObjectDiff.diff(initialTheme, currentTheme);
  return JSON.stringify(themeDiff, null, 2);
}

function withExports(customizationsSerialized) {
  return `${CREATE_THEME_IMPORT}\n\nexport const theme = createTheme(${customizationsSerialized});`;
}

function copyToClipboard(serializedCustomizations) {
  window.navigator.clipboard.writeText(withExports(serializedCustomizations));
}

function download(serializedCustomizations) {
  const customizations = withExports(serializedCustomizations);
  const data = `data:text/json;charset=utf-8,${encodeURIComponent(customizations)}`;
  const downloader = document.createElement('a');
  downloader.setAttribute('href', data);
  downloader.setAttribute('download', 'theme.js');
  downloader.click();
}

const ThemeDownloader = ({
  initialTheme,
  currentTheme
}) => {
  const serializedCustomizations = getThemeCustomizations(initialTheme, currentTheme);

  if (serializedCustomizations === '{}') {
    return /*#__PURE__*/React__default.createElement(falconUi.Text, {
      fontSize: "md",
      __source: {
        fileName: _jsxFileName$5,
        lineNumber: 40,
        columnNumber: 12
      }
    }, "Nothing to download yet, try making few customizations first!");
  }

  return /*#__PURE__*/React__default.createElement(falconUi.FlexLayout, {
    css: {
      height: '100%'
    },
    flexDirection: "column",
    __source: {
      fileName: _jsxFileName$5,
      lineNumber: 44,
      columnNumber: 5
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.FlexLayout, {
    mb: "sm",
    __source: {
      fileName: _jsxFileName$5,
      lineNumber: 45,
      columnNumber: 7
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.Button, {
    mr: "xs",
    flex: "1",
    onClick: () => copyToClipboard(serializedCustomizations),
    __source: {
      fileName: _jsxFileName$5,
      lineNumber: 46,
      columnNumber: 9
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.Icon, {
    stroke: "white",
    src: "copy",
    size: "md",
    mr: "sm",
    __source: {
      fileName: _jsxFileName$5,
      lineNumber: 47,
      columnNumber: 11
    }
  }), "Copy"), /*#__PURE__*/React__default.createElement(falconUi.Button, {
    ml: "xs",
    flex: "1",
    onClick: () => download(serializedCustomizations),
    __source: {
      fileName: _jsxFileName$5,
      lineNumber: 51,
      columnNumber: 9
    }
  }, /*#__PURE__*/React__default.createElement(falconUi.Icon, {
    size: "md",
    mr: "sm",
    stroke: "white",
    css: {
      strokeWidth: '4'
    },
    src: "download",
    __source: {
      fileName: _jsxFileName$5,
      lineNumber: 52,
      columnNumber: 11
    }
  }), "Download")), /*#__PURE__*/React__default.createElement(falconUi.Input, {
    as: "textarea",
    flex: "1",
    spellCheck: false,
    readOnly: true,
    value: serializedCustomizations,
    __source: {
      fileName: _jsxFileName$5,
      lineNumber: 56,
      columnNumber: 7
    }
  }));
};

var _jsxFileName$6 = "/home/vsts/work/1/s/packages/falcon-theme-editor/src/ThemeEditorState.tsx";
const ThemeStateContext = /*#__PURE__*/React__default.createContext({});
class ThemeEditorState extends React__default.Component {
  constructor(props) {
    super(props);

    this.setActiveTab = tabKey => {
      this.setState({
        activeTab: tabKey
      });
    };

    this.setActivePreset = presetKey => {
      this.setState(state => {
        const tabs = Object.assign({}, state.tabs);
        const presets = Object.assign({}, Object.assign({}, tabs.presets));
        presets.active = presetKey;
        tabs.presets = presets;
        return {
          tabs
        };
      });
    };

    this.updateTheme = (themeDiff, {
      useInitial = false
    } = {}) => {
      requestAnimationFrame(() => {
        this.setState(state => {
          const themeBase = useInitial ? this.props.initial : state.activeTheme;
          return {
            activeTheme: falconUi.mergeThemes(themeBase, themeDiff)
          };
        });
      });
    };

    this.toggleFinder = () => {
      this.setState(state => ({
        finderActive: !state.finderActive
      }));
    };

    this.toggleVisibility = () => {
      this.setState(state => ({
        visible: !state.visible
      }));
    };

    this.selectComponents = components => {
      requestAnimationFrame(() => {
        this.setState(state => {
          const tabs = Object.assign({}, state.tabs);
          tabs.component = {
            selectedComponents: components
          };
          return {
            tabs,
            activeTab: 'component',
            visible: true,
            finderActive: false
          };
        });
      });
    };

    this.toggleOpenPanel = key => {
      this.setState(state => {
        const tabs = Object.assign({}, state.tabs);
        const openPanels = Object.assign({}, Object.assign({}, tabs.theme).openPanels);
        openPanels[key] = !openPanels[key];
        tabs.theme.openPanels = openPanels;
        return {
          tabs
        };
      });
    };

    this.openThemePropsPanel = (panel, subpanel) => {
      this.setState(state => {
        const tabs = Object.assign({}, state.tabs);
        const openPanels = {
          [panel]: true
        };

        if (subpanel) {
          openPanels[panel + subpanel] = true;
        }

        tabs.theme.openPanels = openPanels;
        return {
          tabs,
          activeTab: 'theme',
          visible: true
        };
      });
    };

    this.state = {
      activeTheme: props.initial,
      // eslint-disable-next-line react/no-unused-state
      initialTheme: props.initial,
      visible: false,
      finderActive: false,
      activeTab: 'theme',
      tabs: {
        theme: {
          openPanels: {}
        },
        component: {
          selectedComponents: []
        },
        presets: {
          active: 'Deity Green'
        }
      },
      presets: props.presets
    };
  }

  render() {
    return /*#__PURE__*/React__default.createElement(ThemeStateContext.Provider, {
      value: {
        selectComponents: this.selectComponents,
        openThemePropsPanel: this.openThemePropsPanel,
        toggleFinder: this.toggleFinder,
        finderActive: this.state.finderActive,
        presets: this.state.presets
      },
      __source: {
        fileName: _jsxFileName$6,
        lineNumber: 214,
        columnNumber: 7
      }
    }, this.props.children({
      theme: this.state.activeTheme,
      updateTheme: this.updateTheme,
      initialTheme: this.props.initial,
      selectComponents: this.selectComponents,
      toggleVisibility: this.toggleVisibility,
      toggleFinder: this.toggleFinder,
      visible: this.state.visible,
      finderActive: this.state.finderActive,
      activeTab: this.state.activeTab,
      setActiveTab: this.setActiveTab,
      tabs: this.state.tabs,
      toggleOpenPanel: this.toggleOpenPanel,
      setActivePreset: this.setActivePreset
    }));
  }

}
ThemeEditorState.defaultProps = {
  presets: []
};

ThemeEditorState.getDerivedStateFromProps = (props, state) => {
  if (props.initial !== state.initialTheme) {
    return {
      activeTheme: props.initial,
      initialTheme: props.initial
    };
  }

  return null;
};

var _jsxFileName$7 = "/home/vsts/work/1/s/packages/falcon-theme-editor/src/ThemePresets.tsx";
const ThemePresets = ({
  activePreset,
  onPresetChange
}) => {
  const {
    presets
  } = React.useContext(ThemeStateContext);
  return /*#__PURE__*/React__default.createElement(falconUi.Group, {
    my: "md",
    mx: "md",
    display: "flex",
    __source: {
      fileName: _jsxFileName$7,
      lineNumber: 18,
      columnNumber: 5
    }
  }, presets.map(preset => /*#__PURE__*/React__default.createElement(falconUi.Button, {
    key: preset.name,
    variant: preset.name === activePreset ? '' : 'secondary',
    flex: "1",
    height: "xxl",
    onClick: onPresetChange(preset),
    __source: {
      fileName: _jsxFileName$7,
      lineNumber: 20,
      columnNumber: 9
    }
  }, preset.name)));
};

var _jsxFileName$8 = "/home/vsts/work/1/s/packages/falcon-theme-editor/src/index.tsx";
class ThemeEditor extends React__default.Component {
  constructor(...args) {
    super(...args);

    this.tabs = enableComponent => {
      return [{
        name: 'Theme',
        key: 'theme'
      }, enableComponent ? {
        name: 'Component',
        key: 'component'
      } : undefined, {
        name: 'Presets',
        key: 'presets'
      }, {
        name: 'Download',
        key: 'download'
      }].filter(x => x);
    };

    this.onChange = (themeKey, propName, isNumber) => e => {
      this.props.updateTheme({
        [themeKey]: {
          [propName]: isNumber ? +e.target.value : e.target.value
        }
      });
    };

    this.onFontChange = fontKind => fontOption => {
      this.props.updateTheme({
        fonts: {
          [fontKind]: fontOption.value
        }
      });

      if (fontOption.google) {
        this.loadGoogleFont(fontOption.google);
      }
    };

    this.onPresetChange = preset => () => {
      requestAnimationFrame(() => {
        this.props.updateTheme(preset.theme, {
          useInitial: true
        });
      });
      this.props.setActivePreset(preset.name);

      if (!preset.theme.fonts) {
        return;
      }

      const newFont = preset.theme.fonts.sans;
      const potentiallFontToLoad = fonts.filter(font => font.value === newFont)[0];

      if (potentiallFontToLoad && potentiallFontToLoad.google) {
        this.loadGoogleFont(potentiallFontToLoad.google);
      }
    };

    this.onComponentThemeChange = (themeKey, variantKey) => (key, value) => {
      if (variantKey) {
        this.props.updateTheme({
          components: {
            [themeKey]: {
              variants: {
                [variantKey]: {
                  [key]: value
                }
              }
            }
          }
        });
      } else {
        this.props.updateTheme({
          components: {
            [themeKey]: {
              [key]: value
            }
          }
        });
      }
    };
  }

  loadGoogleFont(font) {
    // require is inline as webfontloader does not work server side
    // https://github.com/typekit/webfontloader/issues/383
    const WebFontLoader = require('webfontloader');

    WebFontLoader.load({
      google: {
        families: [font]
      }
    });
  }

  render() {
    const {
      visible,
      toggleVisibility,
      toggleFinder,
      setActiveTab,
      activeTab,
      finderActive,
      theme,
      tabs,
      toggleOpenPanel,
      initialTheme,
      side,
      enableComponentFinder
    } = this.props;
    return /*#__PURE__*/React__default.createElement(falconUi.ThemeProvider, {
      theme: editorTheme,
      withoutRoot: true,
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 128,
        columnNumber: 7
      }
    }, /*#__PURE__*/React__default.createElement(falconUi.Sidebar, {
      as: falconUi.Portal,
      visible: visible,
      side: side,
      css: {
        position: 'fixed',
        overflowX: 'inherit'
      },
      boxShadow: "subtle",
      bg: "white",
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 129,
        columnNumber: 9
      }
    }, /*#__PURE__*/React__default.createElement(falconUi.FlexLayout, {
      flexDirection: "column",
      flexWrap: "nowrap",
      py: "sm",
      pl: "sm",
      css: {
        width: {
          xs: '75vw',
          sm: 480
        }
      },
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 137,
        columnNumber: 11
      }
    }, /*#__PURE__*/React__default.createElement(Tabs, {
      items: this.tabs(this.props.enableComponentFinder),
      onChange: setActiveTab,
      active: activeTab,
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 149,
        columnNumber: 13
      }
    }), /*#__PURE__*/React__default.createElement(falconUi.Divider, {
      my: "sm",
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 151,
        columnNumber: 13
      }
    }), /*#__PURE__*/React__default.createElement(falconUi.Box, {
      flex: "1",
      css: props => ({
        overflowY: 'auto',
        paddingRight: 10,
        marginRight: 6,
        '::-webkit-scrollbar': {
          width: 3,
          backgroundColor: props.theme.colors.secondaryLight,
          borderRadius: props.theme.borderRadius.medium
        },
        '::-webkit-scrollbar-thumb': {
          borderRadius: props.theme.borderRadius.medium,
          backgroundColor: props.theme.colors.secondaryDark
        }
      }),
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 153,
        columnNumber: 13
      }
    }, activeTab === 'theme' && /*#__PURE__*/React__default.createElement(ThemePropsEditor, {
      openPanels: tabs.theme.openPanels,
      toggleOpenPanel: toggleOpenPanel,
      onChange: this.onChange,
      onFontChange: this.onFontChange,
      theme: theme,
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 172,
        columnNumber: 17
      }
    }), activeTab === 'component' && tabs.component.selectedComponents.length > 0 && /*#__PURE__*/React__default.createElement(ComponentsEditor, {
      selectedComponents: tabs.component.selectedComponents,
      onComponentThemeChange: this.onComponentThemeChange,
      theme: theme,
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 182,
        columnNumber: 17
      }
    }), activeTab === 'component' && tabs.component.selectedComponents.length === 0 && /*#__PURE__*/React__default.createElement(falconUi.Box, {
      fontSize: "md",
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 190,
        columnNumber: 17
      }
    }, "There are no components selected currenty, ", /*#__PURE__*/React__default.createElement("br", {
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 191,
        columnNumber: 62
      }
    }), "use component finder", /*#__PURE__*/React__default.createElement(falconUi.Icon, {
      onClick: toggleFinder,
      mx: "sm",
      stroke: finderActive ? 'primary' : 'black',
      src: "finder",
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 193,
        columnNumber: 19
      }
    }), "to select one."), activeTab === 'download' && /*#__PURE__*/React__default.createElement(ThemeDownloader, {
      currentTheme: theme,
      initialTheme: initialTheme,
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 198,
        columnNumber: 44
      }
    }), activeTab === 'presets' && /*#__PURE__*/React__default.createElement(ThemePresets, {
      activePreset: tabs.presets.active,
      onPresetChange: this.onPresetChange,
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 201,
        columnNumber: 17
      }
    }))), /*#__PURE__*/React__default.createElement(falconUi.Box, {
      position: "absolute",
      [side]: '100%',
      top: "calc(50% - 35px)",
      display: "flex",
      bg: "white",
      alignItems: "center",
      justifyContent: "center",
      boxShadow: "subtle",
      flexDirection: "column",
      p: "sm",
      css: side === 'right' ? {
        borderTopLeftRadius: 8,
        borderBottomLeftRadius: 8,
        boxShadow: '-2px 5px 5px rgba(0,0,0,.1)'
      } : {
        borderTopRightRadius: 8,
        borderBottomRightRadius: 8,
        boxShadow: '2px 5px 5px rgba(0,0,0,.1)'
      },
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 206,
        columnNumber: 11
      }
    }, /*#__PURE__*/React__default.createElement(falconUi.Box, {
      title: `${visible ? 'Close' : 'Open'} theme editor`,
      css: {
        cursor: 'pointer'
      },
      onClick: toggleVisibility,
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 231,
        columnNumber: 13
      }
    }, /*#__PURE__*/React__default.createElement(falconUi.Icon, {
      src: "theme",
      fill: visible ? 'primary' : 'black',
      stroke: visible ? 'primary' : 'black',
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 236,
        columnNumber: 15
      }
    })), enableComponentFinder && /*#__PURE__*/React__default.createElement(React__default.Fragment, null, /*#__PURE__*/React__default.createElement(falconUi.Divider, {
      m: "xs",
      css: {
        width: '100%'
      },
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 240,
        columnNumber: 17
      }
    }), /*#__PURE__*/React__default.createElement(falconUi.Box, {
      title: "Select a themable component in the page to inspect its theme",
      onClick: toggleFinder,
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 241,
        columnNumber: 17
      }
    }, /*#__PURE__*/React__default.createElement(falconUi.Icon, {
      stroke: finderActive ? 'primary' : 'black',
      src: "finder",
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 242,
        columnNumber: 19
      }
    }))))), finderActive && /*#__PURE__*/React__default.createElement(ComponentFinder, {
      onChange: this.props.selectComponents,
      __source: {
        fileName: _jsxFileName$8,
        lineNumber: 248,
        columnNumber: 26
      }
    }));
  }

}
ThemeEditor.defaultProps = {
  enableComponentFinder: true,
  side: 'right'
};

exports.ThemeEditor = ThemeEditor;
exports.ThemeEditorState = ThemeEditorState;
exports.ThemeStateContext = ThemeStateContext;
exports.themeCategories = themeCategories;
exports.themeMeta = themeMeta;
//# sourceMappingURL=falcon-theme-editor.cjs.js.map
