'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var React = _interopDefault(require('react'));

class PaymentPluginModel extends React.Component {}
PaymentPluginModel.icon = void 0;

class SimplePayment extends PaymentPluginModel {
  componentDidMount() {
    this.props.onPaymentDetailsReady();
  }

  render() {
    return this.props.children ? this.props.children : null;
  }

}

var _jsxFileName = "/home/vsts/work/1/s/packages/falcon-payment-plugin/src/TestAdditionalPaymentStep.tsx";
class TestAdditionalPaymentStep extends React.Component {
  constructor(props) {
    super(props);
    this.form = void 0;
    this.form = /*#__PURE__*/React.createRef();
  }

  componentDidMount() {
    const form = this.form.current;
    const {
      method,
      action
    } = form;

    if (method.toLowerCase() === 'get') {
      // Delay the redirect a little bit, to give the ConfirmLeavePrompt time to remove the beforeunload handler
      setTimeout(() => {
        window.location.href = action;
      }, 1500);
    } else {
      form.submit();
    }
  }

  render() {
    const {
      url,
      method = 'POST',
      fields
    } = this.props;
    return /*#__PURE__*/React.createElement("form", {
      ref: this.form,
      method: method,
      action: url,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 39,
        columnNumber: 7
      }
    }, (fields || []).map(field => /*#__PURE__*/React.createElement("input", {
      key: field.name,
      type: "hidden",
      name: field.name,
      value: field.value,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 41,
        columnNumber: 11
      }
    })));
  }

}

exports.PaymentPluginModel = PaymentPluginModel;
exports.SimplePayment = SimplePayment;
exports.TestAdditionalPaymentStep = TestAdditionalPaymentStep;
//# sourceMappingURL=falcon-payment-plugin.cjs.js.map
