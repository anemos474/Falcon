import { FieldConfig } from 'formik';
import { TranslationFunction } from '@deity/falcon-i18n';
export declare type ValidatorProps = {
    name: string;
    label?: string;
    value?: any;
    formI18nId?: string;
    t: TranslationFunction;
};
export interface IValidator {
    (props: ValidatorProps): ValidationError;
}
export declare type ValidationError = undefined | string | I18nValidationError;
export declare type I18nValidationError = {
    errorI18nId: string;
} & {
    [key in string]: any;
};
export declare function isI18nValidationError(error: ValidationError): error is I18nValidationError;
export declare const getErrorI18nId: (error: string, name: string, formI18nId?: string) => string | string[];
export interface IFieldValidator {
    (validators: IValidator[], validatorProps: Omit<ValidatorProps, 'value'>): FieldConfig['validate'];
}
export declare const fieldValidator: IFieldValidator;
//# sourceMappingURL=IValidator.d.ts.map