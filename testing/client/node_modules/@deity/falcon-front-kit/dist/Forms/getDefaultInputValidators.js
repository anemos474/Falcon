"use strict";

var _interopRequireWildcard = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.getDefaultInputValidators = getDefaultInputValidators;

var validators = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("./validators"));

/**
 * Provides default value validators based on HTML input type
 * @see https://www.w3schools.com/html/html_form_input_types.asp
 * @param input
 */
function getDefaultInputValidators(input) {
  var type = input.type,
      required = input.required,
      validate = input.validate;
  var anyValidatorsDefined = !!validate;
  var result = anyValidatorsDefined ? validate : [];

  if (required) {
    result.unshift(validators.requiredValidator);
  }

  if (anyValidatorsDefined) {
    return result;
  }

  switch (type) {
    case 'password':
      result.push(validators.lengthValidator(8), validators.passwordValidator);
      break;

    case 'email':
      result.push(validators.emailValidator);
      break;

    case 'text':
      {
        var _input$min = input.min,
            min = _input$min === void 0 ? 0 : _input$min,
            max = input.max;
        result.push(validators.lengthValidator(parseInt(min.toString(), 10), max ? parseInt(max.toString(), 10) : undefined));
      }
      break;

    case 'number':
      {
        var _input$min2 = input.min,
            _min = _input$min2 === void 0 ? Number.MIN_SAFE_INTEGER : _input$min2,
            _input$max = input.max,
            _max = _input$max === void 0 ? Number.MAX_SAFE_INTEGER : _input$max;

        result.push(validators.rangeValidator(parseInt(_min.toString(), 10), parseInt(_max.toString(), 10)));
      }
      break;

    default:
      break;
  }

  return result;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Gb3Jtcy9nZXREZWZhdWx0SW5wdXRWYWxpZGF0b3JzLnRzIl0sIm5hbWVzIjpbImdldERlZmF1bHRJbnB1dFZhbGlkYXRvcnMiLCJpbnB1dCIsInR5cGUiLCJyZXF1aXJlZCIsInZhbGlkYXRlIiwiYW55VmFsaWRhdG9yc0RlZmluZWQiLCJyZXN1bHQiLCJ1bnNoaWZ0IiwidmFsaWRhdG9ycyIsInJlcXVpcmVkVmFsaWRhdG9yIiwicHVzaCIsImxlbmd0aFZhbGlkYXRvciIsInBhc3N3b3JkVmFsaWRhdG9yIiwiZW1haWxWYWxpZGF0b3IiLCJtaW4iLCJtYXgiLCJwYXJzZUludCIsInRvU3RyaW5nIiwidW5kZWZpbmVkIiwiTnVtYmVyIiwiTUlOX1NBRkVfSU5URUdFUiIsIk1BWF9TQUZFX0lOVEVHRVIiLCJyYW5nZVZhbGlkYXRvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxTQUFTQSx5QkFBVCxDQUNMQyxLQURLLEVBSVM7QUFDZCxNQUFRQyxJQUFSLEdBQXFDRCxLQUFyQyxDQUFRQyxJQUFSO0FBQUEsTUFBY0MsUUFBZCxHQUFxQ0YsS0FBckMsQ0FBY0UsUUFBZDtBQUFBLE1BQXdCQyxRQUF4QixHQUFxQ0gsS0FBckMsQ0FBd0JHLFFBQXhCO0FBQ0EsTUFBTUMsb0JBQW9CLEdBQUcsQ0FBQyxDQUFDRCxRQUEvQjtBQUVBLE1BQU1FLE1BQU0sR0FBR0Qsb0JBQW9CLEdBQUdELFFBQUgsR0FBYyxFQUFqRDs7QUFDQSxNQUFJRCxRQUFKLEVBQWM7QUFDWkcsSUFBQUEsTUFBTSxDQUFDQyxPQUFQLENBQWVDLFVBQVUsQ0FBQ0MsaUJBQTFCO0FBQ0Q7O0FBRUQsTUFBSUosb0JBQUosRUFBMEI7QUFDeEIsV0FBT0MsTUFBUDtBQUNEOztBQUVELFVBQVFKLElBQVI7QUFDRSxTQUFLLFVBQUw7QUFDRUksTUFBQUEsTUFBTSxDQUFDSSxJQUFQLENBQVlGLFVBQVUsQ0FBQ0csZUFBWCxDQUEyQixDQUEzQixDQUFaLEVBQTJDSCxVQUFVLENBQUNJLGlCQUF0RDtBQUNBOztBQUNGLFNBQUssT0FBTDtBQUNFTixNQUFBQSxNQUFNLENBQUNJLElBQVAsQ0FBWUYsVUFBVSxDQUFDSyxjQUF2QjtBQUNBOztBQUNGLFNBQUssTUFBTDtBQUNFO0FBQ0UseUJBQXlCWixLQUF6QixDQUFRYSxHQUFSO0FBQUEsWUFBUUEsR0FBUiwyQkFBYyxDQUFkO0FBQUEsWUFBaUJDLEdBQWpCLEdBQXlCZCxLQUF6QixDQUFpQmMsR0FBakI7QUFFQVQsUUFBQUEsTUFBTSxDQUFDSSxJQUFQLENBQ0VGLFVBQVUsQ0FBQ0csZUFBWCxDQUEyQkssUUFBUSxDQUFDRixHQUFHLENBQUNHLFFBQUosRUFBRCxFQUFpQixFQUFqQixDQUFuQyxFQUF5REYsR0FBRyxHQUFHQyxRQUFRLENBQUNELEdBQUcsQ0FBQ0UsUUFBSixFQUFELEVBQWlCLEVBQWpCLENBQVgsR0FBa0NDLFNBQTlGLENBREY7QUFHRDtBQUNEOztBQUNGLFNBQUssUUFBTDtBQUNFO0FBQ0UsMEJBQXlFakIsS0FBekUsQ0FBUWEsR0FBUjtBQUFBLFlBQVFBLElBQVIsNEJBQWNLLE1BQU0sQ0FBQ0MsZ0JBQXJCO0FBQUEseUJBQXlFbkIsS0FBekUsQ0FBdUNjLEdBQXZDO0FBQUEsWUFBdUNBLElBQXZDLDJCQUE2Q0ksTUFBTSxDQUFDRSxnQkFBcEQ7O0FBRUFmLFFBQUFBLE1BQU0sQ0FBQ0ksSUFBUCxDQUFZRixVQUFVLENBQUNjLGNBQVgsQ0FBMEJOLFFBQVEsQ0FBQ0YsSUFBRyxDQUFDRyxRQUFKLEVBQUQsRUFBaUIsRUFBakIsQ0FBbEMsRUFBd0RELFFBQVEsQ0FBQ0QsSUFBRyxDQUFDRSxRQUFKLEVBQUQsRUFBaUIsRUFBakIsQ0FBaEUsQ0FBWjtBQUNEO0FBQ0Q7O0FBQ0Y7QUFDRTtBQXhCSjs7QUEyQkEsU0FBT1gsTUFBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgdmFsaWRhdG9ycyBmcm9tICcuL3ZhbGlkYXRvcnMnO1xuaW1wb3J0IHsgSVZhbGlkYXRvciB9IGZyb20gJy4vSVZhbGlkYXRvcic7XG5cbi8qKlxuICogUHJvdmlkZXMgZGVmYXVsdCB2YWx1ZSB2YWxpZGF0b3JzIGJhc2VkIG9uIEhUTUwgaW5wdXQgdHlwZVxuICogQHNlZSBodHRwczovL3d3dy53M3NjaG9vbHMuY29tL2h0bWwvaHRtbF9mb3JtX2lucHV0X3R5cGVzLmFzcFxuICogQHBhcmFtIGlucHV0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZhdWx0SW5wdXRWYWxpZGF0b3JzKFxuICBpbnB1dDogUGljazxSZWFjdC5JbnB1dEhUTUxBdHRyaWJ1dGVzPEhUTUxJbnB1dEVsZW1lbnQ+LCAndHlwZScgfCAncmVxdWlyZWQnIHwgJ21pbicgfCAnbWF4Jz4gJiB7XG4gICAgdmFsaWRhdGU/OiBJVmFsaWRhdG9yW107XG4gIH1cbik6IElWYWxpZGF0b3JbXSB7XG4gIGNvbnN0IHsgdHlwZSwgcmVxdWlyZWQsIHZhbGlkYXRlIH0gPSBpbnB1dDtcbiAgY29uc3QgYW55VmFsaWRhdG9yc0RlZmluZWQgPSAhIXZhbGlkYXRlO1xuXG4gIGNvbnN0IHJlc3VsdCA9IGFueVZhbGlkYXRvcnNEZWZpbmVkID8gdmFsaWRhdGUgOiBbXTtcbiAgaWYgKHJlcXVpcmVkKSB7XG4gICAgcmVzdWx0LnVuc2hpZnQodmFsaWRhdG9ycy5yZXF1aXJlZFZhbGlkYXRvcik7XG4gIH1cblxuICBpZiAoYW55VmFsaWRhdG9yc0RlZmluZWQpIHtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAncGFzc3dvcmQnOlxuICAgICAgcmVzdWx0LnB1c2godmFsaWRhdG9ycy5sZW5ndGhWYWxpZGF0b3IoOCksIHZhbGlkYXRvcnMucGFzc3dvcmRWYWxpZGF0b3IpO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSAnZW1haWwnOlxuICAgICAgcmVzdWx0LnB1c2godmFsaWRhdG9ycy5lbWFpbFZhbGlkYXRvcik7XG4gICAgICBicmVhaztcbiAgICBjYXNlICd0ZXh0JzpcbiAgICAgIHtcbiAgICAgICAgY29uc3QgeyBtaW4gPSAwLCBtYXggfSA9IGlucHV0O1xuXG4gICAgICAgIHJlc3VsdC5wdXNoKFxuICAgICAgICAgIHZhbGlkYXRvcnMubGVuZ3RoVmFsaWRhdG9yKHBhcnNlSW50KG1pbi50b1N0cmluZygpLCAxMCksIG1heCA/IHBhcnNlSW50KG1heC50b1N0cmluZygpLCAxMCkgOiB1bmRlZmluZWQpXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBjYXNlICdudW1iZXInOlxuICAgICAge1xuICAgICAgICBjb25zdCB7IG1pbiA9IE51bWJlci5NSU5fU0FGRV9JTlRFR0VSLCBtYXggPSBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUiB9ID0gaW5wdXQ7XG5cbiAgICAgICAgcmVzdWx0LnB1c2godmFsaWRhdG9ycy5yYW5nZVZhbGlkYXRvcihwYXJzZUludChtaW4udG9TdHJpbmcoKSwgMTApLCBwYXJzZUludChtYXgudG9TdHJpbmcoKSwgMTApKSk7XG4gICAgICB9XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgYnJlYWs7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuIl19