"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.SetShippingAddress = exports.useSetShippingAddress = void 0;

var _regenerator = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/asyncToGenerator"));

var _react = /*#__PURE__*/require("react");

var _falconShopData = /*#__PURE__*/require("@deity/falcon-shop-data");

var _CheckoutConsumer = /*#__PURE__*/require("./CheckoutConsumer");

var _CheckoutAddress = /*#__PURE__*/require("./CheckoutAddress");

var useSetShippingAddress = function useSetShippingAddress() {
  var _useState = (0, _react.useState)(),
      address = _useState[0],
      setAddress = _useState[1];

  var _useCheckout = (0, _CheckoutConsumer.useCheckout)(),
      isLoading = _useCheckout.isLoading,
      setLoading = _useCheckout.setLoading,
      setShippingAddress = _useCheckout.setShippingAddress,
      isBillingSameAsShipping = _useCheckout.isBillingSameAsShipping;

  var _useSetShippingAddres = (0, _falconShopData.useSetShippingAddressMutation)({
    onCompleted: function onCompleted(data) {
      if (data) {
        setShippingAddress(address);
        setLoading(false);
      }
    }
  }),
      mutation = _useSetShippingAddres[0],
      result = _useSetShippingAddres[1];

  if (result.loading !== isLoading) {
    setLoading(result.loading);
  }

  return [(0, _react.useCallback)( /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(input, options) {
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (options === void 0) {
                options = {};
              }

              setLoading(true);
              setAddress(input);
              return _context.abrupt("return", mutation(Object.assign({}, options, {
                variables: {
                  input: {
                    address: (0, _CheckoutAddress.addressToCheckoutAddressInput)(input),
                    billingSameAsShipping: isBillingSameAsShipping
                  }
                }
              })));

            case 4:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }(), [isBillingSameAsShipping, mutation, setLoading]), result];
};

exports.useSetShippingAddress = useSetShippingAddress;

var SetShippingAddress = function SetShippingAddress(_ref2) {
  var children = _ref2.children;
  return children.apply(void 0, useSetShippingAddress());
};

exports.SetShippingAddress = SetShippingAddress;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9DaGVja291dC9TZXRTaGlwcGluZ0FkZHJlc3MudHN4Il0sIm5hbWVzIjpbInVzZVNldFNoaXBwaW5nQWRkcmVzcyIsImFkZHJlc3MiLCJzZXRBZGRyZXNzIiwiaXNMb2FkaW5nIiwic2V0TG9hZGluZyIsInNldFNoaXBwaW5nQWRkcmVzcyIsImlzQmlsbGluZ1NhbWVBc1NoaXBwaW5nIiwib25Db21wbGV0ZWQiLCJkYXRhIiwibXV0YXRpb24iLCJyZXN1bHQiLCJsb2FkaW5nIiwiaW5wdXQiLCJvcHRpb25zIiwidmFyaWFibGVzIiwiYmlsbGluZ1NhbWVBc1NoaXBwaW5nIiwiU2V0U2hpcHBpbmdBZGRyZXNzIiwiY2hpbGRyZW4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBR08sSUFBTUEscUJBQXlGLEdBQUcsU0FBNUZBLHFCQUE0RixHQUFNO0FBQzdHLGtCQUE4QixzQkFBOUI7QUFBQSxNQUFPQyxPQUFQO0FBQUEsTUFBZ0JDLFVBQWhCOztBQUNBLHFCQUErRSxvQ0FBL0U7QUFBQSxNQUFRQyxTQUFSLGdCQUFRQSxTQUFSO0FBQUEsTUFBbUJDLFVBQW5CLGdCQUFtQkEsVUFBbkI7QUFBQSxNQUErQkMsa0JBQS9CLGdCQUErQkEsa0JBQS9CO0FBQUEsTUFBbURDLHVCQUFuRCxnQkFBbURBLHVCQUFuRDs7QUFDQSw4QkFBMkIsbURBQThCO0FBQ3ZEQyxJQUFBQSxXQUFXLEVBQUUscUJBQUFDLElBQUksRUFBSTtBQUNuQixVQUFJQSxJQUFKLEVBQVU7QUFDUkgsUUFBQUEsa0JBQWtCLENBQUNKLE9BQUQsQ0FBbEI7QUFDQUcsUUFBQUEsVUFBVSxDQUFDLEtBQUQsQ0FBVjtBQUNEO0FBQ0Y7QUFOc0QsR0FBOUIsQ0FBM0I7QUFBQSxNQUFPSyxRQUFQO0FBQUEsTUFBaUJDLE1BQWpCOztBQVNBLE1BQUlBLE1BQU0sQ0FBQ0MsT0FBUCxLQUFtQlIsU0FBdkIsRUFBa0M7QUFDaENDLElBQUFBLFVBQVUsQ0FBQ00sTUFBTSxDQUFDQyxPQUFSLENBQVY7QUFDRDs7QUFFRCxTQUFPLENBQ0w7QUFBQSx1RkFDRSxpQkFBT0MsS0FBUCxFQUErQkMsT0FBL0I7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGtCQUErQkEsT0FBL0I7QUFBK0JBLGdCQUFBQSxPQUEvQixHQUF5QyxFQUF6QztBQUFBOztBQUNFVCxjQUFBQSxVQUFVLENBQUMsSUFBRCxDQUFWO0FBQ0FGLGNBQUFBLFVBQVUsQ0FBQ1UsS0FBRCxDQUFWO0FBRkYsK0NBSVNILFFBQVEsbUJBQ1ZJLE9BRFU7QUFFYkMsZ0JBQUFBLFNBQVMsRUFBRTtBQUNURixrQkFBQUEsS0FBSyxFQUFFO0FBQ0xYLG9CQUFBQSxPQUFPLEVBQUUsb0RBQThCVyxLQUE5QixDQURKO0FBRUxHLG9CQUFBQSxxQkFBcUIsRUFBRVQ7QUFGbEI7QUFERTtBQUZFLGlCQUpqQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQURGOztBQUFBO0FBQUE7QUFBQTtBQUFBLE9BZUUsQ0FBQ0EsdUJBQUQsRUFBMEJHLFFBQTFCLEVBQW9DTCxVQUFwQyxDQWZGLENBREssRUFrQkxNLE1BbEJLLENBQVA7QUFvQkQsQ0FwQ007Ozs7QUF5Q0EsSUFBTU0sa0JBQXFELEdBQUcsU0FBeERBLGtCQUF3RCxRQUFrQjtBQUFBLE1BQWZDLFFBQWUsU0FBZkEsUUFBZTtBQUNyRixTQUFPQSxRQUFRLE1BQVIsU0FBWWpCLHFCQUFxQixFQUFqQyxDQUFQO0FBQ0QsQ0FGTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VTZXRTaGlwcGluZ0FkZHJlc3NNdXRhdGlvbiwgU2V0U2hpcHBpbmdBZGRyZXNzUmVzcG9uc2UgfSBmcm9tICdAZGVpdHkvZmFsY29uLXNob3AtZGF0YSc7XG5pbXBvcnQgeyB1c2VDaGVja291dCB9IGZyb20gJy4vQ2hlY2tvdXRDb25zdW1lcic7XG5pbXBvcnQgeyBDaGVja291dEFkZHJlc3MsIGFkZHJlc3NUb0NoZWNrb3V0QWRkcmVzc0lucHV0IH0gZnJvbSAnLi9DaGVja291dEFkZHJlc3MnO1xuaW1wb3J0IHsgQ2hlY2tvdXRPcGVyYXRpb24sIENoZWNrb3V0T3BlcmF0aW9uSG9vayB9IGZyb20gJy4vQ2hlY2tvdXRPcGVyYXRpb24nO1xuXG5leHBvcnQgY29uc3QgdXNlU2V0U2hpcHBpbmdBZGRyZXNzOiBDaGVja291dE9wZXJhdGlvbkhvb2s8U2V0U2hpcHBpbmdBZGRyZXNzUmVzcG9uc2UsIENoZWNrb3V0QWRkcmVzcz4gPSAoKSA9PiB7XG4gIGNvbnN0IFthZGRyZXNzLCBzZXRBZGRyZXNzXSA9IHVzZVN0YXRlPENoZWNrb3V0QWRkcmVzcz4oKTtcbiAgY29uc3QgeyBpc0xvYWRpbmcsIHNldExvYWRpbmcsIHNldFNoaXBwaW5nQWRkcmVzcywgaXNCaWxsaW5nU2FtZUFzU2hpcHBpbmcgfSA9IHVzZUNoZWNrb3V0KCk7XG4gIGNvbnN0IFttdXRhdGlvbiwgcmVzdWx0XSA9IHVzZVNldFNoaXBwaW5nQWRkcmVzc011dGF0aW9uKHtcbiAgICBvbkNvbXBsZXRlZDogZGF0YSA9PiB7XG4gICAgICBpZiAoZGF0YSkge1xuICAgICAgICBzZXRTaGlwcGluZ0FkZHJlc3MoYWRkcmVzcyk7XG4gICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgaWYgKHJlc3VsdC5sb2FkaW5nICE9PSBpc0xvYWRpbmcpIHtcbiAgICBzZXRMb2FkaW5nKHJlc3VsdC5sb2FkaW5nKTtcbiAgfVxuXG4gIHJldHVybiBbXG4gICAgdXNlQ2FsbGJhY2soXG4gICAgICBhc3luYyAoaW5wdXQ6IENoZWNrb3V0QWRkcmVzcywgb3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgICAgIHNldEFkZHJlc3MoaW5wdXQpO1xuXG4gICAgICAgIHJldHVybiBtdXRhdGlvbih7XG4gICAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgICB2YXJpYWJsZXM6IHtcbiAgICAgICAgICAgIGlucHV0OiB7XG4gICAgICAgICAgICAgIGFkZHJlc3M6IGFkZHJlc3NUb0NoZWNrb3V0QWRkcmVzc0lucHV0KGlucHV0KSxcbiAgICAgICAgICAgICAgYmlsbGluZ1NhbWVBc1NoaXBwaW5nOiBpc0JpbGxpbmdTYW1lQXNTaGlwcGluZ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgW2lzQmlsbGluZ1NhbWVBc1NoaXBwaW5nLCBtdXRhdGlvbiwgc2V0TG9hZGluZ11cbiAgICApLFxuICAgIHJlc3VsdFxuICBdO1xufTtcblxuZXhwb3J0IHR5cGUgU2V0U2hpcHBpbmdBZGRyZXNzUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBDaGVja291dE9wZXJhdGlvbjxTZXRTaGlwcGluZ0FkZHJlc3NSZXNwb25zZSwgQ2hlY2tvdXRBZGRyZXNzPjtcbn07XG5leHBvcnQgY29uc3QgU2V0U2hpcHBpbmdBZGRyZXNzOiBSZWFjdC5GQzxTZXRTaGlwcGluZ0FkZHJlc3NQcm9wcz4gPSAoeyBjaGlsZHJlbiB9KSA9PiB7XG4gIHJldHVybiBjaGlsZHJlbiguLi51c2VTZXRTaGlwcGluZ0FkZHJlc3MoKSk7XG59O1xuIl19