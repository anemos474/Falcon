import React from 'react';
import { PlaceOrderResult } from '@deity/falcon-shop-extension';
import { CheckoutStepType } from './CheckoutStep';
import { CheckoutValues, SetCheckoutValues } from './CheckoutValues';
import { CalculateCheckoutStep } from './calculateCheckoutStep';
export declare type CheckoutValuesContext = {
    values: CheckoutValues;
    isBillingSameAsShipping: boolean;
    isLoading: boolean;
    result?: PlaceOrderResult;
};
export declare type CheckoutNavigationContext<TCheckoutStep extends string = CheckoutStepType> = {
    stepsOrder: TCheckoutStep[];
    step: TCheckoutStep;
    nextStep?: TCheckoutStep;
    calculateStep: CalculateCheckoutStep<TCheckoutStep>;
    stepForward: () => TCheckoutStep;
    canSetStep: (value: CheckoutValues, step: TCheckoutStep) => boolean;
    setStep(step: TCheckoutStep): void;
};
export declare type CheckoutContextType = CheckoutNavigationContext & CheckoutValuesContext & SetCheckoutValues & {
    setLoading(isLoading: boolean): any;
    setBillingSameAsShipping(same: boolean): void;
    setResult(result: PlaceOrderResult): void;
};
export declare const CheckoutContext: React.Context<CheckoutContextType>;
//# sourceMappingURL=CheckoutContext.d.ts.map