"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.SetShippingMethod = exports.useSetShippingMethod = void 0;

var _regenerator = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/asyncToGenerator"));

var _react = /*#__PURE__*/require("react");

var _falconShopData = /*#__PURE__*/require("@deity/falcon-shop-data");

var _CheckoutConsumer = /*#__PURE__*/require("./CheckoutConsumer");

var _shippingMethodToCheckoutDetailsInput = /*#__PURE__*/require("./shippingMethodToCheckoutDetailsInput");

var useSetShippingMethod = function useSetShippingMethod() {
  var _useState = (0, _react.useState)(),
      state = _useState[0],
      setState = _useState[1];

  var _useCheckout = (0, _CheckoutConsumer.useCheckout)(),
      isLoading = _useCheckout.isLoading,
      setLoading = _useCheckout.setLoading,
      setShippingMethod = _useCheckout.setShippingMethod;

  var _useSetShippingMethod = (0, _falconShopData.useSetShippingMethodMutation)({
    onCompleted: function onCompleted(data) {
      if (data) {
        setShippingMethod(state);
        setLoading(false);
      }
    }
  }),
      mutation = _useSetShippingMethod[0],
      result = _useSetShippingMethod[1];

  if (result.loading !== isLoading) {
    setLoading(result.loading);
  }

  return [(0, _react.useCallback)( /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(input, options) {
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setLoading(true);
              setState(input);
              return _context.abrupt("return", mutation(Object.assign({}, options, {
                variables: {
                  input: (0, _shippingMethodToCheckoutDetailsInput.shippingMethodToCheckoutDetailsInput)(input)
                }
              })));

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }(), [mutation, setLoading]), result];
};

exports.useSetShippingMethod = useSetShippingMethod;

var SetShippingMethod = function SetShippingMethod(_ref2) {
  var children = _ref2.children;
  return children.apply(void 0, useSetShippingMethod());
};

exports.SetShippingMethod = SetShippingMethod;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9DaGVja291dC9TZXRTaGlwcGluZ01ldGhvZC50c3giXSwibmFtZXMiOlsidXNlU2V0U2hpcHBpbmdNZXRob2QiLCJzdGF0ZSIsInNldFN0YXRlIiwiaXNMb2FkaW5nIiwic2V0TG9hZGluZyIsInNldFNoaXBwaW5nTWV0aG9kIiwib25Db21wbGV0ZWQiLCJkYXRhIiwibXV0YXRpb24iLCJyZXN1bHQiLCJsb2FkaW5nIiwiaW5wdXQiLCJvcHRpb25zIiwidmFyaWFibGVzIiwiU2V0U2hpcHBpbmdNZXRob2QiLCJjaGlsZHJlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFFQTs7QUFFTyxJQUFNQSxvQkFBc0YsR0FBRyxTQUF6RkEsb0JBQXlGLEdBQU07QUFDMUcsa0JBQTBCLHNCQUExQjtBQUFBLE1BQU9DLEtBQVA7QUFBQSxNQUFjQyxRQUFkOztBQUNBLHFCQUFxRCxvQ0FBckQ7QUFBQSxNQUFRQyxTQUFSLGdCQUFRQSxTQUFSO0FBQUEsTUFBbUJDLFVBQW5CLGdCQUFtQkEsVUFBbkI7QUFBQSxNQUErQkMsaUJBQS9CLGdCQUErQkEsaUJBQS9COztBQUNBLDhCQUEyQixrREFBNkI7QUFDdERDLElBQUFBLFdBQVcsRUFBRSxxQkFBQUMsSUFBSSxFQUFJO0FBQ25CLFVBQUlBLElBQUosRUFBVTtBQUNSRixRQUFBQSxpQkFBaUIsQ0FBQ0osS0FBRCxDQUFqQjtBQUNBRyxRQUFBQSxVQUFVLENBQUMsS0FBRCxDQUFWO0FBQ0Q7QUFDRjtBQU5xRCxHQUE3QixDQUEzQjtBQUFBLE1BQU9JLFFBQVA7QUFBQSxNQUFpQkMsTUFBakI7O0FBU0EsTUFBSUEsTUFBTSxDQUFDQyxPQUFQLEtBQW1CUCxTQUF2QixFQUFrQztBQUNoQ0MsSUFBQUEsVUFBVSxDQUFDSyxNQUFNLENBQUNDLE9BQVIsQ0FBVjtBQUNEOztBQUVELFNBQU8sQ0FDTDtBQUFBLHVGQUNFLGlCQUFPQyxLQUFQLEVBQThCQyxPQUE5QjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0VSLGNBQUFBLFVBQVUsQ0FBQyxJQUFELENBQVY7QUFDQUYsY0FBQUEsUUFBUSxDQUFDUyxLQUFELENBQVI7QUFGRiwrQ0FJU0gsUUFBUSxtQkFBTUksT0FBTjtBQUFlQyxnQkFBQUEsU0FBUyxFQUFFO0FBQUVGLGtCQUFBQSxLQUFLLEVBQUUsZ0ZBQXFDQSxLQUFyQztBQUFUO0FBQTFCLGlCQUpqQjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQURGOztBQUFBO0FBQUE7QUFBQTtBQUFBLE9BT0UsQ0FBQ0gsUUFBRCxFQUFXSixVQUFYLENBUEYsQ0FESyxFQVVMSyxNQVZLLENBQVA7QUFZRCxDQTVCTTs7OztBQWlDQSxJQUFNSyxpQkFBbUQsR0FBRyxTQUF0REEsaUJBQXNELFFBQWtCO0FBQUEsTUFBZkMsUUFBZSxTQUFmQSxRQUFlO0FBQ25GLFNBQU9BLFFBQVEsTUFBUixTQUFZZixvQkFBb0IsRUFBaEMsQ0FBUDtBQUNELENBRk0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgU2hpcHBpbmdNZXRob2QgfSBmcm9tICdAZGVpdHkvZmFsY29uLXNob3AtZXh0ZW5zaW9uJztcbmltcG9ydCB7IHVzZVNldFNoaXBwaW5nTWV0aG9kTXV0YXRpb24sIFNldFNoaXBwaW5nTWV0aG9kUmVzcG9uc2UgfSBmcm9tICdAZGVpdHkvZmFsY29uLXNob3AtZGF0YSc7XG5pbXBvcnQgeyB1c2VDaGVja291dCB9IGZyb20gJy4vQ2hlY2tvdXRDb25zdW1lcic7XG5pbXBvcnQgeyBDaGVja291dE9wZXJhdGlvbiwgQ2hlY2tvdXRPcGVyYXRpb25Ib29rIH0gZnJvbSAnLi9DaGVja291dE9wZXJhdGlvbic7XG5pbXBvcnQgeyBzaGlwcGluZ01ldGhvZFRvQ2hlY2tvdXREZXRhaWxzSW5wdXQgfSBmcm9tICcuL3NoaXBwaW5nTWV0aG9kVG9DaGVja291dERldGFpbHNJbnB1dCc7XG5cbmV4cG9ydCBjb25zdCB1c2VTZXRTaGlwcGluZ01ldGhvZDogQ2hlY2tvdXRPcGVyYXRpb25Ib29rPFNldFNoaXBwaW5nTWV0aG9kUmVzcG9uc2UsIFNoaXBwaW5nTWV0aG9kPiA9ICgpID0+IHtcbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZTxTaGlwcGluZ01ldGhvZD4oKTtcbiAgY29uc3QgeyBpc0xvYWRpbmcsIHNldExvYWRpbmcsIHNldFNoaXBwaW5nTWV0aG9kIH0gPSB1c2VDaGVja291dCgpO1xuICBjb25zdCBbbXV0YXRpb24sIHJlc3VsdF0gPSB1c2VTZXRTaGlwcGluZ01ldGhvZE11dGF0aW9uKHtcbiAgICBvbkNvbXBsZXRlZDogZGF0YSA9PiB7XG4gICAgICBpZiAoZGF0YSkge1xuICAgICAgICBzZXRTaGlwcGluZ01ldGhvZChzdGF0ZSk7XG4gICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgaWYgKHJlc3VsdC5sb2FkaW5nICE9PSBpc0xvYWRpbmcpIHtcbiAgICBzZXRMb2FkaW5nKHJlc3VsdC5sb2FkaW5nKTtcbiAgfVxuXG4gIHJldHVybiBbXG4gICAgdXNlQ2FsbGJhY2soXG4gICAgICBhc3luYyAoaW5wdXQ6IFNoaXBwaW5nTWV0aG9kLCBvcHRpb25zKSA9PiB7XG4gICAgICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgICAgIHNldFN0YXRlKGlucHV0KTtcblxuICAgICAgICByZXR1cm4gbXV0YXRpb24oeyAuLi5vcHRpb25zLCB2YXJpYWJsZXM6IHsgaW5wdXQ6IHNoaXBwaW5nTWV0aG9kVG9DaGVja291dERldGFpbHNJbnB1dChpbnB1dCkgfSB9KTtcbiAgICAgIH0sXG4gICAgICBbbXV0YXRpb24sIHNldExvYWRpbmddXG4gICAgKSxcbiAgICByZXN1bHRcbiAgXTtcbn07XG5cbmV4cG9ydCB0eXBlIFNldFNoaXBwaW5nTWV0aG9kUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBDaGVja291dE9wZXJhdGlvbjxTZXRTaGlwcGluZ01ldGhvZFJlc3BvbnNlLCBTaGlwcGluZ01ldGhvZD47XG59O1xuZXhwb3J0IGNvbnN0IFNldFNoaXBwaW5nTWV0aG9kOiBSZWFjdC5GQzxTZXRTaGlwcGluZ01ldGhvZFByb3BzPiA9ICh7IGNoaWxkcmVuIH0pID0+IHtcbiAgcmV0dXJuIGNoaWxkcmVuKC4uLnVzZVNldFNoaXBwaW5nTWV0aG9kKCkpO1xufTtcbiJdfQ==