"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.SetBillingAddress = exports.useSetBillingAddress = void 0;

var _regenerator = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/asyncToGenerator"));

var _react = /*#__PURE__*/require("react");

var _falconShopData = /*#__PURE__*/require("@deity/falcon-shop-data");

var _CheckoutConsumer = /*#__PURE__*/require("./CheckoutConsumer");

var _CheckoutAddress = /*#__PURE__*/require("./CheckoutAddress");

var useSetBillingAddress = function useSetBillingAddress() {
  var _useState = (0, _react.useState)(),
      address = _useState[0],
      setAddress = _useState[1];

  var _useCheckout = (0, _CheckoutConsumer.useCheckout)(),
      isLoading = _useCheckout.isLoading,
      setLoading = _useCheckout.setLoading,
      setBillingAddress = _useCheckout.setBillingAddress,
      isBillingSameAsShipping = _useCheckout.isBillingSameAsShipping;

  var _useSetBillingAddress = (0, _falconShopData.useSetBillingAddressMutation)({
    onCompleted: function onCompleted(data) {
      if (data) {
        setBillingAddress(address);
        setLoading(false);
      }
    }
  }),
      mutation = _useSetBillingAddress[0],
      result = _useSetBillingAddress[1];

  if (result.loading !== isLoading) {
    setLoading(result.loading);
  }

  return [(0, _react.useCallback)( /*#__PURE__*/function () {
    var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(input, options) {
      return _regenerator.default.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              setLoading(true);
              setAddress(input);
              return _context.abrupt("return", mutation(Object.assign({}, options, {
                variables: {
                  input: {
                    address: (0, _CheckoutAddress.addressToCheckoutAddressInput)(input),
                    billingSameAsShipping: isBillingSameAsShipping
                  }
                }
              })));

            case 3:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function (_x, _x2) {
      return _ref.apply(this, arguments);
    };
  }(), [isBillingSameAsShipping, setLoading, mutation]), result];
};

exports.useSetBillingAddress = useSetBillingAddress;

var SetBillingAddress = function SetBillingAddress(_ref2) {
  var children = _ref2.children;
  return children.apply(void 0, useSetBillingAddress());
};

exports.SetBillingAddress = SetBillingAddress;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9DaGVja291dC9TZXRCaWxsaW5nQWRkcmVzcy50c3giXSwibmFtZXMiOlsidXNlU2V0QmlsbGluZ0FkZHJlc3MiLCJhZGRyZXNzIiwic2V0QWRkcmVzcyIsImlzTG9hZGluZyIsInNldExvYWRpbmciLCJzZXRCaWxsaW5nQWRkcmVzcyIsImlzQmlsbGluZ1NhbWVBc1NoaXBwaW5nIiwib25Db21wbGV0ZWQiLCJkYXRhIiwibXV0YXRpb24iLCJyZXN1bHQiLCJsb2FkaW5nIiwiaW5wdXQiLCJvcHRpb25zIiwidmFyaWFibGVzIiwiYmlsbGluZ1NhbWVBc1NoaXBwaW5nIiwiU2V0QmlsbGluZ0FkZHJlc3MiLCJjaGlsZHJlbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFHTyxJQUFNQSxvQkFBdUYsR0FBRyxTQUExRkEsb0JBQTBGLEdBQU07QUFDM0csa0JBQThCLHNCQUE5QjtBQUFBLE1BQU9DLE9BQVA7QUFBQSxNQUFnQkMsVUFBaEI7O0FBQ0EscUJBQThFLG9DQUE5RTtBQUFBLE1BQVFDLFNBQVIsZ0JBQVFBLFNBQVI7QUFBQSxNQUFtQkMsVUFBbkIsZ0JBQW1CQSxVQUFuQjtBQUFBLE1BQStCQyxpQkFBL0IsZ0JBQStCQSxpQkFBL0I7QUFBQSxNQUFrREMsdUJBQWxELGdCQUFrREEsdUJBQWxEOztBQUNBLDhCQUEyQixrREFBNkI7QUFDdERDLElBQUFBLFdBQVcsRUFBRSxxQkFBQUMsSUFBSSxFQUFJO0FBQ25CLFVBQUlBLElBQUosRUFBVTtBQUNSSCxRQUFBQSxpQkFBaUIsQ0FBQ0osT0FBRCxDQUFqQjtBQUNBRyxRQUFBQSxVQUFVLENBQUMsS0FBRCxDQUFWO0FBQ0Q7QUFDRjtBQU5xRCxHQUE3QixDQUEzQjtBQUFBLE1BQU9LLFFBQVA7QUFBQSxNQUFpQkMsTUFBakI7O0FBU0EsTUFBSUEsTUFBTSxDQUFDQyxPQUFQLEtBQW1CUixTQUF2QixFQUFrQztBQUNoQ0MsSUFBQUEsVUFBVSxDQUFDTSxNQUFNLENBQUNDLE9BQVIsQ0FBVjtBQUNEOztBQUVELFNBQU8sQ0FDTDtBQUFBLHVGQUNFLGlCQUFPQyxLQUFQLEVBQStCQyxPQUEvQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0VULGNBQUFBLFVBQVUsQ0FBQyxJQUFELENBQVY7QUFDQUYsY0FBQUEsVUFBVSxDQUFDVSxLQUFELENBQVY7QUFGRiwrQ0FJU0gsUUFBUSxtQkFDVkksT0FEVTtBQUViQyxnQkFBQUEsU0FBUyxFQUFFO0FBQ1RGLGtCQUFBQSxLQUFLLEVBQUU7QUFDTFgsb0JBQUFBLE9BQU8sRUFBRSxvREFBOEJXLEtBQTlCLENBREo7QUFFTEcsb0JBQUFBLHFCQUFxQixFQUFFVDtBQUZsQjtBQURFO0FBRkUsaUJBSmpCOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBREY7O0FBQUE7QUFBQTtBQUFBO0FBQUEsT0FlRSxDQUFDQSx1QkFBRCxFQUEwQkYsVUFBMUIsRUFBc0NLLFFBQXRDLENBZkYsQ0FESyxFQWtCTEMsTUFsQkssQ0FBUDtBQW9CRCxDQXBDTTs7OztBQXlDQSxJQUFNTSxpQkFBbUQsR0FBRyxTQUF0REEsaUJBQXNELFFBQWtCO0FBQUEsTUFBZkMsUUFBZSxTQUFmQSxRQUFlO0FBQ25GLFNBQU9BLFFBQVEsTUFBUixTQUFZakIsb0JBQW9CLEVBQWhDLENBQVA7QUFDRCxDQUZNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZVNldEJpbGxpbmdBZGRyZXNzTXV0YXRpb24sIFNldEJpbGxpbmdBZGRyZXNzUmVzcG9uc2UgfSBmcm9tICdAZGVpdHkvZmFsY29uLXNob3AtZGF0YSc7XG5pbXBvcnQgeyB1c2VDaGVja291dCB9IGZyb20gJy4vQ2hlY2tvdXRDb25zdW1lcic7XG5pbXBvcnQgeyBDaGVja291dEFkZHJlc3MsIGFkZHJlc3NUb0NoZWNrb3V0QWRkcmVzc0lucHV0IH0gZnJvbSAnLi9DaGVja291dEFkZHJlc3MnO1xuaW1wb3J0IHsgQ2hlY2tvdXRPcGVyYXRpb24sIENoZWNrb3V0T3BlcmF0aW9uSG9vayB9IGZyb20gJy4vQ2hlY2tvdXRPcGVyYXRpb24nO1xuXG5leHBvcnQgY29uc3QgdXNlU2V0QmlsbGluZ0FkZHJlc3M6IENoZWNrb3V0T3BlcmF0aW9uSG9vazxTZXRCaWxsaW5nQWRkcmVzc1Jlc3BvbnNlLCBDaGVja291dEFkZHJlc3M+ID0gKCkgPT4ge1xuICBjb25zdCBbYWRkcmVzcywgc2V0QWRkcmVzc10gPSB1c2VTdGF0ZTxDaGVja291dEFkZHJlc3M+KCk7XG4gIGNvbnN0IHsgaXNMb2FkaW5nLCBzZXRMb2FkaW5nLCBzZXRCaWxsaW5nQWRkcmVzcywgaXNCaWxsaW5nU2FtZUFzU2hpcHBpbmcgfSA9IHVzZUNoZWNrb3V0KCk7XG4gIGNvbnN0IFttdXRhdGlvbiwgcmVzdWx0XSA9IHVzZVNldEJpbGxpbmdBZGRyZXNzTXV0YXRpb24oe1xuICAgIG9uQ29tcGxldGVkOiBkYXRhID0+IHtcbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIHNldEJpbGxpbmdBZGRyZXNzKGFkZHJlc3MpO1xuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0pO1xuXG4gIGlmIChyZXN1bHQubG9hZGluZyAhPT0gaXNMb2FkaW5nKSB7XG4gICAgc2V0TG9hZGluZyhyZXN1bHQubG9hZGluZyk7XG4gIH1cblxuICByZXR1cm4gW1xuICAgIHVzZUNhbGxiYWNrKFxuICAgICAgYXN5bmMgKGlucHV0OiBDaGVja291dEFkZHJlc3MsIG9wdGlvbnMpID0+IHtcbiAgICAgICAgc2V0TG9hZGluZyh0cnVlKTtcbiAgICAgICAgc2V0QWRkcmVzcyhpbnB1dCk7XG5cbiAgICAgICAgcmV0dXJuIG11dGF0aW9uKHtcbiAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICAgIHZhcmlhYmxlczoge1xuICAgICAgICAgICAgaW5wdXQ6IHtcbiAgICAgICAgICAgICAgYWRkcmVzczogYWRkcmVzc1RvQ2hlY2tvdXRBZGRyZXNzSW5wdXQoaW5wdXQpLFxuICAgICAgICAgICAgICBiaWxsaW5nU2FtZUFzU2hpcHBpbmc6IGlzQmlsbGluZ1NhbWVBc1NoaXBwaW5nXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICBbaXNCaWxsaW5nU2FtZUFzU2hpcHBpbmcsIHNldExvYWRpbmcsIG11dGF0aW9uXVxuICAgICksXG4gICAgcmVzdWx0XG4gIF07XG59O1xuXG5leHBvcnQgdHlwZSBTZXRCaWxsaW5nQWRkcmVzc1Byb3BzID0ge1xuICBjaGlsZHJlbjogQ2hlY2tvdXRPcGVyYXRpb248U2V0QmlsbGluZ0FkZHJlc3NSZXNwb25zZSwgQ2hlY2tvdXRBZGRyZXNzPjtcbn07XG5leHBvcnQgY29uc3QgU2V0QmlsbGluZ0FkZHJlc3M6IFJlYWN0LkZDPFNldEJpbGxpbmdBZGRyZXNzUHJvcHM+ID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xuICByZXR1cm4gY2hpbGRyZW4oLi4udXNlU2V0QmlsbGluZ0FkZHJlc3MoKSk7XG59O1xuIl19