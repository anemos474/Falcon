import { themed } from '../theme';

var rangeInputTrack = function rangeInputTrack(styles) {
  return {
    '::-webkit-slider-runnable-track': styles,
    '::-moz-range-track': styles,
    '::-ms-track': styles
  };
};

var rangeInputThumb = function rangeInputThumb(styles) {
  return {
    '::-webkit-slider-thumb ': styles,
    '::-moz-range-thumb': styles,
    '::-ms-thumb': styles
  };
};

export var RangeInput = /*#__PURE__*/themed({
  tag: 'input',
  defaultProps: {
    type: 'range'
  },
  defaultTheme: {
    rangeInput: {
      height: 'xs',
      css: function css(_ref) {
        var theme = _ref.theme;
        return Object.assign({
          background: 'transparent',
          width: '100%',
          WebkitAppearance: 'none',
          ':focus': {
            outline: 'none'
          }
        }, rangeInputTrack({
          width: '100%',
          cursor: 'pointer',
          display: 'flex',
          alignItems: 'center',
          border: 'none',
          borderRadius: theme.borderRadius.medium,
          height: '50%',
          background: theme.colors.secondary
        }), rangeInputThumb({
          WebkitAppearance: 'none',
          cursor: 'pointer',
          border: 'none',
          borderRadius: theme.borderRadius.round,
          background: theme.colors.primary,
          height: theme.spacing.sm,
          width: theme.spacing.sm,
          transition: 'transform',
          transitionTimingFunction: theme.easingFunctions.easeIn,
          transitionDuration: theme.transitionDurations.short
        }), {
          ':active': Object.assign({}, rangeInputThumb({
            transform: 'scale(1.1)'
          }))
        });
      }
    }
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21wb25lbnRzL1JhbmdlSW5wdXQudHN4Il0sIm5hbWVzIjpbInRoZW1lZCIsInJhbmdlSW5wdXRUcmFjayIsInN0eWxlcyIsInJhbmdlSW5wdXRUaHVtYiIsIlJhbmdlSW5wdXQiLCJ0YWciLCJkZWZhdWx0UHJvcHMiLCJ0eXBlIiwiZGVmYXVsdFRoZW1lIiwicmFuZ2VJbnB1dCIsImhlaWdodCIsImNzcyIsInRoZW1lIiwiYmFja2dyb3VuZCIsIndpZHRoIiwiV2Via2l0QXBwZWFyYW5jZSIsIm91dGxpbmUiLCJjdXJzb3IiLCJkaXNwbGF5IiwiYWxpZ25JdGVtcyIsImJvcmRlciIsImJvcmRlclJhZGl1cyIsIm1lZGl1bSIsImNvbG9ycyIsInNlY29uZGFyeSIsInJvdW5kIiwicHJpbWFyeSIsInNwYWNpbmciLCJzbSIsInRyYW5zaXRpb24iLCJ0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb24iLCJlYXNpbmdGdW5jdGlvbnMiLCJlYXNlSW4iLCJ0cmFuc2l0aW9uRHVyYXRpb24iLCJ0cmFuc2l0aW9uRHVyYXRpb25zIiwic2hvcnQiLCJ0cmFuc2Zvcm0iXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLE1BQVQsUUFBa0MsVUFBbEM7O0FBRUEsSUFBTUMsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFDQyxNQUFEO0FBQUEsU0FBd0I7QUFDOUMsdUNBQW1DQSxNQURXO0FBRTlDLDBCQUFzQkEsTUFGd0I7QUFHOUMsbUJBQWVBO0FBSCtCLEdBQXhCO0FBQUEsQ0FBeEI7O0FBTUEsSUFBTUMsZUFBZSxHQUFHLFNBQWxCQSxlQUFrQixDQUFDRCxNQUFEO0FBQUEsU0FBd0I7QUFDOUMsK0JBQTJCQSxNQURtQjtBQUU5QywwQkFBc0JBLE1BRndCO0FBRzlDLG1CQUFlQTtBQUgrQixHQUF4QjtBQUFBLENBQXhCOztBQU1BLE9BQU8sSUFBTUUsVUFBVSxnQkFBR0osTUFBTSxDQUFDO0FBQy9CSyxFQUFBQSxHQUFHLEVBQUUsT0FEMEI7QUFHL0JDLEVBQUFBLFlBQVksRUFBRTtBQUNaQyxJQUFBQSxJQUFJLEVBQUU7QUFETSxHQUhpQjtBQU8vQkMsRUFBQUEsWUFBWSxFQUFFO0FBQ1pDLElBQUFBLFVBQVUsRUFBRTtBQUNWQyxNQUFBQSxNQUFNLEVBQUUsSUFERTtBQUVWQyxNQUFBQSxHQUFHLEVBQUU7QUFBQSxZQUFHQyxLQUFILFFBQUdBLEtBQUg7QUFBQTtBQUNIQyxVQUFBQSxVQUFVLEVBQUUsYUFEVDtBQUVIQyxVQUFBQSxLQUFLLEVBQUUsTUFGSjtBQUdIQyxVQUFBQSxnQkFBZ0IsRUFBRSxNQUhmO0FBS0gsb0JBQVU7QUFDUkMsWUFBQUEsT0FBTyxFQUFFO0FBREQ7QUFMUCxXQVFBZixlQUFlLENBQUM7QUFDakJhLFVBQUFBLEtBQUssRUFBRSxNQURVO0FBRWpCRyxVQUFBQSxNQUFNLEVBQUUsU0FGUztBQUdqQkMsVUFBQUEsT0FBTyxFQUFFLE1BSFE7QUFJakJDLFVBQUFBLFVBQVUsRUFBRSxRQUpLO0FBS2pCQyxVQUFBQSxNQUFNLEVBQUUsTUFMUztBQU1qQkMsVUFBQUEsWUFBWSxFQUFFVCxLQUFLLENBQUNTLFlBQU4sQ0FBbUJDLE1BTmhCO0FBT2pCWixVQUFBQSxNQUFNLEVBQUUsS0FQUztBQVFqQkcsVUFBQUEsVUFBVSxFQUFFRCxLQUFLLENBQUNXLE1BQU4sQ0FBYUM7QUFSUixTQUFELENBUmYsRUFrQkFyQixlQUFlLENBQUM7QUFDakJZLFVBQUFBLGdCQUFnQixFQUFFLE1BREQ7QUFFakJFLFVBQUFBLE1BQU0sRUFBRSxTQUZTO0FBR2pCRyxVQUFBQSxNQUFNLEVBQUUsTUFIUztBQUlqQkMsVUFBQUEsWUFBWSxFQUFFVCxLQUFLLENBQUNTLFlBQU4sQ0FBbUJJLEtBSmhCO0FBS2pCWixVQUFBQSxVQUFVLEVBQUVELEtBQUssQ0FBQ1csTUFBTixDQUFhRyxPQUxSO0FBTWpCaEIsVUFBQUEsTUFBTSxFQUFFRSxLQUFLLENBQUNlLE9BQU4sQ0FBY0MsRUFOTDtBQU9qQmQsVUFBQUEsS0FBSyxFQUFFRixLQUFLLENBQUNlLE9BQU4sQ0FBY0MsRUFQSjtBQVFqQkMsVUFBQUEsVUFBVSxFQUFFLFdBUks7QUFTakJDLFVBQUFBLHdCQUF3QixFQUFFbEIsS0FBSyxDQUFDbUIsZUFBTixDQUFzQkMsTUFUL0I7QUFVakJDLFVBQUFBLGtCQUFrQixFQUFFckIsS0FBSyxDQUFDc0IsbUJBQU4sQ0FBMEJDO0FBVjdCLFNBQUQsQ0FsQmY7QUE4QkgsdUNBQ0toQyxlQUFlLENBQUM7QUFDakJpQyxZQUFBQSxTQUFTLEVBQUU7QUFETSxXQUFELENBRHBCO0FBOUJHO0FBQUE7QUFGSztBQURBO0FBUGlCLENBQUQsQ0FBekIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0aGVtZWQsIENTU09iamVjdCB9IGZyb20gJy4uL3RoZW1lJztcblxuY29uc3QgcmFuZ2VJbnB1dFRyYWNrID0gKHN0eWxlczogQ1NTT2JqZWN0KSA9PiAoe1xuICAnOjotd2Via2l0LXNsaWRlci1ydW5uYWJsZS10cmFjayc6IHN0eWxlcyxcbiAgJzo6LW1vei1yYW5nZS10cmFjayc6IHN0eWxlcyxcbiAgJzo6LW1zLXRyYWNrJzogc3R5bGVzXG59KTtcblxuY29uc3QgcmFuZ2VJbnB1dFRodW1iID0gKHN0eWxlczogQ1NTT2JqZWN0KSA9PiAoe1xuICAnOjotd2Via2l0LXNsaWRlci10aHVtYiAnOiBzdHlsZXMsXG4gICc6Oi1tb3otcmFuZ2UtdGh1bWInOiBzdHlsZXMsXG4gICc6Oi1tcy10aHVtYic6IHN0eWxlc1xufSk7XG5cbmV4cG9ydCBjb25zdCBSYW5nZUlucHV0ID0gdGhlbWVkKHtcbiAgdGFnOiAnaW5wdXQnLFxuXG4gIGRlZmF1bHRQcm9wczoge1xuICAgIHR5cGU6ICdyYW5nZSdcbiAgfSxcblxuICBkZWZhdWx0VGhlbWU6IHtcbiAgICByYW5nZUlucHV0OiB7XG4gICAgICBoZWlnaHQ6ICd4cycsXG4gICAgICBjc3M6ICh7IHRoZW1lIH0pID0+ICh7XG4gICAgICAgIGJhY2tncm91bmQ6ICd0cmFuc3BhcmVudCcsXG4gICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgIFdlYmtpdEFwcGVhcmFuY2U6ICdub25lJyxcblxuICAgICAgICAnOmZvY3VzJzoge1xuICAgICAgICAgIG91dGxpbmU6ICdub25lJ1xuICAgICAgICB9LFxuICAgICAgICAuLi5yYW5nZUlucHV0VHJhY2soe1xuICAgICAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICAgICAgY3Vyc29yOiAncG9pbnRlcicsXG4gICAgICAgICAgZGlzcGxheTogJ2ZsZXgnLFxuICAgICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICAgIGJvcmRlcjogJ25vbmUnLFxuICAgICAgICAgIGJvcmRlclJhZGl1czogdGhlbWUuYm9yZGVyUmFkaXVzLm1lZGl1bSxcbiAgICAgICAgICBoZWlnaHQ6ICc1MCUnLFxuICAgICAgICAgIGJhY2tncm91bmQ6IHRoZW1lLmNvbG9ycy5zZWNvbmRhcnlcbiAgICAgICAgfSksXG4gICAgICAgIC4uLnJhbmdlSW5wdXRUaHVtYih7XG4gICAgICAgICAgV2Via2l0QXBwZWFyYW5jZTogJ25vbmUnLFxuICAgICAgICAgIGN1cnNvcjogJ3BvaW50ZXInLFxuICAgICAgICAgIGJvcmRlcjogJ25vbmUnLFxuICAgICAgICAgIGJvcmRlclJhZGl1czogdGhlbWUuYm9yZGVyUmFkaXVzLnJvdW5kLFxuICAgICAgICAgIGJhY2tncm91bmQ6IHRoZW1lLmNvbG9ycy5wcmltYXJ5LFxuICAgICAgICAgIGhlaWdodDogdGhlbWUuc3BhY2luZy5zbSxcbiAgICAgICAgICB3aWR0aDogdGhlbWUuc3BhY2luZy5zbSxcbiAgICAgICAgICB0cmFuc2l0aW9uOiAndHJhbnNmb3JtJyxcbiAgICAgICAgICB0cmFuc2l0aW9uVGltaW5nRnVuY3Rpb246IHRoZW1lLmVhc2luZ0Z1bmN0aW9ucy5lYXNlSW4sXG4gICAgICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uOiB0aGVtZS50cmFuc2l0aW9uRHVyYXRpb25zLnNob3J0XG4gICAgICAgIH0pLFxuICAgICAgICAnOmFjdGl2ZSc6IHtcbiAgICAgICAgICAuLi5yYW5nZUlucHV0VGh1bWIoe1xuICAgICAgICAgICAgdHJhbnNmb3JtOiAnc2NhbGUoMS4xKSdcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH1cbiAgfVxufSk7XG4iXX0=