import React, { useEffect } from 'react';
import { themed } from '../theme';
import { withTheme } from './ThemeProvider';

const SidebarInnerDOM = withTheme(({ theme, visible, side, ...props }) => {
  const sidebarRef = React.useRef();
  useEffect(() => {
    const sidebar = sidebarRef.current || undefined;
    if (sidebar) {
      const transitionDuration = theme.components.sidebar.transitionDuration || theme.transitionDurations.short;

      // Remove Animation && Place Sidebar Offscreen
      sidebar.style.transitionDuration = '0s';
      sidebar.style.transform = `translateX(${side === 'left' ? '-100%' : '100%'})`;

      // Set Animation -> change the position which will trigger the animation
      requestAnimationFrame(() => {
        sidebar.style.transitionDuration = transitionDuration;
        sidebar.style.transform = 'translateX(0)';
      });

      // Reset properties to the provided theme by setting them to empty strings
      requestAnimationFrame(() => {
        sidebar.style.transitionDuration = '';
        sidebar.style.transform = '';
      });
    }
  }, [side, theme.components.sidebar.transitionDuration, theme.transitionDurations.short]);
  return <div ref={sidebarRef} {...props} />;
});

export const Sidebar = themed({
  tag: SidebarInnerDOM,

  defaultProps: {
    visible: false,
    side: 'left' as 'left' | 'right'
  },

  defaultTheme: {
    sidebar: {
      overflowX: 'hidden',
      display: 'flex',
      bg: 'white',
      position: 'fixed',
      css: ({ visible, theme, side }) => ({
        top: 0,
        bottom: 0,
        [side]: 0,
        height: '100%',
        zIndex: theme.zIndex.sidebar,
        // eslint-disable-next-line
        transform: visible ? 'translateX(0)' : side === 'left' ? 'translateX(-100%)' : 'translateX(100%)',
        transitionProperty: 'transform',
        transitionDuration: visible ? theme.transitionDurations.short : theme.transitionDurations.standard,
        transitionTimingFunction: visible ? theme.easingFunctions.easeIn : theme.easingFunctions.easeOut
      })
    }
  }
});
