"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.MultipleFilter = void 0;

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _falconUi = /*#__PURE__*/require("@deity/falcon-ui");

var _FilterItemLayout = /*#__PURE__*/require("./FilterItemLayout");

var _FilterItemListLayout = /*#__PURE__*/require("./FilterItemListLayout");

var MultipleFilter = function MultipleFilter(_ref) {
  var options = _ref.options,
      _ref$selected = _ref.selected,
      selected = _ref$selected === void 0 ? [] : _ref$selected,
      onChange = _ref.onChange;

  var handleOnChange = function handleOnChange(option, isSelected) {
    if (isSelected) {
      onChange([].concat(selected, [option.value]));
    } else {
      onChange(selected.filter(function (value) {
        return value !== option.value;
      }));
    }
  };

  return /*#__PURE__*/_react.default.createElement(_FilterItemListLayout.FilterItemListLayout, null, options.map(function (x) {
    return /*#__PURE__*/_react.default.createElement(_FilterItemLayout.FilterItemLayout, {
      key: x.value
    }, /*#__PURE__*/_react.default.createElement(_falconUi.Checkbox, {
      id: x.title + "-" + x.value,
      checked: selected.some(function (value) {
        return value === x.value;
      }),
      onChange: function onChange(e) {
        return handleOnChange(x, e.target.checked);
      }
    }), /*#__PURE__*/_react.default.createElement(_falconUi.Label, {
      ml: "sm",
      htmlFor: x.title + "-" + x.value
    }, x.title, " (", x.count, ")"));
  }));
};

exports.MultipleFilter = MultipleFilter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9GaWx0ZXJzL011bHRpcGxlRmlsdGVyLnRzeCJdLCJuYW1lcyI6WyJNdWx0aXBsZUZpbHRlciIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsIm9uQ2hhbmdlIiwiaGFuZGxlT25DaGFuZ2UiLCJvcHRpb24iLCJpc1NlbGVjdGVkIiwidmFsdWUiLCJmaWx0ZXIiLCJtYXAiLCJ4IiwidGl0bGUiLCJzb21lIiwiZSIsInRhcmdldCIsImNoZWNrZWQiLCJjb3VudCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOztBQVFPLElBQU1BLGNBQThDLEdBQUcsU0FBakRBLGNBQWlELE9BQTBDO0FBQUEsTUFBdkNDLE9BQXVDLFFBQXZDQSxPQUF1QztBQUFBLDJCQUE5QkMsUUFBOEI7QUFBQSxNQUE5QkEsUUFBOEIsOEJBQW5CLEVBQW1CO0FBQUEsTUFBZkMsUUFBZSxRQUFmQSxRQUFlOztBQUN0RyxNQUFNQyxjQUFjLEdBQUcsU0FBakJBLGNBQWlCLENBQUNDLE1BQUQsRUFBdUJDLFVBQXZCLEVBQStDO0FBQ3BFLFFBQUlBLFVBQUosRUFBZ0I7QUFDZEgsTUFBQUEsUUFBUSxXQUFLRCxRQUFMLEdBQWVHLE1BQU0sQ0FBQ0UsS0FBdEIsR0FBUjtBQUNELEtBRkQsTUFFTztBQUNMSixNQUFBQSxRQUFRLENBQUNELFFBQVEsQ0FBQ00sTUFBVCxDQUFnQixVQUFBRCxLQUFLO0FBQUEsZUFBSUEsS0FBSyxLQUFLRixNQUFNLENBQUNFLEtBQXJCO0FBQUEsT0FBckIsQ0FBRCxDQUFSO0FBQ0Q7QUFDRixHQU5EOztBQVFBLHNCQUNFLDZCQUFDLDBDQUFELFFBQ0dOLE9BQU8sQ0FBQ1EsR0FBUixDQUFZLFVBQUFDLENBQUM7QUFBQSx3QkFDWiw2QkFBQyxrQ0FBRDtBQUFrQixNQUFBLEdBQUcsRUFBRUEsQ0FBQyxDQUFDSDtBQUF6QixvQkFDRSw2QkFBQyxrQkFBRDtBQUNFLE1BQUEsRUFBRSxFQUFLRyxDQUFDLENBQUNDLEtBQVAsU0FBZ0JELENBQUMsQ0FBQ0gsS0FEdEI7QUFFRSxNQUFBLE9BQU8sRUFBRUwsUUFBUSxDQUFDVSxJQUFULENBQWMsVUFBQUwsS0FBSztBQUFBLGVBQUlBLEtBQUssS0FBS0csQ0FBQyxDQUFDSCxLQUFoQjtBQUFBLE9BQW5CLENBRlg7QUFHRSxNQUFBLFFBQVEsRUFBRSxrQkFBQU0sQ0FBQztBQUFBLGVBQUlULGNBQWMsQ0FBQ00sQ0FBRCxFQUFJRyxDQUFDLENBQUNDLE1BQUYsQ0FBU0MsT0FBYixDQUFsQjtBQUFBO0FBSGIsTUFERixlQU1FLDZCQUFDLGVBQUQ7QUFBTyxNQUFBLEVBQUUsRUFBQyxJQUFWO0FBQWUsTUFBQSxPQUFPLEVBQUtMLENBQUMsQ0FBQ0MsS0FBUCxTQUFnQkQsQ0FBQyxDQUFDSDtBQUF4QyxPQUNHRyxDQUFDLENBQUNDLEtBREwsUUFDY0QsQ0FBQyxDQUFDTSxLQURoQixNQU5GLENBRFk7QUFBQSxHQUFiLENBREgsQ0FERjtBQWdCRCxDQXpCTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMYWJlbCwgQ2hlY2tib3ggfSBmcm9tICdAZGVpdHkvZmFsY29uLXVpJztcbmltcG9ydCB7IEZpbHRlck9wdGlvbiB9IGZyb20gJ0BkZWl0eS9mYWxjb24tZnJvbnQta2l0JztcbmltcG9ydCB7IEZpbHRlckl0ZW1MYXlvdXQgfSBmcm9tICcuL0ZpbHRlckl0ZW1MYXlvdXQnO1xuaW1wb3J0IHsgRmlsdGVySXRlbUxpc3RMYXlvdXQgfSBmcm9tICcuL0ZpbHRlckl0ZW1MaXN0TGF5b3V0JztcblxuZXhwb3J0IHR5cGUgTXVsdGlwbGVGaWx0ZXJQcm9wcyA9IHtcbiAgb3B0aW9uczogRmlsdGVyT3B0aW9uW107XG4gIHNlbGVjdGVkOiBzdHJpbmdbXTtcbiAgb25DaGFuZ2U6ICh2YWx1ZTogc3RyaW5nW10pID0+IHZvaWQ7XG59O1xuXG5leHBvcnQgY29uc3QgTXVsdGlwbGVGaWx0ZXI6IFJlYWN0LlNGQzxNdWx0aXBsZUZpbHRlclByb3BzPiA9ICh7IG9wdGlvbnMsIHNlbGVjdGVkID0gW10sIG9uQ2hhbmdlIH0pID0+IHtcbiAgY29uc3QgaGFuZGxlT25DaGFuZ2UgPSAob3B0aW9uOiBGaWx0ZXJPcHRpb24sIGlzU2VsZWN0ZWQ6IGJvb2xlYW4pID0+IHtcbiAgICBpZiAoaXNTZWxlY3RlZCkge1xuICAgICAgb25DaGFuZ2UoWy4uLnNlbGVjdGVkLCBvcHRpb24udmFsdWVdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgb25DaGFuZ2Uoc2VsZWN0ZWQuZmlsdGVyKHZhbHVlID0+IHZhbHVlICE9PSBvcHRpb24udmFsdWUpKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8RmlsdGVySXRlbUxpc3RMYXlvdXQ+XG4gICAgICB7b3B0aW9ucy5tYXAoeCA9PiAoXG4gICAgICAgIDxGaWx0ZXJJdGVtTGF5b3V0IGtleT17eC52YWx1ZX0+XG4gICAgICAgICAgPENoZWNrYm94XG4gICAgICAgICAgICBpZD17YCR7eC50aXRsZX0tJHt4LnZhbHVlfWB9XG4gICAgICAgICAgICBjaGVja2VkPXtzZWxlY3RlZC5zb21lKHZhbHVlID0+IHZhbHVlID09PSB4LnZhbHVlKX1cbiAgICAgICAgICAgIG9uQ2hhbmdlPXtlID0+IGhhbmRsZU9uQ2hhbmdlKHgsIGUudGFyZ2V0LmNoZWNrZWQpfVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPExhYmVsIG1sPVwic21cIiBodG1sRm9yPXtgJHt4LnRpdGxlfS0ke3gudmFsdWV9YH0+XG4gICAgICAgICAgICB7eC50aXRsZX0gKHt4LmNvdW50fSlcbiAgICAgICAgICA8L0xhYmVsPlxuICAgICAgICA8L0ZpbHRlckl0ZW1MYXlvdXQ+XG4gICAgICApKX1cbiAgICA8L0ZpbHRlckl0ZW1MaXN0TGF5b3V0PlxuICApO1xufTtcbiJdfQ==