"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.ResetPasswordForm = void 0;

var _extends2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _falconFrontKit = /*#__PURE__*/require("@deity/falcon-front-kit");

var _Error = /*#__PURE__*/require("../Error");

var _Forms = /*#__PURE__*/require("../Forms");

var ResetPasswordForm = function ResetPasswordForm(_ref) {
  var onSuccess = _ref.onSuccess,
      resetToken = _ref.resetToken,
      formProps = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["onSuccess", "resetToken"]);
  return /*#__PURE__*/_react.default.createElement(_falconFrontKit.ResetPasswordFormProvider, {
    initialValues: {
      resetToken: resetToken,
      password: ''
    },
    onSuccess: onSuccess
  }, function (_ref2) {
    var status = _ref2.status;
    return /*#__PURE__*/_react.default.createElement(_Forms.Form, (0, _extends2.default)({
      id: "reset-password",
      i18nId: "resetPassword"
    }, formProps), /*#__PURE__*/_react.default.createElement(_Forms.FormField, {
      name: "password",
      required: true,
      type: "password",
      autoComplete: "new-password"
    }, function (_ref3) {
      var field = _ref3.field;
      return /*#__PURE__*/_react.default.createElement(_Forms.PasswordRevealInput, field);
    }), /*#__PURE__*/_react.default.createElement(_Forms.FormSubmit, {
      justifySelf: "center"
    }), /*#__PURE__*/_react.default.createElement(_Error.ErrorSummary, {
      errors: status.error
    }));
  });
};

exports.ResetPasswordForm = ResetPasswordForm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BY2NvdW50L1Jlc2V0UGFzc3dvcmRGb3JtLnRzeCJdLCJuYW1lcyI6WyJSZXNldFBhc3N3b3JkRm9ybSIsIm9uU3VjY2VzcyIsInJlc2V0VG9rZW4iLCJmb3JtUHJvcHMiLCJwYXNzd29yZCIsInN0YXR1cyIsImZpZWxkIiwiZXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBTU8sSUFBTUEsaUJBQW9ELEdBQUcsU0FBdkRBLGlCQUF1RDtBQUFBLE1BQUdDLFNBQUgsUUFBR0EsU0FBSDtBQUFBLE1BQWNDLFVBQWQsUUFBY0EsVUFBZDtBQUFBLE1BQTZCQyxTQUE3QjtBQUFBLHNCQUNsRSw2QkFBQyx5Q0FBRDtBQUEyQixJQUFBLGFBQWEsRUFBRTtBQUFFRCxNQUFBQSxVQUFVLEVBQVZBLFVBQUY7QUFBY0UsTUFBQUEsUUFBUSxFQUFFO0FBQXhCLEtBQTFDO0FBQXdFLElBQUEsU0FBUyxFQUFFSDtBQUFuRixLQUNHO0FBQUEsUUFBR0ksTUFBSCxTQUFHQSxNQUFIO0FBQUEsd0JBQ0MsNkJBQUMsV0FBRDtBQUFNLE1BQUEsRUFBRSxFQUFDLGdCQUFUO0FBQTBCLE1BQUEsTUFBTSxFQUFDO0FBQWpDLE9BQXFERixTQUFyRCxnQkFDRSw2QkFBQyxnQkFBRDtBQUFXLE1BQUEsSUFBSSxFQUFDLFVBQWhCO0FBQTJCLE1BQUEsUUFBUSxNQUFuQztBQUFvQyxNQUFBLElBQUksRUFBQyxVQUF6QztBQUFvRCxNQUFBLFlBQVksRUFBQztBQUFqRSxPQUNHO0FBQUEsVUFBR0csS0FBSCxTQUFHQSxLQUFIO0FBQUEsMEJBQWUsNkJBQUMsMEJBQUQsRUFBeUJBLEtBQXpCLENBQWY7QUFBQSxLQURILENBREYsZUFJRSw2QkFBQyxpQkFBRDtBQUFZLE1BQUEsV0FBVyxFQUFDO0FBQXhCLE1BSkYsZUFLRSw2QkFBQyxtQkFBRDtBQUFjLE1BQUEsTUFBTSxFQUFFRCxNQUFNLENBQUNFO0FBQTdCLE1BTEYsQ0FERDtBQUFBLEdBREgsQ0FEa0U7QUFBQSxDQUE3RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBSZXNldFBhc3N3b3JkRm9ybVByb3ZpZGVyIH0gZnJvbSAnQGRlaXR5L2ZhbGNvbi1mcm9udC1raXQnO1xuaW1wb3J0IHsgRXJyb3JTdW1tYXJ5IH0gZnJvbSAnLi4vRXJyb3InO1xuaW1wb3J0IHsgRm9ybUZpZWxkLCBGb3JtLCBGb3JtUHJvcHMsIEZvcm1TdWJtaXQsIFBhc3N3b3JkUmV2ZWFsSW5wdXQgfSBmcm9tICcuLi9Gb3Jtcyc7XG5cbmV4cG9ydCB0eXBlIFJlc2V0UGFzc3dvcmRGb3JtUHJvcHMgPSBQYXJ0aWFsPEZvcm1Qcm9wcz4gJiB7XG4gIG9uU3VjY2Vzcz86ICgpID0+IFByb21pc2U8dm9pZD47XG4gIHJlc2V0VG9rZW46IHN0cmluZztcbn07XG5leHBvcnQgY29uc3QgUmVzZXRQYXNzd29yZEZvcm06IFJlYWN0LlNGQzxSZXNldFBhc3N3b3JkRm9ybVByb3BzPiA9ICh7IG9uU3VjY2VzcywgcmVzZXRUb2tlbiwgLi4uZm9ybVByb3BzIH0pID0+IChcbiAgPFJlc2V0UGFzc3dvcmRGb3JtUHJvdmlkZXIgaW5pdGlhbFZhbHVlcz17eyByZXNldFRva2VuLCBwYXNzd29yZDogJycgfX0gb25TdWNjZXNzPXtvblN1Y2Nlc3N9PlxuICAgIHsoeyBzdGF0dXMgfSkgPT4gKFxuICAgICAgPEZvcm0gaWQ9XCJyZXNldC1wYXNzd29yZFwiIGkxOG5JZD1cInJlc2V0UGFzc3dvcmRcIiB7Li4uZm9ybVByb3BzfT5cbiAgICAgICAgPEZvcm1GaWVsZCBuYW1lPVwicGFzc3dvcmRcIiByZXF1aXJlZCB0eXBlPVwicGFzc3dvcmRcIiBhdXRvQ29tcGxldGU9XCJuZXctcGFzc3dvcmRcIj5cbiAgICAgICAgICB7KHsgZmllbGQgfSkgPT4gPFBhc3N3b3JkUmV2ZWFsSW5wdXQgey4uLmZpZWxkfSAvPn1cbiAgICAgICAgPC9Gb3JtRmllbGQ+XG4gICAgICAgIDxGb3JtU3VibWl0IGp1c3RpZnlTZWxmPVwiY2VudGVyXCIgLz5cbiAgICAgICAgPEVycm9yU3VtbWFyeSBlcnJvcnM9e3N0YXR1cy5lcnJvcn0gLz5cbiAgICAgIDwvRm9ybT5cbiAgICApfVxuICA8L1Jlc2V0UGFzc3dvcmRGb3JtUHJvdmlkZXI+XG4pO1xuIl19