"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.SignInForm = void 0;

var _extends2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _falconUi = /*#__PURE__*/require("@deity/falcon-ui");

var _falconI18n = /*#__PURE__*/require("@deity/falcon-i18n");

var _falconFrontKit = /*#__PURE__*/require("@deity/falcon-front-kit");

var _Error = /*#__PURE__*/require("../Error");

var _Forms = /*#__PURE__*/require("../Forms");

var SignInForm = function SignInForm(_ref) {
  var onSuccess = _ref.onSuccess,
      onForgotPassword = _ref.onForgotPassword,
      mutationOptions = _ref.mutationOptions,
      formProps = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["onSuccess", "onForgotPassword", "mutationOptions"]);
  return /*#__PURE__*/_react.default.createElement(_falconFrontKit.SignInFormProvider, {
    onSuccess: onSuccess,
    mutationOptions: mutationOptions
  }, function (_ref2) {
    var status = _ref2.status;
    return /*#__PURE__*/_react.default.createElement(_Forms.Form, (0, _extends2.default)({
      i18nId: "signIn"
    }, formProps), /*#__PURE__*/_react.default.createElement(_Forms.FormField, {
      name: "email",
      type: "email",
      required: true,
      autoComplete: "email"
    }), /*#__PURE__*/_react.default.createElement(_Forms.FormField, {
      name: "password",
      type: "password" // pass empty array, so default password strength validator does not get triggered
      ,
      validate: [],
      required: true,
      autoComplete: "current-password"
    }, function (_ref3) {
      var field = _ref3.field;
      return /*#__PURE__*/_react.default.createElement(_Forms.PasswordRevealInput, field);
    }), /*#__PURE__*/_react.default.createElement(_falconUi.FlexLayout, {
      justifyContent: "space-between",
      alignItems: "center",
      mt: "md"
    }, /*#__PURE__*/_react.default.createElement(_falconUi.Link, {
      fontSize: "xs",
      onClick: function onClick() {
        return onForgotPassword();
      }
    }, /*#__PURE__*/_react.default.createElement(_falconI18n.T, {
      id: "signIn.forgotPasswordLink"
    })), /*#__PURE__*/_react.default.createElement(_Forms.FormSubmit, null)), /*#__PURE__*/_react.default.createElement(_Error.ErrorSummary, {
      errors: status.error
    }));
  });
};

exports.SignInForm = SignInForm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9BY2NvdW50L1NpZ25JbkZvcm0udHN4Il0sIm5hbWVzIjpbIlNpZ25JbkZvcm0iLCJvblN1Y2Nlc3MiLCJvbkZvcmdvdFBhc3N3b3JkIiwibXV0YXRpb25PcHRpb25zIiwiZm9ybVByb3BzIiwic3RhdHVzIiwiZmllbGQiLCJlcnJvciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFRTyxJQUFNQSxVQUFzQyxHQUFHLFNBQXpDQSxVQUF5QztBQUFBLE1BQ3BEQyxTQURvRCxRQUNwREEsU0FEb0Q7QUFBQSxNQUVwREMsZ0JBRm9ELFFBRXBEQSxnQkFGb0Q7QUFBQSxNQUdwREMsZUFIb0QsUUFHcERBLGVBSG9EO0FBQUEsTUFJakRDLFNBSmlEO0FBQUEsc0JBTXBELDZCQUFDLGtDQUFEO0FBQW9CLElBQUEsU0FBUyxFQUFFSCxTQUEvQjtBQUEwQyxJQUFBLGVBQWUsRUFBRUU7QUFBM0QsS0FDRztBQUFBLFFBQUdFLE1BQUgsU0FBR0EsTUFBSDtBQUFBLHdCQUNDLDZCQUFDLFdBQUQ7QUFBTSxNQUFBLE1BQU0sRUFBQztBQUFiLE9BQTBCRCxTQUExQixnQkFDRSw2QkFBQyxnQkFBRDtBQUFXLE1BQUEsSUFBSSxFQUFDLE9BQWhCO0FBQXdCLE1BQUEsSUFBSSxFQUFDLE9BQTdCO0FBQXFDLE1BQUEsUUFBUSxNQUE3QztBQUE4QyxNQUFBLFlBQVksRUFBQztBQUEzRCxNQURGLGVBRUUsNkJBQUMsZ0JBQUQ7QUFDRSxNQUFBLElBQUksRUFBQyxVQURQO0FBRUUsTUFBQSxJQUFJLEVBQUMsVUFGUCxDQUdFO0FBSEY7QUFJRSxNQUFBLFFBQVEsRUFBRSxFQUpaO0FBS0UsTUFBQSxRQUFRLE1BTFY7QUFNRSxNQUFBLFlBQVksRUFBQztBQU5mLE9BUUc7QUFBQSxVQUFHRSxLQUFILFNBQUdBLEtBQUg7QUFBQSwwQkFBZSw2QkFBQywwQkFBRCxFQUF5QkEsS0FBekIsQ0FBZjtBQUFBLEtBUkgsQ0FGRixlQVlFLDZCQUFDLG9CQUFEO0FBQVksTUFBQSxjQUFjLEVBQUMsZUFBM0I7QUFBMkMsTUFBQSxVQUFVLEVBQUMsUUFBdEQ7QUFBK0QsTUFBQSxFQUFFLEVBQUM7QUFBbEUsb0JBQ0UsNkJBQUMsY0FBRDtBQUFNLE1BQUEsUUFBUSxFQUFDLElBQWY7QUFBb0IsTUFBQSxPQUFPLEVBQUU7QUFBQSxlQUFNSixnQkFBZ0IsRUFBdEI7QUFBQTtBQUE3QixvQkFDRSw2QkFBQyxhQUFEO0FBQUcsTUFBQSxFQUFFLEVBQUM7QUFBTixNQURGLENBREYsZUFJRSw2QkFBQyxpQkFBRCxPQUpGLENBWkYsZUFtQkUsNkJBQUMsbUJBQUQ7QUFBYyxNQUFBLE1BQU0sRUFBRUcsTUFBTSxDQUFDRTtBQUE3QixNQW5CRixDQUREO0FBQUEsR0FESCxDQU5vRDtBQUFBLENBQS9DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEZsZXhMYXlvdXQsIExpbmsgfSBmcm9tICdAZGVpdHkvZmFsY29uLXVpJztcbmltcG9ydCB7IFQgfSBmcm9tICdAZGVpdHkvZmFsY29uLWkxOG4nO1xuaW1wb3J0IHsgU2lnbkluRm9ybVByb3ZpZGVyLCBGb3JtUHJvdmlkZXJQcm9wcyB9IGZyb20gJ0BkZWl0eS9mYWxjb24tZnJvbnQta2l0JztcbmltcG9ydCB7IEVycm9yU3VtbWFyeSB9IGZyb20gJy4uL0Vycm9yJztcbmltcG9ydCB7IEZvcm1GaWVsZCwgRm9ybSwgRm9ybVByb3BzLCBQYXNzd29yZFJldmVhbElucHV0LCBGb3JtU3VibWl0IH0gZnJvbSAnLi4vRm9ybXMnO1xuXG5leHBvcnQgdHlwZSBTaWduSW5Gb3JtUHJvcHMgPSBQYXJ0aWFsPEZvcm1Qcm9wcz4gJiB7XG4gIG9uU3VjY2Vzcz86ICgpID0+IFByb21pc2U8dm9pZD47XG4gIG9uRm9yZ290UGFzc3dvcmQ6IEZ1bmN0aW9uO1xuICBtdXRhdGlvbk9wdGlvbnM/OiBGb3JtUHJvdmlkZXJQcm9wc1snbXV0YXRpb25PcHRpb25zJ107XG59O1xuXG5leHBvcnQgY29uc3QgU2lnbkluRm9ybTogUmVhY3QuU0ZDPFNpZ25JbkZvcm1Qcm9wcz4gPSAoe1xuICBvblN1Y2Nlc3MsXG4gIG9uRm9yZ290UGFzc3dvcmQsXG4gIG11dGF0aW9uT3B0aW9ucyxcbiAgLi4uZm9ybVByb3BzXG59KSA9PiAoXG4gIDxTaWduSW5Gb3JtUHJvdmlkZXIgb25TdWNjZXNzPXtvblN1Y2Nlc3N9IG11dGF0aW9uT3B0aW9ucz17bXV0YXRpb25PcHRpb25zfT5cbiAgICB7KHsgc3RhdHVzIH0pID0+IChcbiAgICAgIDxGb3JtIGkxOG5JZD1cInNpZ25JblwiIHsuLi5mb3JtUHJvcHN9PlxuICAgICAgICA8Rm9ybUZpZWxkIG5hbWU9XCJlbWFpbFwiIHR5cGU9XCJlbWFpbFwiIHJlcXVpcmVkIGF1dG9Db21wbGV0ZT1cImVtYWlsXCIgLz5cbiAgICAgICAgPEZvcm1GaWVsZFxuICAgICAgICAgIG5hbWU9XCJwYXNzd29yZFwiXG4gICAgICAgICAgdHlwZT1cInBhc3N3b3JkXCJcbiAgICAgICAgICAvLyBwYXNzIGVtcHR5IGFycmF5LCBzbyBkZWZhdWx0IHBhc3N3b3JkIHN0cmVuZ3RoIHZhbGlkYXRvciBkb2VzIG5vdCBnZXQgdHJpZ2dlcmVkXG4gICAgICAgICAgdmFsaWRhdGU9e1tdfVxuICAgICAgICAgIHJlcXVpcmVkXG4gICAgICAgICAgYXV0b0NvbXBsZXRlPVwiY3VycmVudC1wYXNzd29yZFwiXG4gICAgICAgID5cbiAgICAgICAgICB7KHsgZmllbGQgfSkgPT4gPFBhc3N3b3JkUmV2ZWFsSW5wdXQgey4uLmZpZWxkfSAvPn1cbiAgICAgICAgPC9Gb3JtRmllbGQ+XG4gICAgICAgIDxGbGV4TGF5b3V0IGp1c3RpZnlDb250ZW50PVwic3BhY2UtYmV0d2VlblwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBtdD1cIm1kXCI+XG4gICAgICAgICAgPExpbmsgZm9udFNpemU9XCJ4c1wiIG9uQ2xpY2s9eygpID0+IG9uRm9yZ290UGFzc3dvcmQoKX0+XG4gICAgICAgICAgICA8VCBpZD1cInNpZ25Jbi5mb3Jnb3RQYXNzd29yZExpbmtcIiAvPlxuICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgICA8Rm9ybVN1Ym1pdCAvPlxuICAgICAgICA8L0ZsZXhMYXlvdXQ+XG5cbiAgICAgICAgPEVycm9yU3VtbWFyeSBlcnJvcnM9e3N0YXR1cy5lcnJvcn0gLz5cbiAgICAgIDwvRm9ybT5cbiAgICApfVxuICA8L1NpZ25JbkZvcm1Qcm92aWRlcj5cbik7XG4iXX0=