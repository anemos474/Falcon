"use strict";

var _interopRequireWildcard = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.ProductGallery = void 0;

var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));

var _falconUi = /*#__PURE__*/require("@deity/falcon-ui");

var _falconI18n = /*#__PURE__*/require("@deity/falcon-i18n");

var _helpers = /*#__PURE__*/require("../helpers");

var _ProductGalleryLayout = /*#__PURE__*/require("./ProductGalleryLayout");

var _NoProductImagePlaceholder = /*#__PURE__*/require("./NoProductImagePlaceholder");

var _ProductGalleryThumbLayout = /*#__PURE__*/require("./ProductGalleryThumbLayout");

var ProductGallery = function ProductGallery(_ref) {
  var items = _ref.items;
  var scrollableElement = (0, _react.useRef)(null);

  var _useState = (0, _react.useState)(0),
      activeElementIndex = _useState[0],
      setActiveElementIndex = _useState[1];

  var _useI18n = (0, _falconI18n.useI18n)(),
      t = _useI18n.t;

  var scrollToItem = function scrollToItem(elementIndex) {
    var container = scrollableElement.current;

    if (container) {
      container.scrollTo({
        left: elementIndex * container.clientWidth,
        behavior: 'smooth'
      });
    }
  };

  var handleScroll = function handleScroll(event) {
    var container = event.target; // needed because event will be nullified after callback

    if (container) {
      window.requestAnimationFrame(function () {
        // Find the item that has the largest visible portion
        var newIndex = Math.floor(items.length * container.scrollLeft / container.scrollWidth + 0.5);
        setActiveElementIndex(newIndex);
      });
    }
  };

  (0, _react.useEffect)(function () {
    // set Default Image to be active
    var defaultItemIndex = items.findIndex(function (item) {
      return item.isDefault;
    });

    if (defaultItemIndex !== -1) {
      scrollToItem(defaultItemIndex);
    }
  }, [items]);

  if (!items.length) {
    return /*#__PURE__*/_react.default.createElement(_NoProductImagePlaceholder.NoProductImagePlaceholder, null);
  }

  if (items.length === 1) {
    return /*#__PURE__*/_react.default.createElement(_falconUi.Image, {
      src: items[0].full,
      alt: t('productGallery.imageAlt')
    });
  }

  return /*#__PURE__*/_react.default.createElement(_ProductGalleryLayout.ProductGalleryLayout, null, /*#__PURE__*/_react.default.createElement(_falconUi.Box, {
    gridArea: _ProductGalleryLayout.productGalleryLayoutArea.thumbs
  }, items.map(function (item, index) {
    if (item.thumbnail) {
      return /*#__PURE__*/_react.default.createElement(_ProductGalleryThumbLayout.ProductGalleryThumbLayout, {
        onClick: function onClick() {
          return scrollToItem(index);
        },
        "aria-label": t('productGallery.showImageOf', {
          index: index + 1,
          total: items.length
        }),
        variant: index === activeElementIndex && 'selected',
        key: item.full
      }, /*#__PURE__*/_react.default.createElement(_falconUi.Image, {
        key: item.thumbnail,
        src: item.thumbnail,
        alt: t('productGallery.imageAlt')
      }));
    }

    return null;
  })), /*#__PURE__*/_react.default.createElement(_falconUi.Swipeable, {
    gridArea: _ProductGalleryLayout.productGalleryLayoutArea.full,
    ref: scrollableElement,
    onScroll: handleScroll,
    alignItems: "center",
    css: (0, _helpers.noScrollbars)()
  }, items.map(function (item) {
    return /*#__PURE__*/_react.default.createElement(_falconUi.SwipeableItem, {
      key: item.thumbnail,
      as: _falconUi.Image,
      src: item.full,
      alt: t('productGallery.imageAlt')
    });
  })));
};

exports.ProductGallery = ProductGallery;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,