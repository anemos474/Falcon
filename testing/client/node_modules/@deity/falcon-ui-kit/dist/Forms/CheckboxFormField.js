"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.CheckboxFormField = exports.CheckboxFormFieldLayout = void 0;

var _extends2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _falconFrontKit = /*#__PURE__*/require("@deity/falcon-front-kit");

var _falconUi = /*#__PURE__*/require("@deity/falcon-ui");

var _helpers = /*#__PURE__*/require("../helpers");

var _FormFieldError = /*#__PURE__*/require("./FormFieldError");

var _FormFieldLayout = /*#__PURE__*/require("./FormFieldLayout");

var CheckboxFormFieldLayout = /*#__PURE__*/(0, _falconUi.themed)({
  tag: _falconUi.Box,
  defaultTheme: {
    checkboxFormFieldLayout: {
      display: 'grid',
      gridGap: 'xs',
      // prettier-ignore
      gridTemplate: /*#__PURE__*/(0, _helpers.toGridTemplate)([['auto', '1fr'], [_FormFieldLayout.FormFieldArea.input, _FormFieldLayout.FormFieldArea.label], [_FormFieldLayout.FormFieldArea.error, _FormFieldLayout.FormFieldArea.error, '0px']])
    }
  }
});
exports.CheckboxFormFieldLayout = CheckboxFormFieldLayout;

var CheckboxFormField = function CheckboxFormField(props) {
  var name = props.name,
      validate = props.validate,
      required = props.required,
      children = props.children,
      restProps = (0, _objectWithoutPropertiesLoose2.default)(props, ["name", "validate", "required", "children"]);

  var _extractThemableProps = (0, _falconUi.extractThemableProps)(restProps),
      themableProps = _extractThemableProps.themableProps,
      rest = _extractThemableProps.rest;

  return /*#__PURE__*/_react.default.createElement(_falconFrontKit.Field, (0, _extends2.default)({
    name: name,
    validate: (0, _falconFrontKit.getDefaultInputValidators)(props)
  }, rest), function (_ref) {
    var form = _ref.form,
        field = _ref.field,
        label = _ref.label,
        error = _ref.error;
    return /*#__PURE__*/_react.default.createElement(CheckboxFormFieldLayout, themableProps, /*#__PURE__*/_react.default.createElement(_falconUi.Checkbox, (0, _extends2.default)({}, field, {
      gridArea: _FormFieldLayout.FormFieldArea.input,
      checked: field.value,
      onChange: function onChange(e) {
        return form.setFieldValue(field.name, e.target.checked);
      }
    })), /*#__PURE__*/_react.default.createElement(_falconUi.FlexLayout, {
      alignItems: "center",
      gridArea: _FormFieldLayout.FormFieldArea.label
    }, /*#__PURE__*/_react.default.createElement(_falconUi.Label, {
      htmlFor: field.id
    }, label)), /*#__PURE__*/_react.default.createElement(_FormFieldError.FormFieldError, null, field.invalid ? error : null));
  });
};

exports.CheckboxFormField = CheckboxFormField;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Gb3Jtcy9DaGVja2JveEZvcm1GaWVsZC50c3giXSwibmFtZXMiOlsiQ2hlY2tib3hGb3JtRmllbGRMYXlvdXQiLCJ0YWciLCJCb3giLCJkZWZhdWx0VGhlbWUiLCJjaGVja2JveEZvcm1GaWVsZExheW91dCIsImRpc3BsYXkiLCJncmlkR2FwIiwiZ3JpZFRlbXBsYXRlIiwiRm9ybUZpZWxkQXJlYSIsImlucHV0IiwibGFiZWwiLCJlcnJvciIsIkNoZWNrYm94Rm9ybUZpZWxkIiwicHJvcHMiLCJuYW1lIiwidmFsaWRhdGUiLCJyZXF1aXJlZCIsImNoaWxkcmVuIiwicmVzdFByb3BzIiwidGhlbWFibGVQcm9wcyIsInJlc3QiLCJmb3JtIiwiZmllbGQiLCJ2YWx1ZSIsImUiLCJzZXRGaWVsZFZhbHVlIiwidGFyZ2V0IiwiY2hlY2tlZCIsImlkIiwiaW52YWxpZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFFTyxJQUFNQSx1QkFBdUIsZ0JBQUcsc0JBQU87QUFDNUNDLEVBQUFBLEdBQUcsRUFBRUMsYUFEdUM7QUFFNUNDLEVBQUFBLFlBQVksRUFBRTtBQUNaQyxJQUFBQSx1QkFBdUIsRUFBRTtBQUN2QkMsTUFBQUEsT0FBTyxFQUFFLE1BRGM7QUFFdkJDLE1BQUFBLE9BQU8sRUFBRSxJQUZjO0FBR3ZCO0FBQ0FDLE1BQUFBLFlBQVksZUFBRSw2QkFBZSxDQUMzQixDQUFDLE1BQUQsRUFBcUIsS0FBckIsQ0FEMkIsRUFFM0IsQ0FBQ0MsK0JBQWNDLEtBQWYsRUFBc0JELCtCQUFjRSxLQUFwQyxDQUYyQixFQUczQixDQUFDRiwrQkFBY0csS0FBZixFQUFzQkgsK0JBQWNHLEtBQXBDLEVBQTJDLEtBQTNDLENBSDJCLENBQWY7QUFKUztBQURiO0FBRjhCLENBQVAsQ0FBaEM7OztBQWdCQSxJQUFNQyxpQkFBNEMsR0FBRyxTQUEvQ0EsaUJBQStDLENBQUFDLEtBQUssRUFBSTtBQUNuRSxNQUFRQyxJQUFSLEdBQTZERCxLQUE3RCxDQUFRQyxJQUFSO0FBQUEsTUFBY0MsUUFBZCxHQUE2REYsS0FBN0QsQ0FBY0UsUUFBZDtBQUFBLE1BQXdCQyxRQUF4QixHQUE2REgsS0FBN0QsQ0FBd0JHLFFBQXhCO0FBQUEsTUFBa0NDLFFBQWxDLEdBQTZESixLQUE3RCxDQUFrQ0ksUUFBbEM7QUFBQSxNQUErQ0MsU0FBL0MsK0NBQTZETCxLQUE3RDs7QUFDQSw4QkFBZ0Msb0NBQXFCSyxTQUFyQixDQUFoQztBQUFBLE1BQVFDLGFBQVIseUJBQVFBLGFBQVI7QUFBQSxNQUF1QkMsSUFBdkIseUJBQXVCQSxJQUF2Qjs7QUFFQSxzQkFDRSw2QkFBQyxxQkFBRDtBQUFPLElBQUEsSUFBSSxFQUFFTixJQUFiO0FBQW1CLElBQUEsUUFBUSxFQUFFLCtDQUEwQkQsS0FBMUI7QUFBN0IsS0FBbUVPLElBQW5FLEdBQ0c7QUFBQSxRQUFHQyxJQUFILFFBQUdBLElBQUg7QUFBQSxRQUFTQyxLQUFULFFBQVNBLEtBQVQ7QUFBQSxRQUFnQlosS0FBaEIsUUFBZ0JBLEtBQWhCO0FBQUEsUUFBdUJDLEtBQXZCLFFBQXVCQSxLQUF2QjtBQUFBLHdCQUNDLDZCQUFDLHVCQUFELEVBQTZCUSxhQUE3QixlQUNFLDZCQUFDLGtCQUFELDZCQUNNRyxLQUROO0FBRUUsTUFBQSxRQUFRLEVBQUVkLCtCQUFjQyxLQUYxQjtBQUdFLE1BQUEsT0FBTyxFQUFFYSxLQUFLLENBQUNDLEtBSGpCO0FBSUUsTUFBQSxRQUFRLEVBQUUsa0JBQUFDLENBQUM7QUFBQSxlQUFJSCxJQUFJLENBQUNJLGFBQUwsQ0FBbUJILEtBQUssQ0FBQ1IsSUFBekIsRUFBK0JVLENBQUMsQ0FBQ0UsTUFBRixDQUFTQyxPQUF4QyxDQUFKO0FBQUE7QUFKYixPQURGLGVBT0UsNkJBQUMsb0JBQUQ7QUFBWSxNQUFBLFVBQVUsRUFBQyxRQUF2QjtBQUFnQyxNQUFBLFFBQVEsRUFBRW5CLCtCQUFjRTtBQUF4RCxvQkFDRSw2QkFBQyxlQUFEO0FBQU8sTUFBQSxPQUFPLEVBQUVZLEtBQUssQ0FBQ007QUFBdEIsT0FBMkJsQixLQUEzQixDQURGLENBUEYsZUFXRSw2QkFBQyw4QkFBRCxRQUFpQlksS0FBSyxDQUFDTyxPQUFOLEdBQWdCbEIsS0FBaEIsR0FBd0IsSUFBekMsQ0FYRixDQUREO0FBQUEsR0FESCxDQURGO0FBbUJELENBdkJNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEZpZWxkLCBnZXREZWZhdWx0SW5wdXRWYWxpZGF0b3JzIH0gZnJvbSAnQGRlaXR5L2ZhbGNvbi1mcm9udC1raXQnO1xuaW1wb3J0IHsgQm94LCBMYWJlbCwgQ2hlY2tib3gsIEZsZXhMYXlvdXQsIGV4dHJhY3RUaGVtYWJsZVByb3BzLCB0aGVtZWQgfSBmcm9tICdAZGVpdHkvZmFsY29uLXVpJztcbmltcG9ydCB7IHRvR3JpZFRlbXBsYXRlIH0gZnJvbSAnLi4vaGVscGVycyc7XG5pbXBvcnQgeyBGb3JtRmllbGRQcm9wcyB9IGZyb20gJy4vRm9ybUZpZWxkJztcbmltcG9ydCB7IEZvcm1GaWVsZEVycm9yIH0gZnJvbSAnLi9Gb3JtRmllbGRFcnJvcic7XG5pbXBvcnQgeyBGb3JtRmllbGRBcmVhIH0gZnJvbSAnLi9Gb3JtRmllbGRMYXlvdXQnO1xuXG5leHBvcnQgY29uc3QgQ2hlY2tib3hGb3JtRmllbGRMYXlvdXQgPSB0aGVtZWQoe1xuICB0YWc6IEJveCxcbiAgZGVmYXVsdFRoZW1lOiB7XG4gICAgY2hlY2tib3hGb3JtRmllbGRMYXlvdXQ6IHtcbiAgICAgIGRpc3BsYXk6ICdncmlkJyxcbiAgICAgIGdyaWRHYXA6ICd4cycsXG4gICAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICAgIGdyaWRUZW1wbGF0ZTogdG9HcmlkVGVtcGxhdGUoW1xuICAgICAgICBbJ2F1dG8nLCAgICAgICAgICAgICAnMWZyJyAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICBbRm9ybUZpZWxkQXJlYS5pbnB1dCwgRm9ybUZpZWxkQXJlYS5sYWJlbCAgICAgICBdLFxuICAgICAgICBbRm9ybUZpZWxkQXJlYS5lcnJvciwgRm9ybUZpZWxkQXJlYS5lcnJvciwgJzBweCddXG4gICAgICBdKVxuICAgIH1cbiAgfVxufSk7XG5cbmV4cG9ydCBjb25zdCBDaGVja2JveEZvcm1GaWVsZDogUmVhY3QuU0ZDPEZvcm1GaWVsZFByb3BzPiA9IHByb3BzID0+IHtcbiAgY29uc3QgeyBuYW1lLCB2YWxpZGF0ZSwgcmVxdWlyZWQsIGNoaWxkcmVuLCAuLi5yZXN0UHJvcHMgfSA9IHByb3BzO1xuICBjb25zdCB7IHRoZW1hYmxlUHJvcHMsIHJlc3QgfSA9IGV4dHJhY3RUaGVtYWJsZVByb3BzKHJlc3RQcm9wcyk7XG5cbiAgcmV0dXJuIChcbiAgICA8RmllbGQgbmFtZT17bmFtZX0gdmFsaWRhdGU9e2dldERlZmF1bHRJbnB1dFZhbGlkYXRvcnMocHJvcHMpfSB7Li4ucmVzdH0+XG4gICAgICB7KHsgZm9ybSwgZmllbGQsIGxhYmVsLCBlcnJvciB9KSA9PiAoXG4gICAgICAgIDxDaGVja2JveEZvcm1GaWVsZExheW91dCB7Li4udGhlbWFibGVQcm9wc30+XG4gICAgICAgICAgPENoZWNrYm94XG4gICAgICAgICAgICB7Li4uZmllbGR9XG4gICAgICAgICAgICBncmlkQXJlYT17Rm9ybUZpZWxkQXJlYS5pbnB1dH1cbiAgICAgICAgICAgIGNoZWNrZWQ9e2ZpZWxkLnZhbHVlfVxuICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4gZm9ybS5zZXRGaWVsZFZhbHVlKGZpZWxkLm5hbWUsIGUudGFyZ2V0LmNoZWNrZWQpfVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPEZsZXhMYXlvdXQgYWxpZ25JdGVtcz1cImNlbnRlclwiIGdyaWRBcmVhPXtGb3JtRmllbGRBcmVhLmxhYmVsfT5cbiAgICAgICAgICAgIDxMYWJlbCBodG1sRm9yPXtmaWVsZC5pZH0+e2xhYmVsfTwvTGFiZWw+XG4gICAgICAgICAgPC9GbGV4TGF5b3V0PlxuXG4gICAgICAgICAgPEZvcm1GaWVsZEVycm9yPntmaWVsZC5pbnZhbGlkID8gZXJyb3IgOiBudWxsfTwvRm9ybUZpZWxkRXJyb3I+XG4gICAgICAgIDwvQ2hlY2tib3hGb3JtRmllbGRMYXlvdXQ+XG4gICAgICApfVxuICAgIDwvRmllbGQ+XG4gICk7XG59O1xuIl19