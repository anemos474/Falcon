"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.SelectInput = void 0;

var _objectWithoutPropertiesLoose2 = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _falconUi = /*#__PURE__*/require("@deity/falcon-ui");

var OptionList = /*#__PURE__*/_react.default.memo(function (_ref) {
  var options = _ref.options;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, options.map(function (x) {
    return /*#__PURE__*/_react.default.createElement("option", {
      key: x.value + "-" + x.label,
      value: x.value
    }, x.label);
  }));
});
/**
 * @see https://stackoverflow.com/a/49020529/412319
 * @internal
 */


var Placeholder = function Placeholder(_ref2) {
  var value = _ref2.value;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("option", {
    key: value + "-a",
    hidden: true
  }, value), /*#__PURE__*/_react.default.createElement("option", {
    key: value + "-b",
    disabled: true,
    default: true
  }, value));
};

var SelectInput = /*#__PURE__*/_react.default.memo(function (_ref3) {
  var options = _ref3.options,
      placeholder = _ref3.placeholder,
      rest = (0, _objectWithoutPropertiesLoose2.default)(_ref3, ["options", "placeholder"]);
  return /*#__PURE__*/_react.default.createElement(_falconUi.Select, rest, placeholder && /*#__PURE__*/_react.default.createElement(Placeholder, {
    value: placeholder
  }), /*#__PURE__*/_react.default.createElement(OptionList, {
    options: options
  }));
});

exports.SelectInput = SelectInput;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Gb3Jtcy9TZWxlY3RJbnB1dC50c3giXSwibmFtZXMiOlsiT3B0aW9uTGlzdCIsIlJlYWN0IiwibWVtbyIsIm9wdGlvbnMiLCJtYXAiLCJ4IiwidmFsdWUiLCJsYWJlbCIsIlBsYWNlaG9sZGVyIiwiZGVmYXVsdCIsIlNlbGVjdElucHV0IiwicGxhY2Vob2xkZXIiLCJyZXN0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFPQSxJQUFNQSxVQUFVLGdCQUFHQyxlQUFNQyxJQUFOLENBQTZDO0FBQUEsTUFBR0MsT0FBSCxRQUFHQSxPQUFIO0FBQUEsc0JBQzlELDREQUNHQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxVQUFBQyxDQUFDO0FBQUEsd0JBQ1o7QUFBUSxNQUFBLEdBQUcsRUFBS0EsQ0FBQyxDQUFDQyxLQUFQLFNBQWdCRCxDQUFDLENBQUNFLEtBQTdCO0FBQXNDLE1BQUEsS0FBSyxFQUFFRixDQUFDLENBQUNDO0FBQS9DLE9BQ0dELENBQUMsQ0FBQ0UsS0FETCxDQURZO0FBQUEsR0FBYixDQURILENBRDhEO0FBQUEsQ0FBN0MsQ0FBbkI7QUFVQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EsSUFBTUMsV0FBVyxHQUFHLFNBQWRBLFdBQWM7QUFBQSxNQUFHRixLQUFILFNBQUdBLEtBQUg7QUFBQSxzQkFDbEIseUVBQ0U7QUFBUSxJQUFBLEdBQUcsRUFBS0EsS0FBTCxPQUFYO0FBQTJCLElBQUEsTUFBTTtBQUFqQyxLQUNHQSxLQURILENBREYsZUFJRTtBQUFRLElBQUEsR0FBRyxFQUFLQSxLQUFMLE9BQVg7QUFBMkIsSUFBQSxRQUFRLE1BQW5DO0FBQTBDRyxJQUFBQSxPQUFPLEVBQUU7QUFBbkQsS0FDR0gsS0FESCxDQUpGLENBRGtCO0FBQUEsQ0FBcEI7O0FBZU8sSUFBTUksV0FBdUMsZ0JBQUdULGVBQU1DLElBQU4sQ0FBVyxpQkFBdUM7QUFBQSxNQUFwQ0MsT0FBb0MsU0FBcENBLE9BQW9DO0FBQUEsTUFBM0JRLFdBQTJCLFNBQTNCQSxXQUEyQjtBQUFBLE1BQVhDLElBQVc7QUFDdkcsc0JBQ0UsNkJBQUMsZ0JBQUQsRUFBWUEsSUFBWixFQUNHRCxXQUFXLGlCQUFJLDZCQUFDLFdBQUQ7QUFBYSxJQUFBLEtBQUssRUFBRUE7QUFBcEIsSUFEbEIsZUFFRSw2QkFBQyxVQUFEO0FBQVksSUFBQSxPQUFPLEVBQUVSO0FBQXJCLElBRkYsQ0FERjtBQU1ELENBUHNELENBQWhEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFNlbGVjdCwgVGhlbWluZ1Byb3BzIH0gZnJvbSAnQGRlaXR5L2ZhbGNvbi11aSc7XG5cbmV4cG9ydCB0eXBlIFNlbGVjdElucHV0T3B0aW9uID0ge1xuICB2YWx1ZTogc3RyaW5nIHwgbnVtYmVyO1xuICBsYWJlbDogc3RyaW5nO1xufTtcblxuY29uc3QgT3B0aW9uTGlzdCA9IFJlYWN0Lm1lbW88eyBvcHRpb25zOiBTZWxlY3RJbnB1dE9wdGlvbltdIH0+KCh7IG9wdGlvbnMgfSkgPT4gKFxuICA8PlxuICAgIHtvcHRpb25zLm1hcCh4ID0+IChcbiAgICAgIDxvcHRpb24ga2V5PXtgJHt4LnZhbHVlfS0ke3gubGFiZWx9YH0gdmFsdWU9e3gudmFsdWV9PlxuICAgICAgICB7eC5sYWJlbH1cbiAgICAgIDwvb3B0aW9uPlxuICAgICkpfVxuICA8Lz5cbikpO1xuXG4vKipcbiAqIEBzZWUgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzQ5MDIwNTI5LzQxMjMxOVxuICogQGludGVybmFsXG4gKi9cbmNvbnN0IFBsYWNlaG9sZGVyID0gKHsgdmFsdWUgfSkgPT4gKFxuICA8PlxuICAgIDxvcHRpb24ga2V5PXtgJHt2YWx1ZX0tYWB9IGhpZGRlbj5cbiAgICAgIHt2YWx1ZX1cbiAgICA8L29wdGlvbj5cbiAgICA8b3B0aW9uIGtleT17YCR7dmFsdWV9LWJgfSBkaXNhYmxlZCB7Li4ueyBkZWZhdWx0OiB0cnVlIH19PlxuICAgICAge3ZhbHVlfVxuICAgIDwvb3B0aW9uPlxuICA8Lz5cbik7XG5cbmV4cG9ydCB0eXBlIFNlbGVjdElucHV0UHJvcHMgPSBUaGVtaW5nUHJvcHMgJlxuICBSZWFjdC5JbnB1dEhUTUxBdHRyaWJ1dGVzPEhUTUxTZWxlY3RFbGVtZW50PiAmIHtcbiAgICBvcHRpb25zOiBTZWxlY3RJbnB1dE9wdGlvbltdO1xuICB9O1xuZXhwb3J0IGNvbnN0IFNlbGVjdElucHV0OiBSZWFjdC5GQzxTZWxlY3RJbnB1dFByb3BzPiA9IFJlYWN0Lm1lbW8oKHsgb3B0aW9ucywgcGxhY2Vob2xkZXIsIC4uLnJlc3QgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxTZWxlY3Qgey4uLnJlc3R9PlxuICAgICAge3BsYWNlaG9sZGVyICYmIDxQbGFjZWhvbGRlciB2YWx1ZT17cGxhY2Vob2xkZXJ9IC8+fVxuICAgICAgPE9wdGlvbkxpc3Qgb3B0aW9ucz17b3B0aW9uc30gLz5cbiAgICA8L1NlbGVjdD5cbiAgKTtcbn0pO1xuIl19