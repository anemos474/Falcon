"use strict";

var _interopRequireDefault = /*#__PURE__*/require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.ProductListSchema = exports.ProductSchema = void 0;

var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));

var _falconFrontKit = /*#__PURE__*/require("@deity/falcon-front-kit");

var _JsonLd = /*#__PURE__*/require("./JsonLd");

/**
 * Get the final price of a product
 * @param {*} price
 */
var getProductFinalPrice = function getProductFinalPrice(price) {
  var regular = price.regular,
      special = price.special;

  if (special > 0 && special < regular) {
    return special;
  }

  return regular;
};
/**
 * Get the image for a product
 * @param {*} product
 */


var getProductImage = function getProductImage(product) {
  var _product$gallery = product.gallery,
      gallery = _product$gallery === void 0 ? [] : _product$gallery,
      _product$thumbnail = product.thumbnail,
      thumbnail = _product$thumbnail === void 0 ? null : _product$thumbnail;

  if (gallery.length) {
    return gallery[0].thumbnail;
  }

  if (thumbnail) {
    return thumbnail;
  }

  return null;
};

/**
 * Get the schema data for a product.
 * @param product
 * @param fallbackCurrency currency to be used when product does not have one
 */
var getProductSchemaData = function getProductSchemaData(product, fallbackCurrency) {
  if (!product) {
    return null;
  }

  var schema = {
    '@context': 'http://schema.org',
    '@type': 'Product',
    name: product.name,
    image: getProductImage(product),
    sku: product.sku,
    description: product.description,
    offers: {
      '@type': 'Offer',
      priceCurrency: product.currency ? product.currency : fallbackCurrency,
      price: getProductFinalPrice(product.price),
      availability: 'http://schema.org/InStock'
    }
  };

  if (product.urlPath) {
    schema.url = product.urlPath;
  }

  return schema;
};

var ProductSchema = function ProductSchema(_ref) {
  var product = _ref.product;

  var _useCurrency = (0, _falconFrontKit.useCurrency)(),
      currency = _useCurrency.currency;

  var schemaData = getProductSchemaData(product, currency);
  return /*#__PURE__*/_react.default.createElement(_JsonLd.JsonLd, {
    item: schemaData
  });
};

exports.ProductSchema = ProductSchema;

var ProductListSchema = function ProductListSchema(_ref2) {
  var items = _ref2.items;

  var _useCurrency2 = (0, _falconFrontKit.useCurrency)(),
      currency = _useCurrency2.currency;

  if (!items.length) {
    return null;
  }

  var products = items.map(function (item) {
    return getProductSchemaData(item, currency);
  });
  var schemaData = {
    '@context': 'http://schema.org',
    '@graph': products
  };
  return /*#__PURE__*/_react.default.createElement(_JsonLd.JsonLd, {
    item: schemaData
  });
};

exports.ProductListSchema = ProductListSchema;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TRU8vUHJvZHVjdFNjaGVtYS50c3giXSwibmFtZXMiOlsiZ2V0UHJvZHVjdEZpbmFsUHJpY2UiLCJwcmljZSIsInJlZ3VsYXIiLCJzcGVjaWFsIiwiZ2V0UHJvZHVjdEltYWdlIiwicHJvZHVjdCIsImdhbGxlcnkiLCJ0aHVtYm5haWwiLCJsZW5ndGgiLCJnZXRQcm9kdWN0U2NoZW1hRGF0YSIsImZhbGxiYWNrQ3VycmVuY3kiLCJzY2hlbWEiLCJuYW1lIiwiaW1hZ2UiLCJza3UiLCJkZXNjcmlwdGlvbiIsIm9mZmVycyIsInByaWNlQ3VycmVuY3kiLCJjdXJyZW5jeSIsImF2YWlsYWJpbGl0eSIsInVybFBhdGgiLCJ1cmwiLCJQcm9kdWN0U2NoZW1hIiwic2NoZW1hRGF0YSIsIlByb2R1Y3RMaXN0U2NoZW1hIiwiaXRlbXMiLCJwcm9kdWN0cyIsIm1hcCIsIml0ZW0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQU1BLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBdUIsQ0FBQUMsS0FBSyxFQUFJO0FBQ3BDLE1BQVFDLE9BQVIsR0FBNkJELEtBQTdCLENBQVFDLE9BQVI7QUFBQSxNQUFpQkMsT0FBakIsR0FBNkJGLEtBQTdCLENBQWlCRSxPQUFqQjs7QUFDQSxNQUFJQSxPQUFPLEdBQUcsQ0FBVixJQUFlQSxPQUFPLEdBQUdELE9BQTdCLEVBQXNDO0FBQ3BDLFdBQU9DLE9BQVA7QUFDRDs7QUFDRCxTQUFPRCxPQUFQO0FBQ0QsQ0FORDtBQVFBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSxJQUFNRSxlQUFlLEdBQUcsU0FBbEJBLGVBQWtCLENBQUFDLE9BQU8sRUFBSTtBQUNqQyx5QkFBMkNBLE9BQTNDLENBQVFDLE9BQVI7QUFBQSxNQUFRQSxPQUFSLGlDQUFrQixFQUFsQjtBQUFBLDJCQUEyQ0QsT0FBM0MsQ0FBc0JFLFNBQXRCO0FBQUEsTUFBc0JBLFNBQXRCLG1DQUFrQyxJQUFsQzs7QUFDQSxNQUFJRCxPQUFPLENBQUNFLE1BQVosRUFBb0I7QUFDbEIsV0FBT0YsT0FBTyxDQUFDLENBQUQsQ0FBUCxDQUFXQyxTQUFsQjtBQUNEOztBQUNELE1BQUlBLFNBQUosRUFBZTtBQUNiLFdBQU9BLFNBQVA7QUFDRDs7QUFDRCxTQUFPLElBQVA7QUFDRCxDQVREOztBQXdDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUUsb0JBQW9CLEdBQUcsU0FBdkJBLG9CQUF1QixDQUFpQ0osT0FBakMsRUFBNkNLLGdCQUE3QyxFQUFrRTtBQUM3RixNQUFJLENBQUNMLE9BQUwsRUFBYztBQUNaLFdBQU8sSUFBUDtBQUNEOztBQUNELE1BQU1NLE1BQXlCLEdBQUc7QUFDaEMsZ0JBQVksbUJBRG9CO0FBRWhDLGFBQVMsU0FGdUI7QUFHaENDLElBQUFBLElBQUksRUFBRVAsT0FBTyxDQUFDTyxJQUhrQjtBQUloQ0MsSUFBQUEsS0FBSyxFQUFFVCxlQUFlLENBQUNDLE9BQUQsQ0FKVTtBQUtoQ1MsSUFBQUEsR0FBRyxFQUFFVCxPQUFPLENBQUNTLEdBTG1CO0FBTWhDQyxJQUFBQSxXQUFXLEVBQUVWLE9BQU8sQ0FBQ1UsV0FOVztBQU9oQ0MsSUFBQUEsTUFBTSxFQUFFO0FBQ04sZUFBUyxPQURIO0FBRU5DLE1BQUFBLGFBQWEsRUFBRVosT0FBTyxDQUFDYSxRQUFSLEdBQW1CYixPQUFPLENBQUNhLFFBQTNCLEdBQXNDUixnQkFGL0M7QUFHTlQsTUFBQUEsS0FBSyxFQUFFRCxvQkFBb0IsQ0FBQ0ssT0FBTyxDQUFDSixLQUFULENBSHJCO0FBSU5rQixNQUFBQSxZQUFZLEVBQUU7QUFKUjtBQVB3QixHQUFsQzs7QUFlQSxNQUFJZCxPQUFPLENBQUNlLE9BQVosRUFBcUI7QUFDbkJULElBQUFBLE1BQU0sQ0FBQ1UsR0FBUCxHQUFhaEIsT0FBTyxDQUFDZSxPQUFyQjtBQUNEOztBQUVELFNBQU9ULE1BQVA7QUFDRCxDQXhCRDs7QUEwQk8sSUFBTVcsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixPQUFpQjtBQUFBLE1BQWRqQixPQUFjLFFBQWRBLE9BQWM7O0FBQzVDLHFCQUFxQixrQ0FBckI7QUFBQSxNQUFRYSxRQUFSLGdCQUFRQSxRQUFSOztBQUNBLE1BQU1LLFVBQVUsR0FBR2Qsb0JBQW9CLENBQUNKLE9BQUQsRUFBVWEsUUFBVixDQUF2QztBQUNBLHNCQUFPLDZCQUFDLGNBQUQ7QUFBUSxJQUFBLElBQUksRUFBRUs7QUFBZCxJQUFQO0FBQ0QsQ0FKTTs7OztBQU1BLElBQU1DLGlCQUFpQixHQUFHLFNBQXBCQSxpQkFBb0IsUUFBZTtBQUFBLE1BQVpDLEtBQVksU0FBWkEsS0FBWTs7QUFDOUMsc0JBQXFCLGtDQUFyQjtBQUFBLE1BQVFQLFFBQVIsaUJBQVFBLFFBQVI7O0FBQ0EsTUFBSSxDQUFDTyxLQUFLLENBQUNqQixNQUFYLEVBQW1CO0FBQ2pCLFdBQU8sSUFBUDtBQUNEOztBQUNELE1BQU1rQixRQUFRLEdBQUdELEtBQUssQ0FBQ0UsR0FBTixDQUFVLFVBQUFDLElBQUksRUFBSTtBQUNqQyxXQUFPbkIsb0JBQW9CLENBQUNtQixJQUFELEVBQU9WLFFBQVAsQ0FBM0I7QUFDRCxHQUZnQixDQUFqQjtBQUlBLE1BQU1LLFVBQVUsR0FBRztBQUNqQixnQkFBWSxtQkFESztBQUVqQixjQUFVRztBQUZPLEdBQW5CO0FBS0Esc0JBQU8sNkJBQUMsY0FBRDtBQUFRLElBQUEsSUFBSSxFQUFFSDtBQUFkLElBQVA7QUFDRCxDQWZNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUN1cnJlbmN5IH0gZnJvbSAnQGRlaXR5L2ZhbGNvbi1mcm9udC1raXQnO1xuaW1wb3J0IHsgSnNvbkxkIH0gZnJvbSAnLi9Kc29uTGQnO1xuXG4vKipcbiAqIEdldCB0aGUgZmluYWwgcHJpY2Ugb2YgYSBwcm9kdWN0XG4gKiBAcGFyYW0geyp9IHByaWNlXG4gKi9cbmNvbnN0IGdldFByb2R1Y3RGaW5hbFByaWNlID0gcHJpY2UgPT4ge1xuICBjb25zdCB7IHJlZ3VsYXIsIHNwZWNpYWwgfSA9IHByaWNlO1xuICBpZiAoc3BlY2lhbCA+IDAgJiYgc3BlY2lhbCA8IHJlZ3VsYXIpIHtcbiAgICByZXR1cm4gc3BlY2lhbDtcbiAgfVxuICByZXR1cm4gcmVndWxhcjtcbn07XG5cbi8qKlxuICogR2V0IHRoZSBpbWFnZSBmb3IgYSBwcm9kdWN0XG4gKiBAcGFyYW0geyp9IHByb2R1Y3RcbiAqL1xuY29uc3QgZ2V0UHJvZHVjdEltYWdlID0gcHJvZHVjdCA9PiB7XG4gIGNvbnN0IHsgZ2FsbGVyeSA9IFtdLCB0aHVtYm5haWwgPSBudWxsIH0gPSBwcm9kdWN0O1xuICBpZiAoZ2FsbGVyeS5sZW5ndGgpIHtcbiAgICByZXR1cm4gZ2FsbGVyeVswXS50aHVtYm5haWw7XG4gIH1cbiAgaWYgKHRodW1ibmFpbCkge1xuICAgIHJldHVybiB0aHVtYm5haWw7XG4gIH1cbiAgcmV0dXJuIG51bGw7XG59O1xuXG5leHBvcnQgaW50ZXJmYWNlIE9mZmVyc1NjaGVtYURhdGEge1xuICAnQHR5cGUnOiBzdHJpbmc7XG4gIHByaWNlQ3VycmVuY3k6IHN0cmluZztcbiAgcHJpY2U6IG51bWJlcjtcbiAgYXZhaWxhYmlsaXR5OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUHJvZHVjdFNjaGVtYURhdGEge1xuICAnQGNvbnRleHQnOiBzdHJpbmc7XG4gICdAdHlwZSc6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBpbWFnZTogc3RyaW5nO1xuICBza3U6IHN0cmluZztcbiAgZGVzY3JpcHRpb246IHN0cmluZztcbiAgb2ZmZXJzOiBPZmZlcnNTY2hlbWFEYXRhO1xuICB1cmw/OiBzdHJpbmc7XG59XG5cbnR5cGUgUHJvZHVjdERhdGFGb3JTY2hlbWEgPSB7XG4gIG5hbWU6IHN0cmluZztcbiAgc2t1OiBzdHJpbmc7XG4gIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gIGN1cnJlbmN5OiBzdHJpbmc7XG4gIHByaWNlOiBudW1iZXI7XG4gIGdhbGxlcnk/OiBzdHJpbmdbXTtcbiAgdGh1bWJuYWlsPzogc3RyaW5nO1xuICB1cmxQYXRoPzogc3RyaW5nO1xufTtcblxuLyoqXG4gKiBHZXQgdGhlIHNjaGVtYSBkYXRhIGZvciBhIHByb2R1Y3QuXG4gKiBAcGFyYW0gcHJvZHVjdFxuICogQHBhcmFtIGZhbGxiYWNrQ3VycmVuY3kgY3VycmVuY3kgdG8gYmUgdXNlZCB3aGVuIHByb2R1Y3QgZG9lcyBub3QgaGF2ZSBvbmVcbiAqL1xuY29uc3QgZ2V0UHJvZHVjdFNjaGVtYURhdGEgPSA8UCBleHRlbmRzIFByb2R1Y3REYXRhRm9yU2NoZW1hPihwcm9kdWN0OiBQLCBmYWxsYmFja0N1cnJlbmN5KSA9PiB7XG4gIGlmICghcHJvZHVjdCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIGNvbnN0IHNjaGVtYTogUHJvZHVjdFNjaGVtYURhdGEgPSB7XG4gICAgJ0Bjb250ZXh0JzogJ2h0dHA6Ly9zY2hlbWEub3JnJyxcbiAgICAnQHR5cGUnOiAnUHJvZHVjdCcsXG4gICAgbmFtZTogcHJvZHVjdC5uYW1lLFxuICAgIGltYWdlOiBnZXRQcm9kdWN0SW1hZ2UocHJvZHVjdCksXG4gICAgc2t1OiBwcm9kdWN0LnNrdSxcbiAgICBkZXNjcmlwdGlvbjogcHJvZHVjdC5kZXNjcmlwdGlvbixcbiAgICBvZmZlcnM6IHtcbiAgICAgICdAdHlwZSc6ICdPZmZlcicsXG4gICAgICBwcmljZUN1cnJlbmN5OiBwcm9kdWN0LmN1cnJlbmN5ID8gcHJvZHVjdC5jdXJyZW5jeSA6IGZhbGxiYWNrQ3VycmVuY3ksXG4gICAgICBwcmljZTogZ2V0UHJvZHVjdEZpbmFsUHJpY2UocHJvZHVjdC5wcmljZSksXG4gICAgICBhdmFpbGFiaWxpdHk6ICdodHRwOi8vc2NoZW1hLm9yZy9JblN0b2NrJ1xuICAgIH1cbiAgfTtcblxuICBpZiAocHJvZHVjdC51cmxQYXRoKSB7XG4gICAgc2NoZW1hLnVybCA9IHByb2R1Y3QudXJsUGF0aDtcbiAgfVxuXG4gIHJldHVybiBzY2hlbWE7XG59O1xuXG5leHBvcnQgY29uc3QgUHJvZHVjdFNjaGVtYSA9ICh7IHByb2R1Y3QgfSkgPT4ge1xuICBjb25zdCB7IGN1cnJlbmN5IH0gPSB1c2VDdXJyZW5jeSgpO1xuICBjb25zdCBzY2hlbWFEYXRhID0gZ2V0UHJvZHVjdFNjaGVtYURhdGEocHJvZHVjdCwgY3VycmVuY3kpO1xuICByZXR1cm4gPEpzb25MZCBpdGVtPXtzY2hlbWFEYXRhfSAvPjtcbn07XG5cbmV4cG9ydCBjb25zdCBQcm9kdWN0TGlzdFNjaGVtYSA9ICh7IGl0ZW1zIH0pID0+IHtcbiAgY29uc3QgeyBjdXJyZW5jeSB9ID0gdXNlQ3VycmVuY3koKTtcbiAgaWYgKCFpdGVtcy5sZW5ndGgpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBjb25zdCBwcm9kdWN0cyA9IGl0ZW1zLm1hcChpdGVtID0+IHtcbiAgICByZXR1cm4gZ2V0UHJvZHVjdFNjaGVtYURhdGEoaXRlbSwgY3VycmVuY3kpO1xuICB9KTtcblxuICBjb25zdCBzY2hlbWFEYXRhID0ge1xuICAgICdAY29udGV4dCc6ICdodHRwOi8vc2NoZW1hLm9yZycsXG4gICAgJ0BncmFwaCc6IHByb2R1Y3RzXG4gIH07XG5cbiAgcmV0dXJuIDxKc29uTGQgaXRlbT17c2NoZW1hRGF0YX0gLz47XG59O1xuIl19