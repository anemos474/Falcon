const fs = require('fs');
const { getTopFrame, getStackTraceLines, separateMessageFromStack } = require('jest-message-util');
const { codeFrameColumns } = require('@babel/code-frame');

function pretty(error) {
  const { message, stack } = error;
  const fallback = `${message}${stack}`;

  const topFrame = getTopFrame(getStackTraceLines(stack));
  if (!topFrame) {
    return fallback;
  }

  const { file, line } = topFrame;
  try {
    const result = codeFrameColumns(fs.readFileSync(file, 'utf8'), { start: { line } }, { highlightCode: true });
    return `\n${message}\n\n${result}\n${stack}\n`;
  } catch (e) {
    return fallback;
  }
}

function prettyErrors(transform) {
  const { prepareStackTrace } = Error;

  Error.prepareStackTrace = (error, trace) => {
    const prepared = prepareStackTrace ? separateMessageFromStack(prepareStackTrace(error, trace)) : error;
    const transformed = transform ? transform(prepared) : prepared;
    return pretty(transformed);
  };
}

// Clean up Webpack's sourcemap namespacing in error stacks
// @see https://github.com/facebook/create-react-app/blob/next/packages/react-dev-utils/formatWebpackMessages.js#L112
const stackTransform = ({ stack = '', ...rest }) => ({
  stack: stack.replace('/build/webpack:', ''),
  ...rest
});

prettyErrors(stackTransform);
