import { ApolloLink } from '@apollo/client';

/**
 * ApolloClient server timing link
 * @param {@param {import('koa').Context} ctx} ctx
 */
export function apolloLinkServerTiming(ctx) {
  const { serverTiming } = ctx.state;

  return new ApolloLink((operation, forward) => {
    let name = operation.operationName;
    try {
      if (!name) {
        name = operation.query.definitions[0].selectionSet.selections
          .map(item => (item.kind === 'Field' ? item.name.value : ''))
          .join(', ');
      }
    } catch (e) {
      name = '<unknown>';
    }

    const qTimer = serverTiming.start(`> ${operation.query.definitions[0].operation}: ${name}`);
    return forward(operation).map(result => {
      serverTiming.stop(qTimer);
      return result;
    });
  });
}
