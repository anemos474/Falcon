/* eslint-disable import/newline-after-import */
import React from 'react';
import { HelmetProvider } from 'react-helmet-async';
import { I18nProvider } from '@deity/falcon-i18n';
import { FalconScopeProvider, FalconScope, GeoLocationProvider } from '@deity/falcon-front-kit';
import { HtmlHead } from './HtmlHead';
import { ClientOfFalconServer } from './ClientOfFalconServer';
import { CookiesProvider } from './CookiesProvider';
import { getFalconScope, setFalconScope } from './falconScopeConfig';
const Router =
  process.env.BUILD_TARGET === 'client'
    ? require('react-router-dom').BrowserRouter
    : require('react-router-dom').StaticRouter;

export const FalconClientApp = ({
  ctx,
  config,
  apolloClientCache,
  cacheInitialData,
  resolvers,
  i18next,
  scope,
  geoLocation,
  children
}) => {
  const isBrowser = process.env.BUILD_TARGET === 'client';

  return (
    <CookiesProvider ctx={ctx}>
      <FalconScopeProvider {...scope} get={getFalconScope} set={setFalconScope}>
        <GeoLocationProvider {...geoLocation}>
          <FalconScope>
            {falconScope => {
              i18next.changeLanguage(falconScope.current.languageTag);

              return (
                <ClientOfFalconServer
                  cache={apolloClientCache}
                  resolvers={resolvers}
                  config={config.apolloClient}
                  ctx={ctx}
                  graphqlUrl={config.graphqlUrl}
                  cacheInitialData={cacheInitialData}
                >
                  <I18nProvider i18n={i18next}>
                    <Router
                      basename={falconScope.pathBasename}
                      context={isBrowser ? undefined : ctx.state?.routerContext}
                      location={isBrowser ? undefined : ctx.url}
                    >
                      <HelmetProvider context={isBrowser ? undefined : ctx.state.helmetContext}>
                        <HtmlHead htmlLang={falconScope.current.languageTag} />
                        {children}
                      </HelmetProvider>
                    </Router>
                  </I18nProvider>
                </ClientOfFalconServer>
              );
            }}
          </FalconScope>
        </GeoLocationProvider>
      </FalconScopeProvider>
    </CookiesProvider>
  );
};
