import { Query, Pagination, PaginationInput, Aggregation, SortOrderValue } from '@deity/falcon-data';
import { Category, Product, FilterInput } from '@deity/falcon-shop-extension';
export declare const GET_CATEGORY_WITH_PRODUCT_LIST: import("@apollo/client").DocumentNode;
export declare type CategoryWithProductListResponse = Pick<Category, 'id' | 'name' | 'seo'> & {
    productList: {
        items: Pick<Product, 'id' | 'name' | 'price' | 'thumbnail' | 'urlPath'>[];
        pagination: Pick<Pagination, 'currentPage' | 'totalItems' | 'nextPage'>;
        aggregations: Pick<Aggregation, 'field' | 'type' | 'title' | 'buckets'>;
    };
};
export declare type CategoryWithProductListVariables = {
    categoryId?: string;
    sort?: SortOrderValue;
    pagination?: PaginationInput;
    filters?: FilterInput[];
};
export declare class CategoryWithProductListQuery extends Query<CategoryWithProductListResponse, CategoryWithProductListVariables> {
    static defaultProps: {
        query: import("@apollo/client").DocumentNode;
        fetchPolicy: string;
        fetchMore: (data: any, apolloFetchMore: any) => any;
    };
}
//# sourceMappingURL=CategoryWithProductListQuery.d.ts.map