import { LazyQueryHookOptions, QueryHookOptions } from '@apollo/client';
import { Query, OperationInput } from '@deity/falcon-data';
import { ProductDetailsInput, ProductDetails } from '@deity/falcon-shop-extension';
export declare const GET_PRODUCT_DETAILS_FROM_OPTIONS: import("@apollo/client").DocumentNode;
export declare type ProductDetailsFromOptionsResponse = {
    productDetailsFromOptions: ProductDetails;
};
export declare class ProductDetailsFromOptionsQuery extends Query<ProductDetailsFromOptionsResponse, OperationInput<ProductDetailsInput>> {
    static defaultProps: {
        query: import("@apollo/client").DocumentNode;
        fetchPolicy: string;
    };
}
export declare const useProductDetailsFromOptionsQuery: (options?: QueryHookOptions<ProductDetailsFromOptionsResponse, OperationInput<ProductDetailsInput>>) => import("@apollo/client").QueryResult<ProductDetailsFromOptionsResponse, OperationInput<ProductDetailsInput>>;
export declare const useProductDetailsFromOptionsLazyQuery: (options?: LazyQueryHookOptions<ProductDetailsFromOptionsResponse, OperationInput<ProductDetailsInput>>) => import("@apollo/client").QueryTuple<ProductDetailsFromOptionsResponse, OperationInput<ProductDetailsInput>>;
//# sourceMappingURL=ProductDetailsFromOptionsQuery.d.ts.map