import { MutationHookOptions } from '@apollo/client';
import { Mutation, OperationInput } from '@deity/falcon-data';
import { SignInInput, Customer } from '@deity/falcon-shop-extension';
export declare const SIGN_IN: import("@apollo/client").DocumentNode;
export declare type SignInResponse = {
    signIn: Pick<Customer, 'id'>;
};
export declare class SignInMutation extends Mutation<SignInResponse, OperationInput<SignInInput>> {
    static defaultProps: {
        refetchQueries: string[];
        awaitRefetchQueries: boolean;
        update: (store: any, { data: { signIn: customer } }: {
            data: {
                signIn: any;
            };
        }) => void;
        mutation: import("@apollo/client").DocumentNode;
    };
}
export declare const useSignInMutation: (options?: MutationHookOptions<SignInResponse, OperationInput<SignInInput>>) => import("@apollo/client").MutationTuple<{
    signIn: any;
}, OperationInput<SignInInput>>;
//# sourceMappingURL=SignInMutation.d.ts.map