"use strict";

exports.__esModule = true;
exports.useGetUserError = useGetUserError;

var _Error = /*#__PURE__*/require("../Error");

/**
 * React Hook which returns only user errors, and re-throw if any `ApolloError.NetworkError` or unhandled error exist
 */
function useGetUserError() {
  var throwError = (0, _Error.useThrowError)();
  /**
   * returns only user errors, and re-throw if any `ApolloError.NetworkError` or unhandled error exist
   * @param {Error} error
   */

  function get(error) {
    var userErrors = (0, _Error.tryGetUserError)(error);

    if (userErrors.length === 0) {
      throwError(error);
    }

    var result = [].concat(userErrors);

    result.getFieldErrors = function () {
      return userErrors.filter(function (x) {
        return x.path;
      }).reduce(function (prev, x) {
        var _Object$assign;

        return Object.assign({}, prev, (_Object$assign = {}, _Object$assign[x.path] = x.message, _Object$assign));
      }, {});
    };

    result.getFormErrors = function () {
      return userErrors.filter(function (x) {
        return !x.path;
      });
    };

    return result;
  }

  return get;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9FcnJvci91c2VHZXRVc2VyRXJyb3IudHMiXSwibmFtZXMiOlsidXNlR2V0VXNlckVycm9yIiwidGhyb3dFcnJvciIsImdldCIsImVycm9yIiwidXNlckVycm9ycyIsImxlbmd0aCIsInJlc3VsdCIsImdldEZpZWxkRXJyb3JzIiwiZmlsdGVyIiwieCIsInBhdGgiLCJyZWR1Y2UiLCJwcmV2IiwibWVzc2FnZSIsImdldEZvcm1FcnJvcnMiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7O0FBT0E7QUFDQTtBQUNBO0FBQ08sU0FBU0EsZUFBVCxHQUE4RDtBQUNuRSxNQUFNQyxVQUFVLEdBQUcsMkJBQW5CO0FBRUE7QUFDRjtBQUNBO0FBQ0E7O0FBQ0UsV0FBU0MsR0FBVCxDQUFtQ0MsS0FBbkMsRUFBbUU7QUFDakUsUUFBTUMsVUFBVSxHQUFHLDRCQUFnQkQsS0FBaEIsQ0FBbkI7O0FBRUEsUUFBSUMsVUFBVSxDQUFDQyxNQUFYLEtBQXNCLENBQTFCLEVBQTZCO0FBQzNCSixNQUFBQSxVQUFVLENBQUNFLEtBQUQsQ0FBVjtBQUNEOztBQUNELFFBQU1HLE1BQVcsYUFBT0YsVUFBUCxDQUFqQjs7QUFDQUUsSUFBQUEsTUFBTSxDQUFDQyxjQUFQLEdBQXdCO0FBQUEsYUFDdEJILFVBQVUsQ0FBQ0ksTUFBWCxDQUFrQixVQUFBQyxDQUFDO0FBQUEsZUFBSUEsQ0FBQyxDQUFDQyxJQUFOO0FBQUEsT0FBbkIsRUFBK0JDLE1BQS9CLENBQXNDLFVBQUNDLElBQUQsRUFBT0gsQ0FBUDtBQUFBOztBQUFBLGlDQUFtQkcsSUFBbkIsdUNBQTBCSCxDQUFDLENBQUNDLElBQTVCLElBQW1DRCxDQUFDLENBQUNJLE9BQXJDO0FBQUEsT0FBdEMsRUFBdUYsRUFBdkYsQ0FEc0I7QUFBQSxLQUF4Qjs7QUFFQVAsSUFBQUEsTUFBTSxDQUFDUSxhQUFQLEdBQXVCO0FBQUEsYUFBTVYsVUFBVSxDQUFDSSxNQUFYLENBQWtCLFVBQUFDLENBQUM7QUFBQSxlQUFJLENBQUNBLENBQUMsQ0FBQ0MsSUFBUDtBQUFBLE9BQW5CLENBQU47QUFBQSxLQUF2Qjs7QUFFQSxXQUFPSixNQUFQO0FBQ0Q7O0FBRUQsU0FBT0osR0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlVGhyb3dFcnJvciwgRXJyb3JNb2RlbCwgdHJ5R2V0VXNlckVycm9yIH0gZnJvbSAnLi4vRXJyb3InO1xuXG5leHBvcnQgdHlwZSBFcnJvck1vZGVsQXJyYXkgPSBBcnJheTxFcnJvck1vZGVsPiAmIHtcbiAgZ2V0RmllbGRFcnJvcnM6ICgpID0+IFJlY29yZDxzdHJpbmcsIEVycm9yTW9kZWw+O1xuICBnZXRGb3JtRXJyb3JzOiAoKSA9PiBFcnJvck1vZGVsW107XG59O1xuXG4vKipcbiAqIFJlYWN0IEhvb2sgd2hpY2ggcmV0dXJucyBvbmx5IHVzZXIgZXJyb3JzLCBhbmQgcmUtdGhyb3cgaWYgYW55IGBBcG9sbG9FcnJvci5OZXR3b3JrRXJyb3JgIG9yIHVuaGFuZGxlZCBlcnJvciBleGlzdFxuICovXG5leHBvcnQgZnVuY3Rpb24gdXNlR2V0VXNlckVycm9yKCk6IChlcnJvcjogRXJyb3IpID0+IEVycm9yTW9kZWxBcnJheSB7XG4gIGNvbnN0IHRocm93RXJyb3IgPSB1c2VUaHJvd0Vycm9yKCk7XG5cbiAgLyoqXG4gICAqIHJldHVybnMgb25seSB1c2VyIGVycm9ycywgYW5kIHJlLXRocm93IGlmIGFueSBgQXBvbGxvRXJyb3IuTmV0d29ya0Vycm9yYCBvciB1bmhhbmRsZWQgZXJyb3IgZXhpc3RcbiAgICogQHBhcmFtIHtFcnJvcn0gZXJyb3JcbiAgICovXG4gIGZ1bmN0aW9uIGdldDxURXJyb3IgZXh0ZW5kcyBFcnJvcj4oZXJyb3I6IFRFcnJvcik6IEVycm9yTW9kZWxBcnJheSB7XG4gICAgY29uc3QgdXNlckVycm9ycyA9IHRyeUdldFVzZXJFcnJvcihlcnJvcik7XG5cbiAgICBpZiAodXNlckVycm9ycy5sZW5ndGggPT09IDApIHtcbiAgICAgIHRocm93RXJyb3IoZXJyb3IpO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQ6IGFueSA9IFsuLi51c2VyRXJyb3JzXTtcbiAgICByZXN1bHQuZ2V0RmllbGRFcnJvcnMgPSAoKSA9PlxuICAgICAgdXNlckVycm9ycy5maWx0ZXIoeCA9PiB4LnBhdGgpLnJlZHVjZSgocHJldiwgeCkgPT4gKHsgLi4ucHJldiwgW3gucGF0aF06IHgubWVzc2FnZSB9KSwge30pO1xuICAgIHJlc3VsdC5nZXRGb3JtRXJyb3JzID0gKCkgPT4gdXNlckVycm9ycy5maWx0ZXIoeCA9PiAheC5wYXRoKTtcblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICByZXR1cm4gZ2V0O1xufVxuIl19