import React from 'react';
import { OperationVariables } from '@apollo/client';
import { MutationComponentOptions } from '@apollo/client/react/components';
export declare type MutationProps<TData, TVariables> = MutationComponentOptions<TData, TVariables>;
export declare class Mutation<TData extends object = any, TVariables extends OperationVariables = OperationVariables> extends React.Component<MutationProps<TData, TVariables>> {
    static propTypes: {
        mutation: import("prop-types").Validator<object>;
        variables: import("prop-types").Requireable<object>;
        optimisticResponse: import("prop-types").Requireable<object>;
        refetchQueries: import("prop-types").Requireable<((...args: any[]) => any) | (string | object)[]>;
        awaitRefetchQueries: import("prop-types").Requireable<boolean>;
        update: import("prop-types").Requireable<(...args: any[]) => any>;
        children: import("prop-types").Validator<(...args: any[]) => any>;
        onCompleted: import("prop-types").Requireable<(...args: any[]) => any>;
        onError: import("prop-types").Requireable<(...args: any[]) => any>;
        fetchPolicy: import("prop-types").Requireable<string>;
    };
    render(): JSX.Element;
}
//# sourceMappingURL=Mutation.d.ts.map