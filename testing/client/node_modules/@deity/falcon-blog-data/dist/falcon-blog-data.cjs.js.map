{"version":3,"file":"falcon-blog-data.cjs.js","sources":["../src/Post/PostQuery.tsx","../src/Post/PostListQuery.tsx","../src/Author/AuthorQuery.tsx","../src/Category/CategoryQuery.tsx","../src/Category/CategoryListQuery.tsx","../src/Page/PageQuery.tsx","../src/Page/PageListQuery.tsx"],"sourcesContent":["import { gql } from '@apollo/client';\nimport { Query } from '@deity/falcon-data';\nimport { BlogPost } from '@deity/falcon-blog-extension';\n\nexport const GET_BLOG_POST = gql`\n  query BlogPost($id: ID!) {\n    blogPost(id: $id) {\n      title\n      date\n      content\n      author {\n        id\n        name\n        slug\n      }\n      image {\n        url\n        description\n      }\n    }\n  }\n`;\n\nexport type BlogPostResponse = {\n  blogPost: Pick<BlogPost, 'title' | 'date' | 'content' | 'image' | 'author'>;\n};\n\nexport type BlogPostQueryVariables = {\n  id: string | number;\n};\n\nexport class BlogPostQuery extends Query<BlogPostResponse, BlogPostQueryVariables> {\n  static defaultProps = {\n    query: GET_BLOG_POST\n  };\n}\n","import { gql } from '@apollo/client';\nimport { Query, OperationInput } from '@deity/falcon-data';\nimport { BlogPost, BlogPostList, BlogPostListInput } from '@deity/falcon-blog-extension';\n\nexport const GET_BLOG_POST_LIST = gql`\n  query BlogPosts($input: BlogPostListInput) {\n    blogPostList(input: $input) {\n      items {\n        title\n        date\n        modified\n        slug\n        excerpt\n        author {\n          id\n          name\n          slug\n        }\n        image {\n          url\n          description\n        }\n      }\n      pagination {\n        currentPage\n        nextPage\n        prevPage\n        perPage\n        totalPages\n      }\n    }\n  }\n`;\n\nexport type BlogPostListResponse = {\n  blogPostList: Pick<BlogPostList, 'pagination'> & {\n    items: Pick<BlogPost, 'title' | 'date' | 'slug' | 'excerpt' | 'image' | 'author'>[];\n  };\n};\nexport type BlogPostListQueryVariables = OperationInput<BlogPostListInput>;\n\nexport class BlogPostListQuery extends Query<BlogPostListResponse, BlogPostListQueryVariables> {\n  static defaultProps = {\n    query: GET_BLOG_POST_LIST\n  };\n}\n","import { gql } from '@apollo/client';\nimport { Query } from '@deity/falcon-data';\nimport { Author } from '@deity/falcon-blog-extension';\n\nexport const GET_AUTHOR = gql`\n  query Author($id: ID!) {\n    author(id: $id) {\n      id\n      name\n      slug\n    }\n  }\n`;\n\nexport type AuthorResponse = {\n  author: Pick<Author, 'id' | 'name' | 'slug'>;\n};\n\nexport type AuthorQueryVariables = {\n  id: number;\n};\n\nexport class AuthorQuery extends Query<AuthorResponse, AuthorQueryVariables> {\n  static defaultProps = {\n    query: GET_AUTHOR\n  };\n}\n","import { gql } from '@apollo/client';\nimport { Query } from '@deity/falcon-data';\nimport { BlogCategory } from '@deity/falcon-blog-extension';\n\nexport const GET_BLOG_CATEGORY = gql`\n  query BlogCategory($id: ID!) {\n    blogCategory(id: $id) {\n      id\n      name\n    }\n  }\n`;\n\nexport type BlogCategoryResponse = {\n  blogCategory: Pick<BlogCategory, 'id' | 'name'>;\n};\n\nexport type BlogCategoryQueryVariables = {\n  id: number;\n};\n\nexport class BlogCategoryQuery extends Query<BlogCategoryResponse, BlogCategoryQueryVariables> {\n  static defaultProps = {\n    query: GET_BLOG_CATEGORY\n  };\n}\n","import { gql } from '@apollo/client';\nimport { OperationInput, PaginationQuery, Query } from '@deity/falcon-data';\nimport { BlogCategory, BlogCategoryList } from '@deity/falcon-blog-extension';\n\nexport const GET_BLOG_CATEGORY_LIST = gql`\n  query BlogCategoryList($input: BlogCategoryListInput) {\n    blogCategoryList(input: $input) {\n      items {\n        id\n        name\n      }\n    }\n  }\n`;\n\nexport type BlogCategoryListResponse = {\n  blogCategoryList: BlogCategoryList & {\n    items: Pick<BlogCategory, 'id' | 'name'>[];\n  };\n};\n\nexport type BlogCategoryListQueryVariables = OperationInput<PaginationQuery>;\n\nexport class BlogCategoryListQuery extends Query<BlogCategoryListResponse, BlogCategoryListQueryVariables> {\n  static defaultProps = {\n    query: GET_BLOG_CATEGORY_LIST\n  };\n}\n","import { gql } from '@apollo/client';\nimport { Query } from '@deity/falcon-data';\nimport { BlogPage } from '@deity/falcon-blog-extension';\n\nexport const GET_BLOG_PAGE = gql`\n  query BlogPage($id: ID!) {\n    blogPage(id: $id) {\n      title\n      date\n      content\n      author {\n        id\n        name\n        slug\n      }\n      image {\n        url\n        description\n      }\n    }\n  }\n`;\n\nexport type BlogPageResponse = {\n  blogPage: Pick<BlogPage, 'title' | 'date' | 'content' | 'image' | 'author'>;\n};\n\nexport type BlogPageQueryVariables = {\n  id: string | number;\n};\n\nexport class BlogPageQuery extends Query<BlogPageResponse, BlogPageQueryVariables> {\n  static defaultProps = {\n    query: GET_BLOG_PAGE\n  };\n}\n","import { gql } from '@apollo/client';\nimport { OperationInput, PaginationQuery, Query } from '@deity/falcon-data';\nimport { BlogPageList, BlogPage } from '@deity/falcon-blog-extension';\n\nexport const GET_BLOG_PAGE_LIST = gql`\n  query BlogPageList($input: BlogPageListInput) {\n    blogPageList(input: $input) {\n      items {\n        title\n        date\n        slug\n        excerpt\n        content\n        author {\n          id\n          name\n          slug\n        }\n        image {\n          url\n          description\n        }\n      }\n    }\n  }\n`;\n\nexport type BlogPageListResponse = {\n  blogPageList: BlogPageList & {\n    items: Pick<BlogPage, 'title' | 'date' | 'slug' | 'excerpt' | 'image' | 'author'>[];\n  };\n};\nexport type BlogPageListQueryVariables = OperationInput<PaginationQuery>;\n\nexport class BlogPageListQuery extends Query<BlogPageListResponse, BlogPageListQueryVariables> {\n  static defaultProps = {\n    query: GET_BLOG_PAGE_LIST\n  };\n}\n"],"names":["GET_BLOG_POST","BlogPostQuery","Query","defaultProps","query","GET_BLOG_POST_LIST","BlogPostListQuery","GET_AUTHOR","AuthorQuery","GET_BLOG_CATEGORY","BlogCategoryQuery","GET_BLOG_CATEGORY_LIST","BlogCategoryListQuery","GET_BLOG_PAGE","BlogPageQuery","GET_BLOG_PAGE_LIST","BlogPageListQuery"],"mappings":";;;;;;MAIaA,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAnB;AA2BP,AAAO,MAAMC,aAAN,SAA4BC,gBAA5B,CAA4E;AAAtED,cACJE,eAAe;EACpBC,KAAK,EAAEJ;;;MC7BEK,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAxB;AAqCP,AAAO,MAAMC,iBAAN,SAAgCJ,gBAAhC,CAAwF;AAAlFI,kBACJH,eAAe;EACpBC,KAAK,EAAEC;;;MCvCEE,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAhB;AAkBP,AAAO,MAAMC,WAAN,SAA0BN,gBAA1B,CAAsE;AAAhEM,YACJL,eAAe;EACpBC,KAAK,EAAEG;;;MCpBEE,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAvB;AAiBP,AAAO,MAAMC,iBAAN,SAAgCR,gBAAhC,CAAwF;AAAlFQ,kBACJP,eAAe;EACpBC,KAAK,EAAEK;;;MCnBEE,sBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA5B;AAmBP,AAAO,MAAMC,qBAAN,SAAoCV,gBAApC,CAAoG;AAA9FU,sBACJT,eAAe;EACpBC,KAAK,EAAEO;;;MCrBEE,aAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAnB;AA2BP,AAAO,MAAMC,aAAN,SAA4BZ,gBAA5B,CAA4E;AAAtEY,cACJX,eAAe;EACpBC,KAAK,EAAES;;;MC7BEE,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAAxB;AA8BP,AAAO,MAAMC,iBAAN,SAAgCd,gBAAhC,CAAwF;AAAlFc,kBACJb,eAAe;EACpBC,KAAK,EAAEW;;;;;;;;;;;;;;;;;;"}